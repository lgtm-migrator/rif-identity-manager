{"version":3,"sources":["ethrpc.ts","components/Buttons.tsx","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","config/getConfig.ts","app/Authenticated/components/Navigation.tsx","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/defi.ts","config/getTokenContracts.ts","storage/localStorage.ts","app/state/operations/defi.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","assets/images/icons/copy.svg","components/CopyButton/CopyButton.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","components/BalanceRow/BalanceRow.tsx","app/Dashboard/panels/DeFiSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","components/Modal/EditValueModal.tsx","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","app/DataVault/components/DeleteDvContentButton.tsx","app/DataVault/components/DecryptKey.tsx","app/DataVault/components/DownloadErrorMessage.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","providerContext.tsx","components/CredentialView/CredentialView.tsx","assets/images/icons/credential.svg","app/DataVault/components/PresentCredential.tsx","app/DataVault/panels/CredentialDisplay.tsx","assets/images/icons/download.svg","app/DataVault/panels/DownloadBackup.tsx","app/DataVault/DataVaultComponent.tsx","features/credentials.ts","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/DeFi/panels/Balance.tsx","app/DeFi/DeFiComponent.tsx","app/DeFi/DeFiContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["PROVIDERS","BaseButton","styled","button","LoginScreenComponent","handleLogin","useEffect","localStorage","getItem","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","SETTINGS","getProviderName","isNiftyWallet","NIFTY","isMetaMask","METAMASK","wc","WALLET_CONNECT","screens","getSetting","setting","Ethereum","Ropsten","Rinkeby","Goerli","Mainnet","Testnet","Kovan","Local","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","getBalanceName","BALANCE_NAME","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","3","4","5","30","31","42","5777","supportedChains","initialState","address","identitySlice","createSlice","name","reducers","changeAccount","state","payload","changeChainId","reset","_state","actions","didDocument","id","publicKey","authentication","ethrDidSlice","resolveDid","data","createDidFormat","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","add","registry","rpcUrl","resolverProviderConfig","networks","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","conversion","undefined","tokens","defiSlice","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","receiveBalance","receiveConversionBalance","usd","mapToCoinGeckoToAddress","getTokenContracts","ContractsMainnet","ContractsTestnet","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","JSON","parse","getSetTokenList","userAddress","allTokens","ethContract","EthContract","metadata","erc20","erc20abi","at","balanceOf","div","BN","pow","decimals","toNumber","console","log","getTokenWithMetadata","onComplete","token","getCode","Error","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","getConversionRates","geckoIds","COIN_GECKO_IDS","getCoinGeckoIdsForNetwork","Axios","get","geckoId","declarativeDetails","credentials","storage","getBucket","endsWith","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","bucket","swapContentById","receiveStorageInformation","receiveKeys","keys","forEach","getEncryptionManager","a","AsymmetricEncryptionManager","fromWeb3Provider","SignerEncryptionManager","createClient","serviceUrl","AllNetworks","dataVaultUrl","authManager","AuthManager","personalSign","request","method","params","encryptionManager","DataVaultWebClient","createDataVaultContent","client","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","dataVaultStart","callback","getStorageInformation","getKeys","getDataVaultKeys","login","context","connect","setProvider","getTokenList","getBalance","Math","dvClient","_error","setDvClient","resetReducers","resetDV","resetDefi","resetEthrDid","resetIdentity","logout","clearCachedProvider","removeItem","Object","startsWith","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","LoadingComponent","EditPersonaModal","initValue","updatePersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","changeInputValue","evt","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","DEFI","DATAVAULT","IDENTITY","CopyButton","showResponse","setShowResponse","copyTextField","useRef","current","select","document","execCommand","setTimeout","CopyIcon","defaultValue","ref","position","left","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","IdentityInformationPanel","BarWrapper","BarProgress","ProgressBar","total","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","marginTop","BalanceRow","original","shorten","parseFloat","toFixed","round","DeFiSummary","featuredToken","converstion","DashboardScreen","featuredTokens","changeScreen","IdentitySummary","identity","defi","datavault","userAddr","tokenAddr","DasboardScreen","EditValueModal","onConfirm","inputType","strings","editable","setEditable","sharedProps","intro","label","submit","BinaryModal","onDeny","text","deny","confirm","DeleteDvContentButton","itemKey","deleteValue","isDeleting","setIsDeleting","trashIcon","finally","DecryptKey","handleGetContent","DownloadErrorMessage","keyError","DeclarativeDetailsDisplay","details","swapValue","getKeyContent","isDownloadError","setIsDownloadError","isEditing","setIsEditing","isGettingContent","setIsGettingContent","declarativeIcon","hasEmpty","showDownloadMessage","replace","k","includes","pencilIcon","newValue","existingItem","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","toUpperCase","Web3ProviderContext","React","createContext","Web3ProviderElement","initialContext","Provider","CredentialView","jwt","showRaw","setShowRaw","setError","prettyJson","setPrettyJson","jwtDecode","PresentCredential","createPresentation","setState","handleCreate","presentationLink","CredentialDisplay","CredentialIcon","DownloadBackup","handleDownload","initStatus","setStatus","downloadIcon","DataVaultComponent","downloadBackup","useContext","handleDelete","handleGetKeyContent","vpPayload","vp","verifiableCredential","nbf","floor","Date","getTime","exp","createJWT","alg","issuer","signer","fromRpcSig","v","r","s","recoveryParam","getBackup","element","createElement","URL","createObjectURL","Blob","download","body","appendChild","click","remove","getDataVaultContent","DelegateComponent","delegates","addDelegate","isOwner","isAdding","setIsAdding","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidAddress","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","ethrdid","EthrDID","setDidOwner","delegateType","setAttribute","Balance","newAddress","setNewAddress","togglePopup","DeFiComponent","AuthenticatedComponent","modifyMultipleItems","logoutOrSwitchAccounts","screen","setScreen","handleWalletChange","isLoggingOut","removeAllListeners","on","HeaderComponent","items","DashboardContainer","DataVaultContainer","IdentityContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","rootReducer","combineReducers","identityReducer","ethrdidReducer","defiReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.3da1d289.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n\nexport enum PROVIDERS {\n  METAMASK = 'METAMASK',\n  NIFTY = 'NIFTY',\n  WALLET_CONNECT = 'WALLET_CONNECT'\n}\n\n/**\n * Return the Provider Name. Used to detect DataVault features\n * @param provider web3Provider\n */\nexport const getProviderName = (provider: any) => {\n  if (provider.isNiftyWallet) {\n    return PROVIDERS.NIFTY\n  }\n  if (provider.isMetaMask) {\n    return PROVIDERS.METAMASK\n  }\n  if (provider.wc) {\n    return PROVIDERS.WALLET_CONNECT\n  }\n}\n","import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React, { useEffect } from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  useEffect(() => {\n    if (localStorage.getItem('WEB3_CONNECT_CACHED_PROVIDER')) {\n      handleLogin()\n    }\n  }, [])\n\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","/* eslint-disable no-unused-vars */\nimport AllNetworks from './config.json'\nimport Ethereum from './config.ethereum.json'\nimport Ropsten from './config.ropsten.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Kovan from './config.kovan.json'\nimport Rinkeby from './config.rinkeby.json'\nimport Goerli from './config.goerli.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  BALANCE_NAME = 'balanceName',\n  COIN_GECKO_IDS = 'coinGeckoIds'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 3: return Ropsten[setting]\n    case 4: return Rinkeby[setting]\n    case 5: return Goerli[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 42: return Kovan[setting]\n    default: return Local[setting]\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getDataVault = () => AllNetworks.dataVaultUrl\nexport const getBalanceName = (chainId: number) => getSetting(chainId, SETTINGS.BALANCE_NAME) as string\nexport const getCoinGeckoIdsForNetwork = (chainId: number) => getSetting(chainId, SETTINGS.COIN_GECKO_IDS) as string\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity',\n  DEFI = 'defi'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n  logout: () => void\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick, logout }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'dashboard active' : 'dashboard'}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        <li className={selected === screens.DEFI ? 'defi active' : 'defi'}>\n          <button onClick={() => handleClick(screens.DEFI)}>DeFi Assets</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'datavault active' : 'datavault'}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n        <li className=\"logout\"><button onClick={logout}>Logout</button></li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          3: getRPCUrl(3),\n          4: getRPCUrl(4),\n          5: getRPCUrl(5),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          42: getRPCUrl(42),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 3, 4, 5, 30, 31, 42, 5777]\n})\n\nexport const clearRloginStorage = () => {\n  localStorage.removeItem('RLOGIN_ACCESS_TOKEN')\n  localStorage.removeItem('RLOGIN_REFRESH_TOKEN')\n  localStorage.removeItem('WEB3_CONNECT_CACHED_PROVIDER')\n  localStorage.removeItem('walletconnect')\n\n  Object.keys(localStorage).map((key: string) => {\n    if (key.startsWith('DV_ACCESS_TOKEN') || key.startsWith('DV_REFRESH_TOKEN')) {\n      localStorage.removeItem(key)\n    }\n  })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { changeAccount, changeChainId, reset } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { resolveDid, reset } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:${address}`\n    case 3: return `did:ethr:ropsten:${address}`\n    case 4: return `did:ethr:rinkeby:${address}`\n    case 5: return `did:ethr:goerli:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 42: return `did:ethr:kovan:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nconst add = (name: string, chainId: number) => ({ name, registry: getDIDRegistryAddress(chainId), rpcUrl: getRPCUrl(chainId) })\n\nexport const resolverProviderConfig = {\n  networks: [\n    add('mainnet', 1),\n    add('ropsten', 3),\n    add('rinkeby', 4),\n    add('goerli', 5),\n    add('rsk', 30),\n    add('rsk:testnet', 31),\n    add('kovan', 31),\n    add('development', 5777)\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null,\n  conversion?: number\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0,\n  conversion: undefined\n}\n\nexport interface DefiState {\n  tokens: Token[],\n  balance: number | null,\n  conversion: number | null\n}\n\nexport const initialState = {\n  tokens: [],\n  balance: null,\n  conversion: null\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst defiSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: DefiState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    },\n    receiveBalance (state: DefiState, { payload: { balance } }: PayloadAction<{ balance: number }>) {\n      state.balance = balance\n    },\n    receiveConversionBalance (state: DefiState, { payload: { usd } }: PayloadAction<{ usd: number }>) {\n      state.conversion = usd\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { addTokenData, receiveBalance, receiveConversionBalance, reset } = defiSlice.actions\n\nexport default defiSlice.reducer\n","import ContractsTestnet from '@rsksmart/rsk-testnet-contract-metadata'\nimport ContractsMainnet from '@rsksmart/rsk-contract-metadata'\n\nexport interface TokenMetadata {\n  name: string\n  logo: string\n  erc20: boolean\n  symbol: string\n  decimals: number\n}\n\nexport interface TokenMetadataPair {\n  [address: string] : TokenMetadata\n}\n\nconst getTokenContracts = (chainId: number) => {\n  switch (chainId) {\n    case 30: return ContractsMainnet\n    case 31: return ContractsTestnet\n    default: return null\n  }\n}\n\n/**\n * Converts CoinGecko coin Ids to their address or to the defaultBalance\n * @param symbol CoinGecko's coin/token Id\n * @param chainId ChainId of the network\n */\nexport const mapToCoinGeckoToAddress = (symbol: string, chainId: number) => {\n  switch (symbol) {\n    case 'ethereum':\n    case 'bitcoin':\n      return 'defaultBalance'\n    case 'rif-token':\n      return chainId === 30\n        ? '0x2aCc95758f8b5F583470bA265Eb685a8f45fC9D5' : '0x19f64674D8a5b4e652319F5e239EFd3bc969a1FE'\n    default: return null\n  }\n}\n\nexport default getTokenContracts\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData, receiveBalance, receiveConversionBalance } from '../reducers/defi'\nimport getTokenContracts, { TokenMetadataPair, TokenMetadata, mapToCoinGeckoToAddress } from '../../../config/getTokenContracts'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\nimport Axios, { AxiosResponse } from 'axios'\nimport { getCoinGeckoIdsForNetwork } from '../../../config/getConfig'\n\nexport const getTokenList = (provider: any, chainId: number, userAddress: string) => (dispatch: Dispatch<any>) => {\n  // get the set token list for the specific chainId\n  dispatch(getSetTokenList(provider, userAddress, chainId))\n\n  // get conversion rates for tokenlist that are in CoinGecko\n  dispatch(getConversionRates(chainId))\n\n  // local tokens that were saved in localStorage\n  const localTokens = getValueFromLocalStorage(chainId.toString(), 'TOKEN') ? getValueFromLocalStorage(chainId.toString(), 'TOKEN') : []\n  localTokens.map((address: string) => {\n    dispatch(getTokenWithMetadata(provider, address, userAddress))\n  })\n}\n\n/**\n * Loops through the contract metadata as specificed by @rsksmart/rsk-[testnet-]contract-metadata\n * @param provider web3 provider\n * @param userAddress users Address\n * @param chainId id of the network\n */\nconst getSetTokenList = (provider: any, userAddress: string, chainId: number) => (dispatch: Dispatch<any>) => {\n  const allTokens = getTokenContracts(chainId) as TokenMetadataPair\n  if (!allTokens) {\n    return\n  }\n\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  for (const address in allTokens) {\n    const metadata = allTokens[address] as TokenMetadata\n\n    if (metadata.erc20) {\n      ethContract(erc20abi).at(address).balanceOf(userAddress)\n        .then((balance: BN[]) => balance[0])\n        .then((balance: BN) => balance.div(new BN(10).pow(new BN(metadata.decimals))).toNumber())\n        .then((balance: number) => {\n          if (balance !== 0) {\n            dispatch(addTokenData({ data: { address, balance, name: metadata.name, symbol: metadata.symbol } }))\n          }\n        })\n        .catch((err: Error) => console.log('balanceOf error', err))\n    }\n  }\n}\n\n/**\n * Get balance and metadata for a specific token\n * @param provider web3 Provider\n * @param address contract address\n * @param userAddress address of the user to query balance\n * @param onComplete callback function to be called\n */\nexport const getTokenWithMetadata = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\n/**\n * Watch a custom token that the user has inputed the address for\n * @param provider web3 provider\n * @param userAddress user's address\n * @param address contract address to query\n * @param chainId chain Id\n */\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getTokenWithMetadata(provider, address, userAddress, onComplete))\n  })\n\n/**\n * Get the default balance of the user\n * @param provider web3 provider\n * @param address address of the user\n */\nexport const getBalance = (provider: any, address: string) => (dispatch: Dispatch<any>) =>\n  new Eth(provider).getBalance(address)\n    .then((balance: BN) => parseInt(balance.toString()))\n    .then((balance: number) => balance / Math.pow(10, 18))\n    .then((balance:number) => dispatch(receiveBalance({ balance })))\n\n/**\n * Gets the Token to USD conversion rate\n * @param address Token address, used for storing it in redux\n * @param geckoIds Ids of the coin for coingecko's AIP\n */\nexport const getConversionRates = (chainId: number) => (dispatch: Dispatch<any>) => {\n  const geckoIds = getCoinGeckoIdsForNetwork(chainId)\n  if (!geckoIds) {\n    return\n  }\n\n  Axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${geckoIds}&vs_currencies=usd`)\n    .then((response: AxiosResponse) => response.data)\n    .then((data: { [name: string]: { usd: number } }) => {\n      for (const geckoId in data) {\n        const address = mapToCoinGeckoToAddress(geckoId, chainId)\n        if (address === 'defaultBalance') {\n          dispatch(receiveConversionBalance(data[geckoId]))\n        } else if (address) {\n          dispatch(addTokenData({ data: { address: address, conversion: data[geckoId].usd } }))\n        }\n      }\n    })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  declarativeDetails: {},\n  credentials: {},\n  storage: undefined\n}\n\nconst getBucket = (key: string) => key.endsWith('Credential') ? 'credentials' : 'declarativeDetails'\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state[getBucket(key)][key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.declarativeDetails[key] ? state.declarativeDetails[key].push(content) : state.declarativeDetails[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      const bucket = getBucket(key)\n      state[bucket][key] = state[bucket][key].filter((item: DataVaultContent) => item.id !== id)\n\n      if (state[bucket][key].length === 0) {\n        delete state[bucket][key]\n      }\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    },\n    receiveKeys (state: DataVaultState, { payload: { keys } }: PayloadAction<{ keys: string[] }>) {\n      keys.forEach((key: string) => {\n        key.endsWith('Credential') ? state.credentials[key] = [] : state.declarativeDetails[key] = []\n      })\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation, receiveKeys, reset } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient, { AuthManager, AsymmetricEncryptionManager, SignerEncryptionManager } from '@rsksmart/ipfs-cpinner-client'\n\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey, receiveKeys } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { Backup, CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\nimport { getProviderName, PROVIDERS } from '../../../ethrpc'\nimport { IEncryptionManager } from '@rsksmart/ipfs-cpinner-client/lib/encryption-manager/types'\n\n/**\n * Helper function that returns the correct encryption method\n * @param provider web3 provider\n */\nconst getEncryptionManager = async (provider: any) =>\n  getProviderName(provider) === PROVIDERS.METAMASK\n    ? await AsymmetricEncryptionManager.fromWeb3Provider(provider)\n    : await SignerEncryptionManager.fromWeb3Provider(provider)\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const serviceUrl = getDataVault()\n  const did = createDidFormat(address, chainId).toLowerCase()\n  const personalSign = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n  const authManager = new AuthManager({ did, serviceUrl, personalSign })\n\n  return getEncryptionManager(provider)\n    .then((encryptionManager: IEncryptionManager) =>\n      new DataVaultWebClient({ serviceUrl, authManager, encryptionManager }))\n}\n\n/**\n * Get all keys and from the datavault\n * @param client DataVault client\n */\nexport const getDataVaultKeys = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) => dispatch(receiveKeys({ keys })))\n\n/**\n * Get all content from a specific key from the datavault\n * @param client DataVault client\n * @param key string\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, key: string) => (dispatch: Dispatch<any>) =>\n  client.get({ key })\n    .then((content: any) => content as DataVaultContent[])\n    .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n\n/**\n * Start the Data Vault Client\n * Request StorageInformation first, which will save the access token with the DataVault Service\n * in localStorage. Then request the content from the data vault.\n * @param provider Web3 Provider\n * @param address User Address\n * @param chainId ChainId\n * @param callback Function\n */\nexport const dataVaultStart = (provider: any, address: string, chainId: number, callback?: any) => (dispatch: Dispatch<any>) => {\n  const client = createClient(provider, address, chainId)\n\n  client.then((client: DataVaultWebClient) => client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => {\n      dispatch(receiveStorageInformation({ storage }))\n      dispatch(getDataVaultKeys(client))\n      callback(client)\n    })\n    .catch((err: any) => callback(null, err))\n  )\n}\n\n/**\n * Download backup text file from the DataVault\n * @param client DataVault Client\n */\nexport const downloadBackup = (client: DataVaultWebClient) =>\n  client.getBackup()\n    .then((value: Backup) => JSON.stringify(value))\n    .then((value: string) => {\n      const element = document.createElement('a')\n      element.href = URL.createObjectURL(new Blob([value], { type: 'text/plain;charset=utf-8' }))\n      element.download = 'dataVaultBackup.txt'\n      document.body.appendChild(element)\n      element.click()\n      element.remove()\n    })\n","import { Dispatch } from 'react'\n\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin, clearRloginStorage } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId, reset as resetIdentity } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getBalance, getTokenList } from './defi'\nimport { dataVaultStart } from './datavault'\n\nimport { reset as resetDV } from '../reducers/datavault'\nimport { reset as resetDefi } from '../reducers/defi'\nimport { reset as resetEthrDid } from '../reducers/ethrdid'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, parseInt(chainId), address))\n      dispatch(getBalance(provider, address))\n\n      const callback = (dvClient: any, _error: any) => context.setDvClient(dvClient)\n      dispatch(dataVaultStart(provider, address, chainId, callback))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n\n/**\n * Dispatch reset on all reducers back to InitialState\n */\nexport const resetReducers = () => (dispatch: Dispatch<any>) => {\n  dispatch(resetDV())\n  dispatch(resetDefi())\n  dispatch(resetEthrDid())\n  dispatch(resetIdentity())\n}\n\n/**\n * Logout of App completely removing localStorage, resetting reducers, and restting context\n */\nexport const logout = () => (dispatch: Dispatch<any>) => {\n  rLogin.clearCachedProvider()\n  clearRloginStorage()\n  dispatch(resetReducers())\n}\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 3: return 'Ropsten Testnet'\n    case 4: return 'Rinkeby Testnet'\n    case 5: return 'Görli Testnet'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    case 42: return 'Kovan Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  opacity: 0;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  margin-top:25px;\n  top: 0px;\n  transition: opacity .6s;\n  display: block;\n  min-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover {\n    ${HoverSpan} {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <HoverTrigger className={className}>\n    {children}\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </HoverTrigger>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  useEffect(() => {\n    setIsError(null)\n    setIsLoading(false)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n  }, [initValue])\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={() => setShowModal(true)}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        <div>\n          <h2>Edit Persona</h2>\n          {truncateAddressDid(did)}\n          <p>You can edit your personal that be saved in your data vault.</p>\n\n          <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n          <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n          <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n          <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n          <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n          <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n          <p>\n            <BaseButton\n              className=\"save blue\"\n              onClick={save}\n              disabled={isLoading}\n            >Save</BaseButton></p>\n\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== ''\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/copy.713b200d.svg\";","import React, { useRef, useState } from 'react'\nimport CopyIcon from '../../assets/images/icons/copy.svg'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const [showResponse, setShowResponse] = useState<boolean>(false)\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    setShowResponse(true)\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n    setTimeout(() => {\n      setShowResponse(false)\n    }, 1000)\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" onClick={handleClick} className=\"icon\">\n        <img src={CopyIcon} alt=\"Copy text\" />\n      </button>\n      {showResponse && <span className=\"response\">Copied to clipboard.</span>}\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  address: string\n  chainId: number\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId }) => {\n  const did = createDidFormat(address, chainId)\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Persona information\"\n          className=\"identity-information\"\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Persona DID</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                <CopyButton value={did} />\n              </p>\n            </div>\n            <div className=\"column\">\n              <h2>Persona Address</h2>\n              <p className=\"value\">\n                {address}\n                <CopyButton value={address} />\n              </p>\n            </div>\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <button className=\"link\" style={{ marginTop: -10 }} onClick={handleButton}>View your DataVault</button>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\n\ninterface BalanceRowInterface {\n  name?: string | null\n  balance?: number | null\n  symbol?: string | null\n  className?: string\n  conversion?: number\n}\n\nconst BalanceRow: React.FC<BalanceRowInterface> = ({ name, balance, symbol, className, conversion }) => {\n  const shorten = (original: number | null | undefined) => {\n    if (!original) { return original }\n    const shorten = parseFloat(original.toFixed(6))\n    return shorten === original ? original : shorten\n  }\n\n  return (\n    <div className={className ? `balance-row ${className}` : 'balance-row'}>\n      <h2>{name}</h2>\n      <div>\n        <span className=\"balance\">{shorten(balance)}</span>\n        <span className=\"symbol\">{symbol}</span>\n        {(conversion && balance) && <span className=\"conversion\">${Math.round(conversion * balance * 100) / 100} USD</span>}\n      </div>\n    </div>\n  )\n}\n\nexport default BalanceRow\n","import React from 'react'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport { getBalanceName } from '../../../config/getConfig'\nimport { Token } from '../../state/reducers/defi'\n\ninterface DeFiSummaryInterface {\n  balance: number | null\n  converstion: number | null\n  chainId?: number | null\n  featuredToken?: Token\n  handleButton: () => void\n}\n\nconst DeFiSummary: React.FC<DeFiSummaryInterface> = ({ balance, chainId, featuredToken, converstion, handleButton }) =>\n  balance && chainId\n    ? (\n      <Panel title={<>DeFi Summary</>} className=\"defi\">\n        <div className=\"container balance\">\n          <div className=\"columnDobule\">\n            <BalanceRow\n              name=\"Balance\"\n              balance={balance}\n              symbol={getBalanceName(chainId)}\n              conversion={converstion || undefined}\n            />\n            {featuredToken && (\n              <BalanceRow\n                name={featuredToken.name}\n                balance={featuredToken.balance}\n                symbol={featuredToken.symbol}\n                conversion={featuredToken.conversion || undefined}\n              />\n            )}\n          </div>\n        </div>\n        <BaseButton onClick={handleButton} className=\"turquoise\">More Defi</BaseButton>\n      </Panel>\n    )\n    : <></>\n\nexport default DeFiSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport DeFiSummary from './panels/DeFiSummary'\nimport { Token } from '../state/reducers/defi'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  storage?: DataVaultStorageState\n  balance: number | null\n  featuredTokens?: Token[]\n  converstion: number | null\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, storage, balance, featuredTokens, converstion, changeScreen\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      {address && chainId && <IdentitySummary address={address} chainId={chainId} />}\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeFiSummary\n            balance={balance}\n            converstion={converstion}\n            chainId={chainId}\n            featuredToken={featuredTokens ? featuredTokens[0] : undefined}\n            handleButton={() => changeScreen(screens.DEFI)}\n          />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\nimport { Token } from '../state/reducers/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.defi.tokens,\n  balance: state.defi.balance,\n  converstion: state.defi.conversion,\n  featuredTokens: state.defi.tokens.filter((token: Token) => token.symbol === 'RIF' || token.symbol === 'tRIF'),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  error?: string | null\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, error, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n      {error && <div className=\"alert error\">{error}</div>}\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState } from 'react'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport { DataVaultContent } from '../../state/reducers/datavault'\n\ninterface Interface {\n  itemKey: string\n  item: DataVaultContent\n  deleteValue: (key: string, id: string) => Promise<any>\n}\n\nconst DeleteDvContentButton: React.FC<Interface> = ({\n  itemKey, item, deleteValue\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<boolean>(false)\n\n  const handleDeleteItem = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(itemKey, item.id)\n      .then(() => setIsDeleting(false))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <>\n      <button\n        disabled={isLoading}\n        className=\"icon delete\"\n        onClick={() => setIsDeleting(true)}>\n        <img src={trashIcon} alt=\"Delete Item\" />\n      </button>\n\n      <BinaryModal\n        show={isDeleting}\n        onClose={() => setIsDeleting(false)}\n        onConfirm={handleDeleteItem}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n        error={isError}\n      />\n    </>\n  )\n}\n\nexport default DeleteDvContentButton\n","import React from 'react'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface DecryptKeyInterface {\n  handleGetContent: () => void\n  disabled: boolean\n}\n\nconst DecryptKey: React.FC<DecryptKeyInterface> = ({\n  handleGetContent, disabled\n}) => {\n  return (\n    <div className=\"decrypt\">\n      <BaseButton\n        className=\"gray small\"\n        onClick={handleGetContent}\n        disabled={disabled}>\n        Download\n      </BaseButton>\n    </div>\n  )\n}\n\nexport default DecryptKey\n","import React from 'react'\n\ninterface DownloadErrorMessageInterface {\n keyError: string\n}\n\nconst DownloadErrorMessage: React.FC<DownloadErrorMessageInterface> = ({ keyError }) => (\n  <p className=\"alert error\">This content is encrypted, and your wallet is unable to decrypt the key <em>{keyError}</em>.</p>\n)\n\nexport default DownloadErrorMessage\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport DecryptKey from '../components/DecryptKey'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  getKeyContent: (key: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue, getKeyContent }) => {\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleGetContent = (key: string) => {\n    setIsDownloadError(null)\n    setIsGettingContent([...isGettingContent, key])\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => {\n        setIsGettingContent(isGettingContent.filter((k: string) => k !== key))\n      })\n  }\n\n  const showDownloadMessage = () => {\n    const keys = Object.keys(details)\n    if (keys.length === 0) {\n      return false\n    }\n\n    let hasEmpty = false\n    for (var key in details) {\n      if (details[key].length === 0) {\n        hasEmpty = true\n      }\n    }\n    return hasEmpty\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      {showDownloadMessage() && <p className=\"intro\">Click on the download button to decrypt the content. Your wallet will request to decrypt each piece of content.</p>}\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key.replace('DD_', '')}</td>\n                <td>\n                  {details[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                  {details[key].map((item: DataVaultContent) => (\n                    <div className=\"content-row\" key={item.id}>\n                      <div className=\"content break-all\">\n                        <p>{item.content}</p>\n                      </div>\n                      <div className=\"options\">\n                        <button\n                          disabled={isLoading}\n                          className=\"icon edit\"\n                          onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                        >\n                          <img src={pencilIcon} alt=\"Edit item\" />\n                        </button>\n                        <DeleteDvContentButton itemKey={key} item={item} deleteValue={deleteValue} />\n                      </div>\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            )\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(`DD_${type.toUpperCase()}`, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"alert error\">\n          <p>{isError}</p>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n  reset: () => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null,\n  reset: () => {}\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient | null) => setDvClient(client),\n    reset: () => {\n      setProvider(null)\n      setDvClient(null)\n    }\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { ReactNode, useEffect, useState } from 'react'\nimport jwtDecode from 'jwt-decode'\n\ninterface CredentialViewInterface {\n  jwt: string\n  options?: ReactNode\n}\n\nconst CredentialView: React.FC<CredentialViewInterface> = ({ jwt, options }) => {\n  const [showRaw, setShowRaw] = useState<boolean>(false)\n  const [error, setError] = useState<null | string>(null)\n  const [prettyJson, setPrettyJson] = useState<string>('')\n\n  useEffect(() => {\n    try {\n      setPrettyJson(JSON.stringify(jwtDecode(jwt), null, 2))\n    } catch (err) {\n      setError(err.message)\n      setShowRaw(true)\n    }\n  }, [jwt])\n\n  return (\n    <div className=\"content-row\">\n      <div className=\"content\">\n        {prettyJson && (\n          <div className=\"break-all\">\n            <textarea\n              defaultValue={prettyJson}\n              disabled={true}></textarea>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert error\">\n            <strong>Could not decode credential!</strong><br />\n            <em>The raw data is displayed below.</em>\n          </div>\n        )}\n\n        {showRaw && <div className=\"raw break-all\">{jwt}</div>}\n      </div>\n      {!error && (\n        <div className=\"options\">\n          <button className=\"icon raw\" onClick={() => setShowRaw(!showRaw)}>{showRaw ? 'Hide' : 'View'} Raw</button>\n          {options}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CredentialView\n","export default __webpack_public_path__ + \"static/media/credential.436c18a7.svg\";","import React, { useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface PresentCredentialInterface {\n  jwt: string\n  createPresentation: (jwt: string) => Promise<string>\n}\n\nconst PresentCredential: React.FC<PresentCredentialInterface> = ({ jwt, createPresentation }) => {\n  interface stateInterface {\n    status: 'NONE' | 'LOADING' | 'DONE' | 'ERROR'\n    message: string\n  }\n  const initialState: stateInterface = { status: 'NONE', message: '' }\n  const [state, setState] = useState<stateInterface>(initialState)\n\n  const handleCreate = () => {\n    setState({ status: 'LOADING', message: '' })\n    createPresentation(jwt)\n      .then((message: string) => setState({ status: 'DONE', message }))\n      .catch((error: Error) => setState({ status: 'ERROR', message: error.message }))\n  }\n\n  const presentationLink = state.status === 'DONE' ? `https://rsksmart.github.io/rif-credential-verifier/?jwt=${state.message}` : ''\n\n  return (\n    <>\n      <button className=\"icon\" onClick={handleCreate}>Present</button>\n      <Modal show={state.status !== 'NONE'} onClose={() => setState(initialState)} title=\"Present Credential\">\n        {state.status === 'LOADING' && <LoadingComponent />}\n        {state.status === 'DONE' && (\n          <div>\n            <h2>Sharable link:</h2>\n            <textarea defaultValue={presentationLink} className=\"sharableLink\" />\n            <p><CopyButton value={presentationLink} /></p>\n            <p>\n              <a href={presentationLink} target=\"_blank\" rel=\"noreferrer\">\n                Open in new window\n              </a>\n            </p>\n          </div>\n        )}\n        {state.status === 'ERROR' && (\n          <>\n            <p className=\"alert error\">{state.message}</p>\n            <p><BaseButton onClick={handleCreate}>Try Again</BaseButton></p>\n          </>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default PresentCredential\n","import React, { useState } from 'react'\nimport CredentialView from '../../../components/CredentialView/CredentialView'\nimport Panel from '../../../components/Panel/Panel'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport CredentialIcon from '../../../assets/images/icons/credential.svg'\nimport DecryptKey from '../components/DecryptKey'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport PresentCredential from '../components/PresentCredential'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface CredentialDisplayInterface {\n  credentials: DataVaultKey\n  getKeyContent: (key: string) => Promise<any>\n  deleteValue: (key: string, id: string) => Promise<any>\n  createPresentation: (jwt: string) => Promise<any>\n}\n\nconst CredentialDisplay: React.FC<CredentialDisplayInterface> = ({ credentials, getKeyContent, deleteValue, createPresentation }) => {\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const handleGetContent = (key: string) => {\n    setIsGettingContent([...isGettingContent, key])\n    setIsDownloadError(null)\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => setIsGettingContent(isGettingContent.filter((k: string) => k !== key)))\n  }\n\n  return (\n    <Panel title={<><img src={CredentialIcon} /> Credentials</>} className=\"display credentials\">\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(credentials).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>\n                  <ul>\n                    {credentials[key].map((item: DataVaultContent) =>\n                      <li key={item.id}>\n                        <CredentialView\n                          jwt={item.content}\n                          options={<>\n                            <div><PresentCredential jwt={item.content} createPresentation={createPresentation} /></div>\n                            <div><DeleteDvContentButton item={item} itemKey={key} deleteValue={deleteValue} /></div>\n                          </>}\n                        />\n                      </li>)}\n                  </ul>\n                  {credentials[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Panel>\n  )\n}\n\nexport default CredentialDisplay\n","export default __webpack_public_path__ + \"static/media/download.b2edd61f.svg\";","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport downloadIcon from '../../../assets/images/icons/download.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface DownloadBackupInterface {\n  handleDownload: () => Promise<any>\n}\n\nconst DownloadBackup: React.FC<DownloadBackupInterface> = ({\n  handleDownload\n}) => {\n  const initStatus = { isLoading: false, isError: null }\n  const [status, setStatus] = useState<{ isLoading: boolean; isError: string | null }>({\n    isLoading: false,\n    isError: null\n  })\n\n  const download = () => {\n    setStatus({ ...initStatus, isLoading: true })\n    handleDownload()\n      .then(() => setStatus(initStatus))\n      .catch((error: Error) => setStatus({ ...initStatus, isError: error.message }))\n  }\n\n  return (\n    <Panel title={<><img src={downloadIcon} /> Download Backup</>}>\n      <p>Download a backup file of all the keys and IPFS hashes that are stored in the DataVault.</p>\n      <p><BaseButton onClick={download} disabled={status.isLoading} className=\"small\">\n        Download Backup\n      </BaseButton></p>\n      {status.isLoading && <LoadingComponent />}\n      {status.isError && <div className=\"alert error\">{status.isError}</div>}\n    </Panel>\n  )\n}\n\nexport default DownloadBackup\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\nimport CredentialDisplay from './panels/CredentialDisplay'\nimport DownloadBackup from './panels/DownloadBackup'\nimport { createPresentation } from '../../features/credentials'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n  downloadBackup: (client: DataVaultWebClient) => any\n  getKeyContent: (client: DataVaultWebClient, key: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, credentials, deleteValue, swapValue, downloadBackup, getKeyContent\n}) => {\n  const context = useContext(Web3ProviderContext)\n  const dvClient = context.dvClient\n\n  if (!dvClient) {\n    return (\n      <div className=\"content data-vault\">\n        <h2>Could not connect to the DataVault</h2>\n        <p>Your wallet may be asking for permission.</p>\n      </div>\n    )\n  }\n\n  const handleAdd = (key: string, content: string) => addDeclarativeDetail(dvClient, key, content)\n  const handleDelete = (key: string, id: string) => deleteValue(dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) => swapValue(dvClient, key, content, id)\n  const handleDownload = () => context.dvClient && downloadBackup(dvClient)\n  const handleGetKeyContent = (key: string) => getKeyContent(dvClient, key)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails\n            addDeclarativeDetail={handleAdd}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n            getKeyContent={handleGetKeyContent}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <CredentialDisplay\n            credentials={credentials}\n            deleteValue={handleDelete}\n            getKeyContent={handleGetKeyContent}\n            createPresentation={(jwt: string) => createPresentation(context.provider, jwt)}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DownloadBackup handleDownload={handleDownload} />\n        </div>\n        <div className=\"column\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { createJWT } from 'jesse-did-jwt'\nimport { fromRpcSig } from 'ethereumjs-util'\nimport { getAccountAndNetwork } from '../ethrpc'\nimport { createDidFormat } from '../formatters'\n\nexport const createPresentation = (provider: any, jwt: string) => {\n  return getAccountAndNetwork(provider).then(([address, chainId]) => {\n    const did = createDidFormat(address, chainId)\n\n    const signer = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n      .then(fromRpcSig)\n      .then(({ v, r, s }: { v: number, r: Buffer, s: Buffer }) => ({\n        r: r.toString('hex'),\n        s: s.toString('hex'),\n        recoveryParam: v\n      }))\n\n    const vpPayload = {\n      vp: {\n        '@context': ['https://www.w3.org/2018/credentials/v1'],\n        type: ['VerifiablePresentation'],\n        verifiableCredential: [jwt],\n        nbf: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(new Date().getTime() / 1000) + 3600\n      }\n    }\n\n    return createJWT(vpPayload, { alg: 'ES256K', issuer: did, signer })\n  })\n}\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent, downloadBackup, getDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.declarativeDetails,\n  credentials: state.datavault.credentials\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id)),\n  downloadBackup: (client: DataVaultWebClient) => downloadBackup(client),\n  getKeyContent: (client: DataVaultWebClient, key: string) =>\n    dispatch(getDataVaultContent(client, key))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/defi'\nimport { isValidAddress } from 'rskjs-util'\nimport { truncateAddressDid } from '../../../formatters'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport { getBalanceName } from '../../../config/getConfig'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  chainId: number\n  balance: number | null,\n  conversion: number | null,\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Assets\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup}>Watch Asset</button>}\n    >\n      {balance && (\n        <BalanceRow\n          name=\"Balance\"\n          className=\"defaultBalance\"\n          balance={balance}\n          symbol={getBalanceName(chainId)}\n          conversion={conversion || undefined}\n        />\n      )}\n\n      {tokens?.map((token: Token) =>\n        <BalanceRow\n          key={token.address}\n          name={token.name || `Custom token: ${truncateAddressDid(token.address)}`}\n          balance={token.balance}\n          symbol={token.symbol}\n          conversion={token.conversion}\n        />\n      )}\n\n      <EditValueModal\n        show={isAdding}\n        onClose={togglePopup}\n        disabled={isLoading}\n        error={isError}\n        strings={{\n          title: 'Add Token',\n          intro: 'Add an ERC20 or ERC721 token to the dashboard',\n          label: 'Token to add:',\n          placeholder: 'contract address',\n          submit: 'Add Token'\n        }}\n        onConfirm={addToken}\n      />\n    </Panel>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Token } from '../state/reducers/defi'\nimport Balance from './panels/Balance'\n\ninterface DeFiComponentInterface {\n  tokens: Token[]\n  chainId: number\n  balance: number | null\n  conversion: number | null\n  addCustomToken: (provider: any, tokenAddr: string) => any\n}\n\nconst DeFiComponent: React.FC<DeFiComponentInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => (\n  <div className=\"content defi\">\n    <div className=\"container\">\n      <div className=\"column\">\n        <Balance\n          tokens={tokens}\n          addCustomToken={addCustomToken}\n          chainId={chainId}\n          balance={balance}\n          conversion={conversion}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default DeFiComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DeFiComponent from './DeFiComponent'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  tokens: state.defi.tokens,\n  chainId: state.identity.chainId,\n  balance: state.defi.balance,\n  conversion: state.defi.conversion\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DeFiComponent)\n","import React, { useContext, useEffect, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport DefiContainer from '../DeFi/DeFiContainer'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => void\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems, logoutOrSwitchAccounts }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  const handleWalletChange = (isLoggingOut: boolean = false) => {\n    context.provider.removeAllListeners()\n    context.reset()\n    logoutOrSwitchAccounts(isLoggingOut)\n  }\n\n  useEffect(() => {\n    context.provider.on('accountsChanged', () => handleWalletChange())\n    context.provider.on('chainChanged', () => handleWalletChange())\n    context.provider.on('disconnect', () => handleWalletChange())\n  }, [])\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n        logout={() => handleWalletChange(true)}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n      {screen === screens.DEFI && <DefiContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { logout, resetReducers } from '../state/operations/identity'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n  const returnValueOrEmpty = (key: string) => data[key] && data[key][0] ? data[key] : [{ id: '', content: '' }]\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.declarativeDetails)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items)),\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => isLoggingOut ? dispatch(logout()) : dispatch(resetReducers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport defiReducer, { DefiState } from './reducers/defi'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware: Middleware[] = [thunk]\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nexport interface stateInterface {\n  identity: IdentityState\n  ethrdid: EtherdidState\n  defi: DefiState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  defi: defiReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}