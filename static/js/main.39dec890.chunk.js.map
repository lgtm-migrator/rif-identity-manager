{"version":3,"sources":["ethrpc.ts","components/Buttons.tsx","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","config/getConfig.ts","app/Authenticated/components/Navigation.tsx","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/defi.ts","config/getTokenContracts.ts","storage/localStorage.ts","app/state/operations/defi.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/DataVault/types.ts","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","assets/images/icons/copy.svg","components/CopyButton/CopyButton.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","components/BalanceRow/BalanceRow.tsx","app/Dashboard/panels/DeFiSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","components/Modal/EditValueModal.tsx","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","app/DataVault/components/DeleteDvContentButton.tsx","app/DataVault/components/DecryptKey.tsx","app/DataVault/components/DownloadErrorMessage.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","providerContext.tsx","components/CredentialView/CredentialView.tsx","assets/images/icons/credential.svg","app/DataVault/components/PresentCredential.tsx","app/DataVault/panels/CredentialDisplay.tsx","assets/images/icons/download.svg","app/DataVault/panels/DownloadBackup.tsx","app/DataVault/DataVaultComponent.tsx","features/credentials.ts","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/DeFi/panels/Balance.tsx","app/DeFi/DeFiComponent.tsx","app/DeFi/DeFiContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["PROVIDERS","BaseButton","styled","button","LoginScreenComponent","handleLogin","useEffect","localStorage","getItem","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","SETTINGS","getProviderName","isNiftyWallet","NIFTY","isMetaMask","METAMASK","wc","WALLET_CONNECT","screens","getSetting","setting","Ethereum","Ropsten","Rinkeby","Goerli","Mainnet","Testnet","Kovan","Local","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","getBalanceName","BALANCE_NAME","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","3","4","5","30","31","42","5777","portis","Portis","id","network","nodeUrl","supportedChains","initialState","address","identitySlice","createSlice","name","reducers","changeAccount","state","payload","changeChainId","reset","_state","actions","didDocument","publicKey","authentication","ethrDidSlice","resolveDid","data","createDidFormat","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","add","registry","rpcUrl","resolverProviderConfig","networks","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","conversion","undefined","tokens","defiSlice","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","receiveBalance","receiveConversionBalance","usd","mapToCoinGeckoToAddress","getTokenContracts","ContractsMainnet","ContractsTestnet","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","JSON","parse","getSetTokenList","userAddress","allTokens","ethContract","EthContract","metadata","erc20","erc20abi","at","balanceOf","div","BN","pow","decimals","toNumber","console","log","getTokenWithMetadata","contractAddress","onComplete","trim","token","getCode","Error","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","getConversionRates","geckoIds","COIN_GECKO_IDS","getCoinGeckoIdsForNetwork","Axios","get","geckoId","declarativeDetails","credentials","storage","getBucket","endsWith","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","bucket","swapContentById","receiveStorageInformation","receiveKeys","keys","forEach","getEncryptionManager","a","AsymmetricEncryptionManager","fromWeb3Provider","SignerEncryptionManager","createClient","serviceUrl","AllNetworks","dataVaultUrl","authManager","AuthManager","personalSign","request","method","params","encryptionManager","DataVaultWebClient","getDataVaultContent","client","createDataVaultContent","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","dataVaultStart","callback","getStorageInformation","getKeys","getDataVaultKeys","getKeysWithContent","login","context","connect","setProvider","getTokenList","getBalance","Math","dvClient","_error","setDvClient","resetReducers","resetDV","resetDefi","resetEthrDid","resetIdentity","logout","clearCachedProvider","removeItem","Object","startsWith","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","LoadingComponent","ENCRYPTED","EditPersonaModal","initValue","updatePersona","decryptPersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","encryptedItems","setEncryptedItems","localItems","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","changeInputValue","evt","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","replace","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","DEFI","DATAVAULT","IDENTITY","CopyButton","showResponse","setShowResponse","copyTextField","useRef","current","select","document","execCommand","setTimeout","CopyIcon","defaultValue","ref","position","left","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","IdentityInformationPanel","BarWrapper","BarProgress","ProgressBar","total","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","marginTop","BalanceRow","original","shorten","parseFloat","toFixed","round","DeFiSummary","featuredToken","converstion","DashboardScreen","featuredTokens","changeScreen","IdentitySummary","identity","defi","datavault","userAddr","tokenAddr","DasboardScreen","EditValueModal","onConfirm","inputType","strings","editable","setEditable","sharedProps","intro","label","submit","BinaryModal","onDeny","text","deny","confirm","DeleteDvContentButton","itemKey","deleteValue","isDeleting","setIsDeleting","trashIcon","finally","DecryptKey","handleGetContent","DownloadErrorMessage","keyError","DeclarativeDetailsDisplay","details","swapValue","getKeyContent","isDownloadError","setIsDownloadError","isEditing","setIsEditing","isGettingContent","setIsGettingContent","declarativeIcon","hasEmpty","showDownloadMessage","k","includes","pencilIcon","newValue","existingItem","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","toUpperCase","Web3ProviderContext","React","createContext","Web3ProviderElement","initialContext","Provider","CredentialView","jwt","showRaw","setShowRaw","setError","prettyJson","setPrettyJson","jwtDecode","PresentCredential","createPresentation","setState","handleCreate","presentationLink","CredentialDisplay","emailCredLink","CredentialIcon","DownloadBackup","handleDownload","initStatus","setStatus","downloadIcon","DataVaultComponent","downloadBackup","useContext","handleDelete","handleGetKeyContent","vpPayload","vp","verifiableCredential","nbf","floor","Date","getTime","exp","createJWT","alg","issuer","signer","fromRpcSig","v","r","s","recoveryParam","getBackup","element","createElement","URL","createObjectURL","Blob","download","body","appendChild","click","remove","DelegateComponent","delegates","addDelegate","isOwner","isAdding","setIsAdding","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidAddress","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","ethrdid","EthrDID","setDidOwner","delegateType","setAttribute","Balance","togglePopup","tokenAddress","DeFiComponent","AuthenticatedComponent","modifyMultipleItems","logoutOrSwitchAccounts","screen","setScreen","handleWalletChange","isLoggingOut","removeAllListeners","on","HeaderComponent","items","DashboardContainer","DataVaultContainer","IdentityContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","decryptMultipleKeys","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","rootReducer","combineReducers","identityReducer","ethrdidReducer","defiReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.39dec890.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n\nexport enum PROVIDERS {\n  METAMASK = 'METAMASK',\n  NIFTY = 'NIFTY',\n  WALLET_CONNECT = 'WALLET_CONNECT'\n}\n\n/**\n * Return the Provider Name. Used to detect DataVault features\n * @param provider web3Provider\n */\nexport const getProviderName = (provider: any) => {\n  if (provider.isNiftyWallet) {\n    return PROVIDERS.NIFTY\n  }\n  if (provider.isMetaMask) {\n    return PROVIDERS.METAMASK\n  }\n  if (provider.wc) {\n    return PROVIDERS.WALLET_CONNECT\n  }\n}\n","import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React, { useEffect } from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  useEffect(() => {\n    if (localStorage.getItem('WEB3_CONNECT_CACHED_PROVIDER')) {\n      handleLogin()\n    }\n  }, [])\n\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","/* eslint-disable no-unused-vars */\nimport AllNetworks from './config.json'\nimport Ethereum from './config.ethereum.json'\nimport Ropsten from './config.ropsten.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Kovan from './config.kovan.json'\nimport Rinkeby from './config.rinkeby.json'\nimport Goerli from './config.goerli.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  BALANCE_NAME = 'balanceName',\n  COIN_GECKO_IDS = 'coinGeckoIds'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 3: return Ropsten[setting]\n    case 4: return Rinkeby[setting]\n    case 5: return Goerli[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 42: return Kovan[setting]\n    default: return Local[setting]\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getDataVault = () => AllNetworks.dataVaultUrl\nexport const getBalanceName = (chainId: number) => getSetting(chainId, SETTINGS.BALANCE_NAME) as string\nexport const getCoinGeckoIdsForNetwork = (chainId: number) => getSetting(chainId, SETTINGS.COIN_GECKO_IDS) as string\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity',\n  DEFI = 'defi'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n  logout: () => void\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick, logout }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'dashboard active' : 'dashboard'}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        <li className={selected === screens.DEFI ? 'defi active' : 'defi'}>\n          <button onClick={() => handleClick(screens.DEFI)}>DeFi Assets</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'datavault active' : 'datavault'}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n        <li className=\"logout\"><button onClick={logout}>Logout</button></li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport Portis from '@portis/web3'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          3: getRPCUrl(3),\n          4: getRPCUrl(4),\n          5: getRPCUrl(5),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          42: getRPCUrl(42),\n          5777: getRPCUrl(5777)\n        }\n      }\n    },\n    portis: {\n      package: Portis,\n      options: {\n        id: '26ef5a8d-0226-4e3d-ae69-05707c9a453a',\n        network: {\n          nodeUrl: 'https://public-node.testnet.rsk.co',\n          chainId: 30\n        }\n      }\n    }\n  },\n  supportedChains: [1, 3, 4, 5, 30, 31, 42, 5777]\n})\n\nexport const clearRloginStorage = () => {\n  localStorage.removeItem('RLOGIN_ACCESS_TOKEN')\n  localStorage.removeItem('RLOGIN_REFRESH_TOKEN')\n  localStorage.removeItem('WEB3_CONNECT_CACHED_PROVIDER')\n  localStorage.removeItem('walletconnect')\n\n  Object.keys(localStorage).map((key: string) => {\n    if (key.startsWith('DV_ACCESS_TOKEN') || key.startsWith('DV_REFRESH_TOKEN')) {\n      localStorage.removeItem(key)\n    }\n  })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { changeAccount, changeChainId, reset } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { resolveDid, reset } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:${address}`\n    case 3: return `did:ethr:ropsten:${address}`\n    case 4: return `did:ethr:rinkeby:${address}`\n    case 5: return `did:ethr:goerli:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 42: return `did:ethr:kovan:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nconst add = (name: string, chainId: number) => ({ name, registry: getDIDRegistryAddress(chainId), rpcUrl: getRPCUrl(chainId) })\n\nexport const resolverProviderConfig = {\n  networks: [\n    add('mainnet', 1),\n    add('ropsten', 3),\n    add('rinkeby', 4),\n    add('goerli', 5),\n    add('rsk', 30),\n    add('rsk:testnet', 31),\n    add('kovan', 31),\n    add('development', 5777)\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null,\n  conversion?: number\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0,\n  conversion: undefined\n}\n\nexport interface DefiState {\n  tokens: Token[],\n  balance: number | null,\n  conversion: number | null\n}\n\nexport const initialState = {\n  tokens: [],\n  balance: null,\n  conversion: null\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst defiSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: DefiState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    },\n    receiveBalance (state: DefiState, { payload: { balance } }: PayloadAction<{ balance: number }>) {\n      state.balance = balance\n    },\n    receiveConversionBalance (state: DefiState, { payload: { usd } }: PayloadAction<{ usd: number }>) {\n      state.conversion = usd\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { addTokenData, receiveBalance, receiveConversionBalance, reset } = defiSlice.actions\n\nexport default defiSlice.reducer\n","import ContractsTestnet from '@rsksmart/rsk-testnet-contract-metadata'\nimport ContractsMainnet from '@rsksmart/rsk-contract-metadata'\n\nexport interface TokenMetadata {\n  name: string\n  logo: string\n  erc20: boolean\n  symbol: string\n  decimals: number\n}\n\nexport interface TokenMetadataPair {\n  [address: string] : TokenMetadata\n}\n\nconst getTokenContracts = (chainId: number) => {\n  switch (chainId) {\n    case 30: return ContractsMainnet\n    case 31: return ContractsTestnet\n    default: return null\n  }\n}\n\n/**\n * Converts CoinGecko coin Ids to their address or to the defaultBalance\n * @param symbol CoinGecko's coin/token Id\n * @param chainId ChainId of the network\n */\nexport const mapToCoinGeckoToAddress = (symbol: string, chainId: number) => {\n  switch (symbol) {\n    case 'ethereum':\n    case 'bitcoin':\n      return 'defaultBalance'\n    case 'rif-token':\n      return chainId === 30\n        ? '0x2aCc95758f8b5F583470bA265Eb685a8f45fC9D5' : '0x19f64674D8a5b4e652319F5e239EFd3bc969a1FE'\n    default: return null\n  }\n}\n\nexport default getTokenContracts\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData, receiveBalance, receiveConversionBalance } from '../reducers/defi'\nimport getTokenContracts, { TokenMetadataPair, TokenMetadata, mapToCoinGeckoToAddress } from '../../../config/getTokenContracts'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\nimport Axios, { AxiosResponse } from 'axios'\nimport { getCoinGeckoIdsForNetwork } from '../../../config/getConfig'\n\nexport const getTokenList = (provider: any, chainId: number, userAddress: string) => (dispatch: Dispatch<any>) => {\n  // get the set token list for the specific chainId\n  dispatch(getSetTokenList(provider, userAddress, chainId))\n\n  // get conversion rates for tokenlist that are in CoinGecko\n  dispatch(getConversionRates(chainId))\n\n  // local tokens that were saved in localStorage\n  const localTokens = getValueFromLocalStorage(chainId.toString(), 'TOKEN') ? getValueFromLocalStorage(chainId.toString(), 'TOKEN') : []\n  localTokens.map((address: string) => {\n    dispatch(getTokenWithMetadata(provider, address, userAddress))\n  })\n}\n\n/**\n * Loops through the contract metadata as specificed by @rsksmart/rsk-[testnet-]contract-metadata\n * @param provider web3 provider\n * @param userAddress users Address\n * @param chainId id of the network\n */\nconst getSetTokenList = (provider: any, userAddress: string, chainId: number) => (dispatch: Dispatch<any>) => {\n  const allTokens = getTokenContracts(chainId) as TokenMetadataPair\n  if (!allTokens) {\n    return\n  }\n\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  for (const address in allTokens) {\n    const metadata = allTokens[address] as TokenMetadata\n\n    if (metadata.erc20) {\n      ethContract(erc20abi).at(address).balanceOf(userAddress)\n        .then((balance: BN[]) => balance[0])\n        .then((balance: BN) => balance.div(new BN(10).pow(new BN(metadata.decimals))).toNumber())\n        .then((balance: number) => {\n          if (balance !== 0) {\n            dispatch(addTokenData({ data: { address, balance, name: metadata.name, symbol: metadata.symbol } }))\n          }\n        })\n        .catch((err: Error) => console.log('balanceOf error', err))\n    }\n  }\n}\n\n/**\n * Get balance and metadata for a specific token\n * @param provider web3 Provider\n * @param contractAddress contract address\n * @param userAddress address of the user to query balance\n * @param onComplete callback function to be called\n */\nexport const getTokenWithMetadata = (provider: any, contractAddress: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const address = contractAddress.toLowerCase().trim()\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\n/**\n * Watch a custom token that the user has inputed the address for\n * @param provider web3 provider\n * @param userAddress user's address\n * @param address contract address to query\n * @param chainId chain Id\n */\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getTokenWithMetadata(provider, address, userAddress, onComplete))\n  })\n\n/**\n * Get the default balance of the user\n * @param provider web3 provider\n * @param address address of the user\n */\nexport const getBalance = (provider: any, address: string) => (dispatch: Dispatch<any>) =>\n  new Eth(provider).getBalance(address)\n    .then((balance: BN) => parseInt(balance.toString()))\n    .then((balance: number) => balance / Math.pow(10, 18))\n    .then((balance:number) => dispatch(receiveBalance({ balance })))\n\n/**\n * Gets the Token to USD conversion rate\n * @param address Token address, used for storing it in redux\n * @param geckoIds Ids of the coin for coingecko's AIP\n */\nexport const getConversionRates = (chainId: number) => (dispatch: Dispatch<any>) => {\n  const geckoIds = getCoinGeckoIdsForNetwork(chainId)\n  if (!geckoIds) {\n    return\n  }\n\n  Axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${geckoIds}&vs_currencies=usd`)\n    .then((response: AxiosResponse) => response.data)\n    .then((data: { [name: string]: { usd: number } }) => {\n      for (const geckoId in data) {\n        const address = mapToCoinGeckoToAddress(geckoId, chainId)\n        if (address === 'defaultBalance') {\n          dispatch(receiveConversionBalance(data[geckoId]))\n        } else if (address) {\n          dispatch(addTokenData({ data: { address: address, conversion: data[geckoId].usd } }))\n        }\n      }\n    })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  declarativeDetails: {},\n  credentials: {},\n  storage: undefined\n}\n\nconst getBucket = (key: string) => key.endsWith('Credential') ? 'credentials' : 'declarativeDetails'\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state[getBucket(key)][key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.declarativeDetails[key] ? state.declarativeDetails[key].push(content) : state.declarativeDetails[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      const bucket = getBucket(key)\n      state[bucket][key] = state[bucket][key].filter((item: DataVaultContent) => item.id !== id)\n\n      if (state[bucket][key].length === 0) {\n        delete state[bucket][key]\n      }\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    },\n    receiveKeys (state: DataVaultState, { payload: { keys } }: PayloadAction<{ keys: string[] }>) {\n      keys.forEach((key: string) => {\n        key.endsWith('Credential') ? state.credentials[key] = [] : state.declarativeDetails[key] = []\n      })\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation, receiveKeys, reset } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient, { AuthManager, AsymmetricEncryptionManager, SignerEncryptionManager } from '@rsksmart/ipfs-cpinner-client'\n\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey, receiveKeys } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { Backup, CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\nimport { getProviderName, PROVIDERS } from '../../../ethrpc'\nimport { IEncryptionManager } from '@rsksmart/ipfs-cpinner-client/lib/encryption-manager/types'\n\n/**\n * Helper function that returns the correct encryption method\n * @param provider web3 provider\n */\nconst getEncryptionManager = async (provider: any) =>\n  getProviderName(provider) === PROVIDERS.METAMASK\n    ? await AsymmetricEncryptionManager.fromWeb3Provider(provider)\n    : await SignerEncryptionManager.fromWeb3Provider(provider)\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const serviceUrl = getDataVault()\n  const did = createDidFormat(address, chainId).toLowerCase()\n  const personalSign = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n  const authManager = new AuthManager({ did, serviceUrl, personalSign })\n\n  return getEncryptionManager(provider)\n    .then((encryptionManager: IEncryptionManager) =>\n      new DataVaultWebClient({ serviceUrl, authManager, encryptionManager }))\n}\n\n/**\n * Get all keys and from the datavault\n * @param client DataVault client\n */\nexport const getDataVaultKeys = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) => dispatch(receiveKeys({ keys })))\n\n/**\n * Get all content from a specific key from the datavault\n * @param client DataVault client\n * @param key string\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, key: string) => (dispatch: Dispatch<any>) =>\n  client.get({ key })\n    .then((content: any) => content as DataVaultContent[])\n    .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n\n/**\n * Get all keys and content. Used for providers that use the less secure encryption\n * @param client DataVault clinet\n */\nexport const getKeysWithContent = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getKeys().then((keys: string[]) => {\n    keys.forEach((key: string) => dispatch(getDataVaultContent(client, key)))\n  })\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n\n/**\n * Decrypt multiple keys at one time\n * @param client Datavault clinet\n * @param keys string[] keys that you want to decrypt\n */\nexport const decryptMultipleKeys = (client: DataVaultWebClient, keys: string[]) => (dispatch: Dispatch<any>) =>\n  keys.map(key => dispatch(getDataVaultContent(client, key)))\n\n/**\n * Start the Data Vault Client\n * Request StorageInformation first, which will save the access token with the DataVault Service\n * in localStorage. Then request the content from the data vault.\n * @param provider Web3 Provider\n * @param address User Address\n * @param chainId ChainId\n * @param callback Function\n */\nexport const dataVaultStart = (provider: any, address: string, chainId: number, callback?: any) => (dispatch: Dispatch<any>) => {\n  const client = createClient(provider, address, chainId)\n\n  client.then((client: DataVaultWebClient) => client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => {\n      dispatch(receiveStorageInformation({ storage }))\n\n      // if Metamask, get just the keys, else, get & decrypt all content\n      getProviderName(provider) === PROVIDERS.METAMASK\n        ? dispatch(getDataVaultKeys(client))\n        : dispatch(getKeysWithContent(client))\n      callback(client)\n    })\n    .catch((err: any) => callback(null, err))\n  )\n}\n\n/**\n * Download backup text file from the DataVault\n * @param client DataVault Client\n */\nexport const downloadBackup = (client: DataVaultWebClient) =>\n  client.getBackup()\n    .then((value: Backup) => JSON.stringify(value))\n    .then((value: string) => {\n      const element = document.createElement('a')\n      element.href = URL.createObjectURL(new Blob([value], { type: 'text/plain;charset=utf-8' }))\n      element.download = 'dataVaultBackup.txt'\n      document.body.appendChild(element)\n      element.click()\n      element.remove()\n    })\n","import { Dispatch } from 'react'\n\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin, clearRloginStorage } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId, reset as resetIdentity } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getBalance, getTokenList } from './defi'\nimport { dataVaultStart } from './datavault'\n\nimport { reset as resetDV } from '../reducers/datavault'\nimport { reset as resetDefi } from '../reducers/defi'\nimport { reset as resetEthrDid } from '../reducers/ethrdid'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then(({ provider }: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, parseInt(chainId), address))\n      dispatch(getBalance(provider, address))\n\n      const callback = (dvClient: any, _error: any) => context.setDvClient(dvClient)\n      dispatch(dataVaultStart(provider, address, chainId, callback))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n\n/**\n * Dispatch reset on all reducers back to InitialState\n */\nexport const resetReducers = () => (dispatch: Dispatch<any>) => {\n  dispatch(resetDV())\n  dispatch(resetDefi())\n  dispatch(resetEthrDid())\n  dispatch(resetIdentity())\n}\n\n/**\n * Logout of App completely removing localStorage, resetting reducers, and restting context\n */\nexport const logout = () => (dispatch: Dispatch<any>) => {\n  rLogin.clearCachedProvider()\n  clearRloginStorage()\n  dispatch(resetReducers())\n}\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 3: return 'Ropsten Testnet'\n    case 4: return 'Rinkeby Testnet'\n    case 5: return 'Görli Testnet'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    case 42: return 'Kovan Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  opacity: 0;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  margin-top:25px;\n  top: 0px;\n  transition: opacity .6s;\n  display: block;\n  min-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover {\n    ${HoverSpan} {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <HoverTrigger className={className}>\n    {children}\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </HoverTrigger>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","export const ENCRYPTED = 'ENCRYPTED'\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\nimport { ENCRYPTED } from '../types'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n  decryptPersona: (keys: string[]) => Promise<any>;\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona, decryptPersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n  const [encryptedItems, setEncryptedItems] = useState<string[]>([])\n\n  useEffect(() => {\n    const localItems: React.SetStateAction<string[]> = []\n    Object.keys(initValue).map((item: string) => {\n      if (initValue[item][0].content === ENCRYPTED) {\n        localItems.push(item)\n      }\n    })\n\n    setEncryptedItems(localItems)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n\n    if (localItems.length === 0) {\n      setIsLoading(false)\n    }\n  }, [initValue])\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const loadAndShowModal = () => {\n    setIsError(null)\n    setIsLoading(false)\n    setShowModal(true)\n  }\n\n  const handleDecrypt = () => {\n    setIsLoading(true)\n    decryptPersona(encryptedItems)\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={loadAndShowModal}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        {encryptedItems.length !== 0 && (\n          <>\n            <h2>Your persona is encrypted</h2>\n            <p>You first need to decrypt the following items. Click the button below and then decrypt them in your wallet.</p>\n            <p>{encryptedItems.map(item => `${item.replace('DD_', '')}, `)}</p>\n            <BaseButton className=\"blue decrypt\" onClick={handleDecrypt} disabled={isLoading}>Decrypt</BaseButton>\n            {isLoading && <LoadingComponent />}\n          </>\n        )}\n        {encryptedItems.length === 0 && (\n          <div>\n            <h2>Edit Persona</h2>\n            {truncateAddressDid(did)}\n            <p>You can edit your personal that be saved in your data vault.</p>\n\n            <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n            <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n            <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n            <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n            <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n            <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n            <p>\n              <BaseButton\n                className=\"save blue\"\n                onClick={save}\n                disabled={isLoading}\n              >Save</BaseButton></p>\n\n            {isError && <div className=\"alert error\">{isError}</div>}\n            {isLoading && <LoadingComponent />}\n          </div>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\nimport { ENCRYPTED } from '../../DataVault/types'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n  decryptPersona: (keys: string[]) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona, decryptPersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== '' && persona.DD_NAME[0].content !== ENCRYPTED\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n          decryptPersona={decryptPersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/copy.713b200d.svg\";","import React, { useRef, useState } from 'react'\nimport CopyIcon from '../../assets/images/icons/copy.svg'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const [showResponse, setShowResponse] = useState<boolean>(false)\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    setShowResponse(true)\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n    setTimeout(() => {\n      setShowResponse(false)\n    }, 1000)\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" onClick={handleClick} className=\"icon\">\n        <img src={CopyIcon} alt=\"Copy text\" />\n      </button>\n      {showResponse && <span className=\"response\">Copied to clipboard.</span>}\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  address: string\n  chainId: number\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId }) => {\n  const did = createDidFormat(address, chainId)\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Persona information\"\n          className=\"identity-information\"\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Persona DID</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                <CopyButton value={did} />\n              </p>\n            </div>\n            <div className=\"column\">\n              <h2>Persona Address</h2>\n              <p className=\"value\">\n                {address}\n                <CopyButton value={address} />\n              </p>\n            </div>\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <button className=\"link\" style={{ marginTop: -10 }} onClick={handleButton}>View your DataVault</button>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\n\ninterface BalanceRowInterface {\n  name?: string | null\n  balance?: number | null\n  symbol?: string | null\n  className?: string\n  conversion?: number\n}\n\nconst BalanceRow: React.FC<BalanceRowInterface> = ({ name, balance, symbol, className, conversion }) => {\n  const shorten = (original: number | null | undefined) => {\n    if (!original) { return original }\n    const shorten = parseFloat(original.toFixed(6))\n    return shorten === original ? original : shorten\n  }\n\n  if (!symbol) {\n    return <></>\n  }\n\n  return (\n    <div className={className ? `balance-row ${className}` : 'balance-row'}>\n      <h2>{name}</h2>\n      <div>\n        <span className=\"balance\">{shorten(balance)}</span>\n        <span className=\"symbol\">{symbol}</span>\n        {(conversion && !!balance) && (\n          <span className=\"conversion\">${Math.round(conversion * balance * 100) / 100} USD</span>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BalanceRow\n","import React from 'react'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport { getBalanceName } from '../../../config/getConfig'\nimport { Token } from '../../state/reducers/defi'\n\ninterface DeFiSummaryInterface {\n  balance: number | null\n  converstion: number | null\n  chainId?: number | null\n  featuredToken?: Token\n  handleButton: () => void\n}\n\nconst DeFiSummary: React.FC<DeFiSummaryInterface> = ({ balance, chainId, featuredToken, converstion, handleButton }) =>\n  (balance !== null) && chainId\n    ? (\n      <Panel title={<>DeFi Summary</>} className=\"defi\">\n        <div className=\"container balance\">\n          <div className=\"columnDobule\">\n            <BalanceRow\n              name=\"Balance\"\n              balance={balance}\n              symbol={getBalanceName(chainId)}\n              conversion={converstion || undefined}\n            />\n            {featuredToken && (\n              <BalanceRow\n                name={featuredToken.name}\n                balance={featuredToken.balance}\n                symbol={featuredToken.symbol}\n                conversion={featuredToken.conversion || undefined}\n              />\n            )}\n          </div>\n        </div>\n        <BaseButton onClick={handleButton} className=\"turquoise\">More Defi</BaseButton>\n      </Panel>\n    )\n    : <></>\n\nexport default DeFiSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport DeFiSummary from './panels/DeFiSummary'\nimport { Token } from '../state/reducers/defi'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  storage?: DataVaultStorageState\n  balance: number | null\n  featuredTokens?: Token[]\n  converstion: number | null\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, storage, balance, featuredTokens, converstion, changeScreen\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      {address && chainId && <IdentitySummary address={address} chainId={chainId} />}\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeFiSummary\n            balance={balance}\n            converstion={converstion}\n            chainId={chainId}\n            featuredToken={featuredTokens ? featuredTokens[0] : undefined}\n            handleButton={() => changeScreen(screens.DEFI)}\n          />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\nimport { Token } from '../state/reducers/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.defi.tokens,\n  balance: state.defi.balance,\n  converstion: state.defi.conversion,\n  featuredTokens: state.defi.tokens.filter((token: Token) => token.symbol === 'RIF' || token.symbol === 'tRIF'),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  error?: string | null\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, error, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n      {error && <div className=\"alert error\">{error}</div>}\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState } from 'react'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport { DataVaultContent } from '../../state/reducers/datavault'\n\ninterface Interface {\n  itemKey: string\n  item: DataVaultContent\n  deleteValue: (key: string, id: string) => Promise<any>\n}\n\nconst DeleteDvContentButton: React.FC<Interface> = ({\n  itemKey, item, deleteValue\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<boolean>(false)\n\n  const handleDeleteItem = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(itemKey, item.id)\n      .then(() => setIsDeleting(false))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <>\n      <button\n        disabled={isLoading}\n        className=\"icon delete\"\n        onClick={() => setIsDeleting(true)}>\n        <img src={trashIcon} alt=\"Delete Item\" />\n      </button>\n\n      <BinaryModal\n        show={isDeleting}\n        onClose={() => setIsDeleting(false)}\n        onConfirm={handleDeleteItem}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n        error={isError}\n      />\n    </>\n  )\n}\n\nexport default DeleteDvContentButton\n","import React from 'react'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface DecryptKeyInterface {\n  handleGetContent: () => void\n  disabled: boolean\n}\n\nconst DecryptKey: React.FC<DecryptKeyInterface> = ({\n  handleGetContent, disabled\n}) => {\n  return (\n    <div className=\"decrypt\">\n      <BaseButton\n        className=\"gray small\"\n        onClick={handleGetContent}\n        disabled={disabled}>\n        Download\n      </BaseButton>\n    </div>\n  )\n}\n\nexport default DecryptKey\n","import React from 'react'\n\ninterface DownloadErrorMessageInterface {\n keyError: string\n}\n\nconst DownloadErrorMessage: React.FC<DownloadErrorMessageInterface> = ({ keyError }) => (\n  <p className=\"alert error\">This content is encrypted, and your wallet is unable to decrypt the key <em>{keyError}</em>.</p>\n)\n\nexport default DownloadErrorMessage\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport DecryptKey from '../components/DecryptKey'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  getKeyContent: (key: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue, getKeyContent }) => {\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleGetContent = (key: string) => {\n    setIsDownloadError(null)\n    setIsGettingContent([...isGettingContent, key])\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => {\n        setIsGettingContent(isGettingContent.filter((k: string) => k !== key))\n      })\n  }\n\n  const showDownloadMessage = () => {\n    const keys = Object.keys(details)\n    if (keys.length === 0) {\n      return false\n    }\n\n    let hasEmpty = false\n    for (var key in details) {\n      if (details[key].length === 0) {\n        hasEmpty = true\n      }\n    }\n    return hasEmpty\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      {showDownloadMessage() && <p className=\"intro\">Click on the download button to decrypt the content. Your wallet will request to decrypt each piece of content.</p>}\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key.replace('DD_', '')}</td>\n                <td>\n                  {details[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                  {details[key].map((item: DataVaultContent) => (\n                    <div className=\"content-row\" key={item.id}>\n                      <div className=\"content break-all\">\n                        <p>{item.content}</p>\n                      </div>\n                      <div className=\"options\">\n                        <button\n                          disabled={isLoading}\n                          className=\"icon edit\"\n                          onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                        >\n                          <img src={pencilIcon} alt=\"Edit item\" />\n                        </button>\n                        <DeleteDvContentButton itemKey={key} item={item} deleteValue={deleteValue} />\n                      </div>\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            )\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(`DD_${type.toUpperCase()}`, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"alert error\">\n          <p>{isError}</p>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n  reset: () => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null,\n  reset: () => {}\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient | null) => setDvClient(client),\n    reset: () => {\n      setProvider(null)\n      setDvClient(null)\n    }\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { ReactNode, useEffect, useState } from 'react'\nimport jwtDecode from 'jwt-decode'\n\ninterface CredentialViewInterface {\n  jwt: string\n  options?: ReactNode\n}\n\nconst CredentialView: React.FC<CredentialViewInterface> = ({ jwt, options }) => {\n  const [showRaw, setShowRaw] = useState<boolean>(false)\n  const [error, setError] = useState<null | string>(null)\n  const [prettyJson, setPrettyJson] = useState<string>('')\n\n  useEffect(() => {\n    try {\n      setPrettyJson(JSON.stringify(jwtDecode(jwt), null, 2))\n    } catch (err) {\n      setError(err.message)\n      setShowRaw(true)\n    }\n  }, [jwt])\n\n  return (\n    <div className=\"content-row\">\n      <div className=\"content\">\n        {prettyJson && (\n          <div className=\"break-all\">\n            <textarea\n              defaultValue={prettyJson}\n              disabled={true}></textarea>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert error\">\n            <strong>Could not decode credential!</strong><br />\n            <em>The raw data is displayed below.</em>\n          </div>\n        )}\n\n        {showRaw && <div className=\"raw break-all\">{jwt}</div>}\n      </div>\n      {!error && (\n        <div className=\"options\">\n          <button className=\"icon raw\" onClick={() => setShowRaw(!showRaw)}>{showRaw ? 'Hide' : 'View'} Raw</button>\n          {options}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CredentialView\n","export default __webpack_public_path__ + \"static/media/credential.436c18a7.svg\";","import React, { useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface PresentCredentialInterface {\n  jwt: string\n  createPresentation: (jwt: string) => Promise<string>\n}\n\nconst PresentCredential: React.FC<PresentCredentialInterface> = ({ jwt, createPresentation }) => {\n  interface stateInterface {\n    status: 'NONE' | 'LOADING' | 'DONE' | 'ERROR'\n    message: string\n  }\n  const initialState: stateInterface = { status: 'NONE', message: '' }\n  const [state, setState] = useState<stateInterface>(initialState)\n\n  const handleCreate = () => {\n    setState({ status: 'LOADING', message: '' })\n    createPresentation(jwt)\n      .then((message: string) => setState({ status: 'DONE', message }))\n      .catch((error: Error) => setState({ status: 'ERROR', message: error.message }))\n  }\n\n  const presentationLink = state.status === 'DONE' ? `https://rsksmart.github.io/rif-credential-verifier/?jwt=${state.message}` : ''\n\n  return (\n    <>\n      <button className=\"icon\" onClick={handleCreate}>Present</button>\n      <Modal show={state.status !== 'NONE'} onClose={() => setState(initialState)} title=\"Present Credential\">\n        {state.status === 'LOADING' && <LoadingComponent />}\n        {state.status === 'DONE' && (\n          <div>\n            <h2>Sharable link:</h2>\n            <textarea defaultValue={presentationLink} className=\"sharableLink\" />\n            <p><CopyButton value={presentationLink} /></p>\n            <p>\n              <a href={presentationLink} target=\"_blank\" rel=\"noreferrer\">\n                Open in new window\n              </a>\n            </p>\n          </div>\n        )}\n        {state.status === 'ERROR' && (\n          <>\n            <p className=\"alert error\">{state.message}</p>\n            <p><BaseButton onClick={handleCreate}>Try Again</BaseButton></p>\n          </>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default PresentCredential\n","import React, { useState } from 'react'\nimport CredentialView from '../../../components/CredentialView/CredentialView'\nimport Panel from '../../../components/Panel/Panel'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport CredentialIcon from '../../../assets/images/icons/credential.svg'\nimport DecryptKey from '../components/DecryptKey'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport PresentCredential from '../components/PresentCredential'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface CredentialDisplayInterface {\n  credentials: DataVaultKey\n  getKeyContent: (key: string) => Promise<any>\n  deleteValue: (key: string, id: string) => Promise<any>\n  createPresentation: (jwt: string) => Promise<any>\n}\n\nconst CredentialDisplay: React.FC<CredentialDisplayInterface> = ({ credentials, getKeyContent, deleteValue, createPresentation }) => {\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const handleGetContent = (key: string) => {\n    setIsGettingContent([...isGettingContent, key])\n    setIsDownloadError(null)\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => setIsGettingContent(isGettingContent.filter((k: string) => k !== key)))\n  }\n\n  const emailCredLink = <a href=\"https://email-verifier.identity.rifos.org/\" target=\"_blank\" rel=\"noreferrer\">Get an Email Credential</a>\n\n  return (\n    <Panel title={<><img src={CredentialIcon} /> Credentials</>} className=\"display credentials\" headerRight={emailCredLink}>\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(credentials).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>\n                  <ul>\n                    {credentials[key].map((item: DataVaultContent) =>\n                      <li key={item.id}>\n                        <CredentialView\n                          jwt={item.content}\n                          options={<>\n                            <div><PresentCredential jwt={item.content} createPresentation={createPresentation} /></div>\n                            <div><DeleteDvContentButton item={item} itemKey={key} deleteValue={deleteValue} /></div>\n                          </>}\n                        />\n                      </li>)}\n                  </ul>\n                  {credentials[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Panel>\n  )\n}\n\nexport default CredentialDisplay\n","export default __webpack_public_path__ + \"static/media/download.b2edd61f.svg\";","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport downloadIcon from '../../../assets/images/icons/download.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface DownloadBackupInterface {\n  handleDownload: () => Promise<any>\n}\n\nconst DownloadBackup: React.FC<DownloadBackupInterface> = ({\n  handleDownload\n}) => {\n  const initStatus = { isLoading: false, isError: null }\n  const [status, setStatus] = useState<{ isLoading: boolean; isError: string | null }>({\n    isLoading: false,\n    isError: null\n  })\n\n  const download = () => {\n    setStatus({ ...initStatus, isLoading: true })\n    handleDownload()\n      .then(() => setStatus(initStatus))\n      .catch((error: Error) => setStatus({ ...initStatus, isError: error.message }))\n  }\n\n  return (\n    <Panel title={<><img src={downloadIcon} /> Download Backup</>}>\n      <p>Download a backup file of all the keys and IPFS hashes that are stored in the DataVault.</p>\n      <p><BaseButton onClick={download} disabled={status.isLoading} className=\"small\">\n        Download Backup\n      </BaseButton></p>\n      {status.isLoading && <LoadingComponent />}\n      {status.isError && <div className=\"alert error\">{status.isError}</div>}\n    </Panel>\n  )\n}\n\nexport default DownloadBackup\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\nimport CredentialDisplay from './panels/CredentialDisplay'\nimport DownloadBackup from './panels/DownloadBackup'\nimport { createPresentation } from '../../features/credentials'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n  downloadBackup: (client: DataVaultWebClient) => any\n  getKeyContent: (client: DataVaultWebClient, key: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, credentials, deleteValue, swapValue, downloadBackup, getKeyContent\n}) => {\n  const context = useContext(Web3ProviderContext)\n  const dvClient = context.dvClient\n\n  if (!dvClient) {\n    return (\n      <div className=\"content data-vault\">\n        <h2>Could not connect to the DataVault</h2>\n        <p>Your wallet may be asking for permission.</p>\n      </div>\n    )\n  }\n\n  const handleAdd = (key: string, content: string) => addDeclarativeDetail(dvClient, key, content)\n  const handleDelete = (key: string, id: string) => deleteValue(dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) => swapValue(dvClient, key, content, id)\n  const handleDownload = () => context.dvClient && downloadBackup(dvClient)\n  const handleGetKeyContent = (key: string) => getKeyContent(dvClient, key)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails\n            addDeclarativeDetail={handleAdd}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n            getKeyContent={handleGetKeyContent}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <CredentialDisplay\n            credentials={credentials}\n            deleteValue={handleDelete}\n            getKeyContent={handleGetKeyContent}\n            createPresentation={(jwt: string) => createPresentation(context.provider, jwt)}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DownloadBackup handleDownload={handleDownload} />\n        </div>\n        <div className=\"column\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { createJWT } from 'jesse-did-jwt'\nimport { fromRpcSig } from 'ethereumjs-util'\nimport { getAccountAndNetwork } from '../ethrpc'\nimport { createDidFormat } from '../formatters'\n\nexport const createPresentation = (provider: any, jwt: string) => {\n  return getAccountAndNetwork(provider).then(([address, chainId]) => {\n    const did = createDidFormat(address, chainId)\n\n    const signer = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n      .then(fromRpcSig)\n      .then(({ v, r, s }: { v: number, r: Buffer, s: Buffer }) => ({\n        r: r.toString('hex'),\n        s: s.toString('hex'),\n        recoveryParam: v\n      }))\n\n    const vpPayload = {\n      vp: {\n        '@context': ['https://www.w3.org/2018/credentials/v1'],\n        type: ['VerifiablePresentation'],\n        verifiableCredential: [jwt],\n        nbf: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(new Date().getTime() / 1000) + 3600\n      }\n    }\n\n    return createJWT(vpPayload, { alg: 'ES256K', issuer: did, signer })\n  })\n}\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent, downloadBackup, getDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.declarativeDetails,\n  credentials: state.datavault.credentials\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id)),\n  downloadBackup: (client: DataVaultWebClient) => downloadBackup(client),\n  getKeyContent: (client: DataVaultWebClient, key: string) =>\n    dispatch(getDataVaultContent(client, key))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/defi'\nimport { isValidAddress } from 'rskjs-util'\nimport { truncateAddressDid } from '../../../formatters'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport { getBalanceName } from '../../../config/getConfig'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  chainId: number\n  balance: number | null,\n  conversion: number | null,\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setIsError(null)\n  }\n\n  const addToken = (tokenAddress: string) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(tokenAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, tokenAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Assets\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup}>Watch Asset</button>}\n    >\n      {balance !== null && (\n        <BalanceRow\n          name=\"Balance\"\n          className=\"defaultBalance\"\n          balance={balance}\n          symbol={getBalanceName(chainId)}\n          conversion={conversion || undefined}\n        />\n      )}\n\n      {tokens?.map((token: Token) =>\n        <BalanceRow\n          key={token.address}\n          name={token.name || `Custom token: ${truncateAddressDid(token.address)}`}\n          balance={token.balance}\n          symbol={token.symbol}\n          conversion={token.conversion}\n        />\n      )}\n\n      <EditValueModal\n        show={isAdding}\n        onClose={togglePopup}\n        disabled={isLoading}\n        error={isError}\n        strings={{\n          title: 'Add Token',\n          intro: 'Add an ERC20 or ERC721 token to the dashboard',\n          label: 'Token to add:',\n          placeholder: 'contract address',\n          submit: 'Add Token'\n        }}\n        onConfirm={addToken}\n      />\n    </Panel>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Token } from '../state/reducers/defi'\nimport Balance from './panels/Balance'\n\ninterface DeFiComponentInterface {\n  tokens: Token[]\n  chainId: number\n  balance: number | null\n  conversion: number | null\n  addCustomToken: (provider: any, tokenAddr: string) => any\n}\n\nconst DeFiComponent: React.FC<DeFiComponentInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => (\n  <div className=\"content defi\">\n    <div className=\"container\">\n      <div className=\"column\">\n        <Balance\n          tokens={tokens}\n          addCustomToken={addCustomToken}\n          chainId={chainId}\n          balance={balance}\n          conversion={conversion}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default DeFiComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DeFiComponent from './DeFiComponent'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  tokens: state.defi.tokens,\n  chainId: state.identity.chainId,\n  balance: state.defi.balance,\n  conversion: state.defi.conversion\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DeFiComponent)\n","import React, { useContext, useEffect, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport DefiContainer from '../DeFi/DeFiContainer'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => void\n  decryptPersona: (client: DataVaultWebClient | null, keys: string[]) => any\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems, logoutOrSwitchAccounts, decryptPersona }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  const handleWalletChange = (isLoggingOut: boolean = false) => {\n    context.provider.removeAllListeners()\n    context.reset()\n    logoutOrSwitchAccounts(isLoggingOut)\n  }\n\n  useEffect(() => {\n    context.provider.on('accountsChanged', () => handleWalletChange())\n    context.provider.on('chainChanged', () => handleWalletChange())\n    context.provider.on('disconnect', () => handleWalletChange())\n  }, [])\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n        decryptPersona={(keys: string[]) => decryptPersona(context.dvClient, keys)}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n        logout={() => handleWalletChange(true)}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n      {screen === screens.DEFI && <DefiContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { decryptMultipleKeys, modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { logout, resetReducers } from '../state/operations/identity'\nimport { ENCRYPTED } from '../DataVault/types'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n\n  const returnValueOrEmpty = (key: string) => {\n    // key is set and data is decrypted\n    if (data[key] && data[key][0]) {\n      return data[key]\n    }\n\n    // key is loaded, but no content\n    if (data[key] && !data[key][0]) {\n      return [{ id: '', content: ENCRYPTED }]\n    }\n\n    // no key\n    return [{ id: '', content: '' }]\n  }\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.declarativeDetails)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items)),\n  decryptPersona: (client: DataVaultWebClient | null, keys: string[]) => client && dispatch(decryptMultipleKeys(client, keys)),\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => isLoggingOut ? dispatch(logout()) : dispatch(resetReducers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport defiReducer, { DefiState } from './reducers/defi'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware: Middleware[] = [thunk]\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nexport interface stateInterface {\n  identity: IdentityState\n  ethrdid: EtherdidState\n  defi: DefiState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  defi: defiReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}