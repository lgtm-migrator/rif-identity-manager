{"version":3,"sources":["ethrpc.ts","components/Buttons.tsx","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","config/getConfig.ts","app/Authenticated/components/Navigation.tsx","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/defi.ts","config/getTokenContracts.ts","storage/localStorage.ts","app/state/operations/defi.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/DataVault/types.ts","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","components/Plausible/PlausibleAnalytics.tsx","assets/images/icons/copy.svg","components/CopyButton/CopyButton.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","components/BalanceRow/BalanceRow.tsx","app/Dashboard/panels/DeFiSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","components/Modal/EditValueModal.tsx","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","app/DataVault/components/DeleteDvContentButton.tsx","app/DataVault/components/DecryptKey.tsx","app/DataVault/components/DownloadErrorMessage.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","providerContext.tsx","components/CredentialView/CredentialView.tsx","assets/images/icons/credential.svg","app/DataVault/components/PresentCredential.tsx","app/DataVault/panels/CredentialDisplay.tsx","assets/images/icons/download.svg","app/DataVault/panels/DownloadBackup.tsx","app/DataVault/DataVaultComponent.tsx","features/credentials.ts","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/DeFi/panels/Balance.tsx","app/DeFi/DeFiComponent.tsx","app/DeFi/DeFiContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["PROVIDERS","BaseButton","styled","button","LoginScreenComponent","handleLogin","useEffect","localStorage","getItem","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","SETTINGS","getProviderName","isNiftyWallet","NIFTY","isMetaMask","METAMASK","wc","WALLET_CONNECT","screens","getSetting","setting","Ethereum","Ropsten","Rinkeby","Goerli","Mainnet","Testnet","Kovan","Local","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","getBalanceName","BALANCE_NAME","rLogin","RLogin","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","3","4","5","30","31","42","5777","supportedChains","initialState","address","identitySlice","createSlice","name","reducers","changeAccount","state","payload","changeChainId","reset","_state","actions","didDocument","id","publicKey","authentication","ethrDidSlice","resolveDid","data","createDidFormat","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","add","registry","rpcUrl","resolverProviderConfig","networks","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","conversion","undefined","tokens","defiSlice","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","receiveBalance","receiveConversionBalance","usd","mapToCoinGeckoToAddress","getTokenContracts","ContractsMainnet","ContractsTestnet","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","JSON","parse","getSetTokenList","userAddress","allTokens","ethContract","EthContract","metadata","erc20","erc20abi","at","balanceOf","div","BN","pow","decimals","toNumber","console","log","getTokenWithMetadata","contractAddress","onComplete","trim","token","getCode","Error","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","getConversionRates","geckoIds","COIN_GECKO_IDS","getCoinGeckoIdsForNetwork","Axios","get","geckoId","declarativeDetails","credentials","storage","getBucket","endsWith","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","bucket","swapContentById","receiveStorageInformation","receiveKeys","keys","forEach","getEncryptionManager","a","AsymmetricEncryptionManager","fromWeb3Provider","SignerEncryptionManager","createClient","serviceUrl","AllNetworks","dataVaultUrl","authManager","AuthManager","personalSign","request","method","params","encryptionManager","DataVaultWebClient","getDataVaultContent","client","createDataVaultContent","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","dataVaultStart","callback","getStorageInformation","getKeys","getDataVaultKeys","login","context","connect","setProvider","getTokenList","getBalance","Math","dvClient","_error","setDvClient","resetReducers","resetDV","resetDefi","resetEthrDid","resetIdentity","logout","clearCachedProvider","removeItem","Object","startsWith","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","LoadingComponent","ENCRYPTED","EditPersonaModal","initValue","updatePersona","decryptPersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","encryptedItems","setEncryptedItems","localItems","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","changeInputValue","evt","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","replace","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Decision","Navigation","selected","showDataVault","handleClick","DASHBOARD","DEFI","DATAVAULT","IDENTITY","CopyButton","showResponse","setShowResponse","copyTextField","useRef","current","select","document","execCommand","setTimeout","CopyIcon","defaultValue","ref","position","left","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","IdentityInformationPanel","BarWrapper","BarProgress","ProgressBar","total","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","marginTop","BalanceRow","original","shorten","parseFloat","toFixed","round","DeFiSummary","featuredToken","converstion","DashboardScreen","featuredTokens","changeScreen","IdentitySummary","identity","defi","datavault","userAddr","tokenAddr","DasboardScreen","EditValueModal","onConfirm","inputType","strings","editable","setEditable","sharedProps","intro","label","submit","BinaryModal","onDeny","text","deny","confirm","DeleteDvContentButton","itemKey","deleteValue","isDeleting","setIsDeleting","trashIcon","finally","DecryptKey","handleGetContent","DownloadErrorMessage","keyError","DeclarativeDetailsDisplay","details","swapValue","getKeyContent","isDownloadError","setIsDownloadError","isEditing","setIsEditing","isGettingContent","setIsGettingContent","declarativeIcon","hasEmpty","showDownloadMessage","k","includes","pencilIcon","newValue","existingItem","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","toUpperCase","Web3ProviderContext","React","createContext","Web3ProviderElement","initialContext","Provider","CredentialView","jwt","showRaw","setShowRaw","setError","prettyJson","setPrettyJson","jwtDecode","PresentCredential","createPresentation","setState","handleCreate","presentationLink","CredentialDisplay","emailCredLink","CredentialIcon","DownloadBackup","handleDownload","initStatus","setStatus","downloadIcon","DataVaultComponent","downloadBackup","useContext","handleDelete","handleGetKeyContent","vpPayload","vp","verifiableCredential","nbf","floor","Date","getTime","exp","createJWT","alg","issuer","signer","fromRpcSig","v","r","s","recoveryParam","getBackup","element","createElement","URL","createObjectURL","Blob","download","body","appendChild","click","remove","DelegateComponent","delegates","addDelegate","isOwner","isAdding","setIsAdding","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidAddress","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","ethrdid","EthrDID","setDidOwner","delegateType","setAttribute","Balance","togglePopup","tokenAddress","DeFiComponent","AuthenticatedComponent","modifyMultipleItems","logoutOrSwitchAccounts","screen","setScreen","handleWalletChange","isLoggingOut","removeAllListeners","on","HeaderComponent","items","DashboardContainer","DataVaultContainer","IdentityContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","decryptMultipleKeys","RifFooter","isLoggedIn","version","poweredGray","powered","APP_NAME","PlausibleAnalytics","domain","setShow","linkProps","answer","DEFAULT","GRANTED","addAnalyticsScript","event","decision","currentTarget","DENIED","script","head","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","rootReducer","combineReducers","identityReducer","ethrdidReducer","defiReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.45a7db52.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n\nexport enum PROVIDERS {\n  METAMASK = 'METAMASK',\n  NIFTY = 'NIFTY',\n  WALLET_CONNECT = 'WALLET_CONNECT'\n}\n\n/**\n * Return the Provider Name. Used to detect DataVault features\n * @param provider web3Provider\n */\nexport const getProviderName = (provider: any) => {\n  if (provider.isNiftyWallet) {\n    return PROVIDERS.NIFTY\n  }\n  if (provider.isMetaMask) {\n    return PROVIDERS.METAMASK\n  }\n  if (provider.wc) {\n    return PROVIDERS.WALLET_CONNECT\n  }\n}\n","import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React, { useEffect } from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  useEffect(() => {\n    if (localStorage.getItem('WEB3_CONNECT_CACHED_PROVIDER')) {\n      handleLogin()\n    }\n  }, [])\n\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","/* eslint-disable no-unused-vars */\nimport AllNetworks from './config.json'\nimport Ethereum from './config.ethereum.json'\nimport Ropsten from './config.ropsten.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Kovan from './config.kovan.json'\nimport Rinkeby from './config.rinkeby.json'\nimport Goerli from './config.goerli.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  BALANCE_NAME = 'balanceName',\n  COIN_GECKO_IDS = 'coinGeckoIds'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 3: return Ropsten[setting]\n    case 4: return Rinkeby[setting]\n    case 5: return Goerli[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 42: return Kovan[setting]\n    default: return Local[setting]\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getDataVault = () => AllNetworks.dataVaultUrl\nexport const getBalanceName = (chainId: number) => getSetting(chainId, SETTINGS.BALANCE_NAME) as string\nexport const getCoinGeckoIdsForNetwork = (chainId: number) => getSetting(chainId, SETTINGS.COIN_GECKO_IDS) as string\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity',\n  DEFI = 'defi'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n  logout: () => void\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick, logout }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'dashboard active' : 'dashboard'}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        <li className={selected === screens.DEFI ? 'defi active' : 'defi'}>\n          <button onClick={() => handleClick(screens.DEFI)}>DeFi Assets</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'datavault active' : 'datavault'}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n        <li className=\"logout\"><button onClick={logout}>Logout</button></li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          3: getRPCUrl(3),\n          4: getRPCUrl(4),\n          5: getRPCUrl(5),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          42: getRPCUrl(42),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 3, 4, 5, 30, 31, 42, 5777]\n})\n\nexport const clearRloginStorage = () => {\n  localStorage.removeItem('RLOGIN_ACCESS_TOKEN')\n  localStorage.removeItem('RLOGIN_REFRESH_TOKEN')\n  localStorage.removeItem('WEB3_CONNECT_CACHED_PROVIDER')\n  localStorage.removeItem('walletconnect')\n\n  Object.keys(localStorage).map((key: string) => {\n    if (key.startsWith('DV_ACCESS_TOKEN') || key.startsWith('DV_REFRESH_TOKEN')) {\n      localStorage.removeItem(key)\n    }\n  })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { changeAccount, changeChainId, reset } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { resolveDid, reset } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:${address}`\n    case 3: return `did:ethr:ropsten:${address}`\n    case 4: return `did:ethr:rinkeby:${address}`\n    case 5: return `did:ethr:goerli:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 42: return `did:ethr:kovan:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nconst add = (name: string, chainId: number) => ({ name, registry: getDIDRegistryAddress(chainId), rpcUrl: getRPCUrl(chainId) })\n\nexport const resolverProviderConfig = {\n  networks: [\n    add('mainnet', 1),\n    add('ropsten', 3),\n    add('rinkeby', 4),\n    add('goerli', 5),\n    add('rsk', 30),\n    add('rsk:testnet', 31),\n    add('kovan', 31),\n    add('development', 5777)\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null,\n  conversion?: number\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0,\n  conversion: undefined\n}\n\nexport interface DefiState {\n  tokens: Token[],\n  balance: number | null,\n  conversion: number | null\n}\n\nexport const initialState = {\n  tokens: [],\n  balance: null,\n  conversion: null\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst defiSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: DefiState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    },\n    receiveBalance (state: DefiState, { payload: { balance } }: PayloadAction<{ balance: number }>) {\n      state.balance = balance\n    },\n    receiveConversionBalance (state: DefiState, { payload: { usd } }: PayloadAction<{ usd: number }>) {\n      state.conversion = usd\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { addTokenData, receiveBalance, receiveConversionBalance, reset } = defiSlice.actions\n\nexport default defiSlice.reducer\n","import ContractsTestnet from '@rsksmart/rsk-testnet-contract-metadata'\nimport ContractsMainnet from '@rsksmart/rsk-contract-metadata'\n\nexport interface TokenMetadata {\n  name: string\n  logo: string\n  erc20: boolean\n  symbol: string\n  decimals: number\n}\n\nexport interface TokenMetadataPair {\n  [address: string] : TokenMetadata\n}\n\nconst getTokenContracts = (chainId: number) => {\n  switch (chainId) {\n    case 30: return ContractsMainnet\n    case 31: return ContractsTestnet\n    default: return null\n  }\n}\n\n/**\n * Converts CoinGecko coin Ids to their address or to the defaultBalance\n * @param symbol CoinGecko's coin/token Id\n * @param chainId ChainId of the network\n */\nexport const mapToCoinGeckoToAddress = (symbol: string, chainId: number) => {\n  switch (symbol) {\n    case 'ethereum':\n    case 'bitcoin':\n      return 'defaultBalance'\n    case 'rif-token':\n      return chainId === 30\n        ? '0x2aCc95758f8b5F583470bA265Eb685a8f45fC9D5' : '0x19f64674D8a5b4e652319F5e239EFd3bc969a1FE'\n    default: return null\n  }\n}\n\nexport default getTokenContracts\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData, receiveBalance, receiveConversionBalance } from '../reducers/defi'\nimport getTokenContracts, { TokenMetadataPair, TokenMetadata, mapToCoinGeckoToAddress } from '../../../config/getTokenContracts'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\nimport Axios, { AxiosResponse } from 'axios'\nimport { getCoinGeckoIdsForNetwork } from '../../../config/getConfig'\n\nexport const getTokenList = (provider: any, chainId: number, userAddress: string) => (dispatch: Dispatch<any>) => {\n  // get the set token list for the specific chainId\n  dispatch(getSetTokenList(provider, userAddress, chainId))\n\n  // get conversion rates for tokenlist that are in CoinGecko\n  dispatch(getConversionRates(chainId))\n\n  // local tokens that were saved in localStorage\n  const localTokens = getValueFromLocalStorage(chainId.toString(), 'TOKEN') ? getValueFromLocalStorage(chainId.toString(), 'TOKEN') : []\n  localTokens.map((address: string) => {\n    dispatch(getTokenWithMetadata(provider, address, userAddress))\n  })\n}\n\n/**\n * Loops through the contract metadata as specificed by @rsksmart/rsk-[testnet-]contract-metadata\n * @param provider web3 provider\n * @param userAddress users Address\n * @param chainId id of the network\n */\nconst getSetTokenList = (provider: any, userAddress: string, chainId: number) => (dispatch: Dispatch<any>) => {\n  const allTokens = getTokenContracts(chainId) as TokenMetadataPair\n  if (!allTokens) {\n    return\n  }\n\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  for (const address in allTokens) {\n    const metadata = allTokens[address] as TokenMetadata\n\n    if (metadata.erc20) {\n      ethContract(erc20abi).at(address).balanceOf(userAddress)\n        .then((balance: BN[]) => balance[0])\n        .then((balance: BN) => balance.div(new BN(10).pow(new BN(metadata.decimals))).toNumber())\n        .then((balance: number) => {\n          if (balance !== 0) {\n            dispatch(addTokenData({ data: { address, balance, name: metadata.name, symbol: metadata.symbol } }))\n          }\n        })\n        .catch((err: Error) => console.log('balanceOf error', err))\n    }\n  }\n}\n\n/**\n * Get balance and metadata for a specific token\n * @param provider web3 Provider\n * @param contractAddress contract address\n * @param userAddress address of the user to query balance\n * @param onComplete callback function to be called\n */\nexport const getTokenWithMetadata = (provider: any, contractAddress: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const address = contractAddress.toLowerCase().trim()\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\n/**\n * Watch a custom token that the user has inputed the address for\n * @param provider web3 provider\n * @param userAddress user's address\n * @param address contract address to query\n * @param chainId chain Id\n */\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getTokenWithMetadata(provider, address, userAddress, onComplete))\n  })\n\n/**\n * Get the default balance of the user\n * @param provider web3 provider\n * @param address address of the user\n */\nexport const getBalance = (provider: any, address: string) => (dispatch: Dispatch<any>) =>\n  new Eth(provider).getBalance(address)\n    .then((balance: BN) => parseInt(balance.toString()))\n    .then((balance: number) => balance / Math.pow(10, 18))\n    .then((balance:number) => dispatch(receiveBalance({ balance })))\n\n/**\n * Gets the Token to USD conversion rate\n * @param address Token address, used for storing it in redux\n * @param geckoIds Ids of the coin for coingecko's AIP\n */\nexport const getConversionRates = (chainId: number) => (dispatch: Dispatch<any>) => {\n  const geckoIds = getCoinGeckoIdsForNetwork(chainId)\n  if (!geckoIds) {\n    return\n  }\n\n  Axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${geckoIds}&vs_currencies=usd`)\n    .then((response: AxiosResponse) => response.data)\n    .then((data: { [name: string]: { usd: number } }) => {\n      for (const geckoId in data) {\n        const address = mapToCoinGeckoToAddress(geckoId, chainId)\n        if (address === 'defaultBalance') {\n          dispatch(receiveConversionBalance(data[geckoId]))\n        } else if (address) {\n          dispatch(addTokenData({ data: { address: address, conversion: data[geckoId].usd } }))\n        }\n      }\n    })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  declarativeDetails: {},\n  credentials: {},\n  storage: undefined\n}\n\nconst getBucket = (key: string) => key.endsWith('Credential') ? 'credentials' : 'declarativeDetails'\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state[getBucket(key)][key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.declarativeDetails[key] ? state.declarativeDetails[key].push(content) : state.declarativeDetails[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      const bucket = getBucket(key)\n      state[bucket][key] = state[bucket][key].filter((item: DataVaultContent) => item.id !== id)\n\n      if (state[bucket][key].length === 0) {\n        delete state[bucket][key]\n      }\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    },\n    receiveKeys (state: DataVaultState, { payload: { keys } }: PayloadAction<{ keys: string[] }>) {\n      keys.forEach((key: string) => {\n        key.endsWith('Credential') ? state.credentials[key] = [] : state.declarativeDetails[key] = []\n      })\n    },\n    reset: _state => initialState\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation, receiveKeys, reset } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient, { AuthManager, AsymmetricEncryptionManager, SignerEncryptionManager } from '@rsksmart/ipfs-cpinner-client'\n\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey, receiveKeys } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { Backup, CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\nimport { getProviderName, PROVIDERS } from '../../../ethrpc'\nimport { IEncryptionManager } from '@rsksmart/ipfs-cpinner-client/lib/encryption-manager/types'\n\n/**\n * Helper function that returns the correct encryption method\n * @param provider web3 provider\n */\nconst getEncryptionManager = async (provider: any) =>\n  getProviderName(provider) === PROVIDERS.METAMASK\n    ? await AsymmetricEncryptionManager.fromWeb3Provider(provider)\n    : await SignerEncryptionManager.fromWeb3Provider(provider)\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const serviceUrl = getDataVault()\n  const did = createDidFormat(address, chainId).toLowerCase()\n  const personalSign = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n  const authManager = new AuthManager({ did, serviceUrl, personalSign })\n\n  return getEncryptionManager(provider)\n    .then((encryptionManager: IEncryptionManager) =>\n      new DataVaultWebClient({ serviceUrl, authManager, encryptionManager }))\n}\n\n/**\n * Get all keys and from the datavault\n * @param client DataVault client\n */\nexport const getDataVaultKeys = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) => dispatch(receiveKeys({ keys })))\n\n/**\n * Get all content from a specific key from the datavault\n * @param client DataVault client\n * @param key string\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, key: string) => (dispatch: Dispatch<any>) =>\n  client.get({ key })\n    .then((content: any) => content as DataVaultContent[])\n    .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n\n/**\n * Decrypt multiple keys at one time\n * @param client Datavault clinet\n * @param keys string[] keys that you want to decrypt\n */\nexport const decryptMultipleKeys = (client: DataVaultWebClient, keys: string[]) => (dispatch: Dispatch<any>) =>\n  keys.map(key => dispatch(getDataVaultContent(client, key)))\n\n/**\n * Start the Data Vault Client\n * Request StorageInformation first, which will save the access token with the DataVault Service\n * in localStorage. Then request the content from the data vault.\n * @param provider Web3 Provider\n * @param address User Address\n * @param chainId ChainId\n * @param callback Function\n */\nexport const dataVaultStart = (provider: any, address: string, chainId: number, callback?: any) => (dispatch: Dispatch<any>) => {\n  const client = createClient(provider, address, chainId)\n\n  client.then((client: DataVaultWebClient) => client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => {\n      dispatch(receiveStorageInformation({ storage }))\n      dispatch(getDataVaultKeys(client))\n      callback(client)\n    })\n    .catch((err: any) => callback(null, err))\n  )\n}\n\n/**\n * Download backup text file from the DataVault\n * @param client DataVault Client\n */\nexport const downloadBackup = (client: DataVaultWebClient) =>\n  client.getBackup()\n    .then((value: Backup) => JSON.stringify(value))\n    .then((value: string) => {\n      const element = document.createElement('a')\n      element.href = URL.createObjectURL(new Blob([value], { type: 'text/plain;charset=utf-8' }))\n      element.download = 'dataVaultBackup.txt'\n      document.body.appendChild(element)\n      element.click()\n      element.remove()\n    })\n","import { Dispatch } from 'react'\n\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin, clearRloginStorage } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId, reset as resetIdentity } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getBalance, getTokenList } from './defi'\nimport { dataVaultStart } from './datavault'\n\nimport { reset as resetDV } from '../reducers/datavault'\nimport { reset as resetDefi } from '../reducers/defi'\nimport { reset as resetEthrDid } from '../reducers/ethrdid'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then(({ provider }: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, parseInt(chainId), address))\n      dispatch(getBalance(provider, address))\n\n      const callback = (dvClient: any, _error: any) => context.setDvClient(dvClient)\n      dispatch(dataVaultStart(provider, address, chainId, callback))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n\n/**\n * Dispatch reset on all reducers back to InitialState\n */\nexport const resetReducers = () => (dispatch: Dispatch<any>) => {\n  dispatch(resetDV())\n  dispatch(resetDefi())\n  dispatch(resetEthrDid())\n  dispatch(resetIdentity())\n}\n\n/**\n * Logout of App completely removing localStorage, resetting reducers, and restting context\n */\nexport const logout = () => (dispatch: Dispatch<any>) => {\n  rLogin.clearCachedProvider()\n  clearRloginStorage()\n  dispatch(resetReducers())\n}\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 3: return 'Ropsten Testnet'\n    case 4: return 'Rinkeby Testnet'\n    case 5: return 'Görli Testnet'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    case 42: return 'Kovan Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  opacity: 0;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  margin-top:25px;\n  top: 0px;\n  transition: opacity .6s;\n  display: block;\n  min-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover {\n    ${HoverSpan} {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <HoverTrigger className={className}>\n    {children}\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </HoverTrigger>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","export const ENCRYPTED = 'ENCRYPTED'\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\nimport { ENCRYPTED } from '../types'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n  decryptPersona: (keys: string[]) => Promise<any>;\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona, decryptPersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n  const [encryptedItems, setEncryptedItems] = useState<string[]>([])\n\n  useEffect(() => {\n    const localItems: React.SetStateAction<string[]> = []\n    Object.keys(initValue).map((item: string) => {\n      if (initValue[item][0].content === ENCRYPTED) {\n        localItems.push(item)\n      }\n    })\n\n    setEncryptedItems(localItems)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n\n    if (localItems.length === 0) {\n      setIsLoading(false)\n    }\n  }, [initValue])\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const loadAndShowModal = () => {\n    setIsError(null)\n    setIsLoading(false)\n    setShowModal(true)\n  }\n\n  const handleDecrypt = () => {\n    setIsLoading(true)\n    decryptPersona(encryptedItems)\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={loadAndShowModal}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        {encryptedItems.length !== 0 && (\n          <>\n            <h2>Your persona is encrypted</h2>\n            <p>You first need to decrypt the following items. Click the button below and then decrypt them in your wallet.</p>\n            <p>{encryptedItems.map(item => `${item.replace('DD_', '')}, `)}</p>\n            <BaseButton className=\"blue decrypt\" onClick={handleDecrypt} disabled={isLoading}>Decrypt</BaseButton>\n            {isLoading && <LoadingComponent />}\n          </>\n        )}\n        {encryptedItems.length === 0 && (\n          <div>\n            <h2>Edit Persona</h2>\n            {truncateAddressDid(did)}\n            <p>You can edit your personal that be saved in your data vault.</p>\n\n            <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n            <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n            <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n            <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n            <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n            <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n            <p>\n              <BaseButton\n                className=\"save blue\"\n                onClick={save}\n                disabled={isLoading}\n              >Save</BaseButton></p>\n\n            {isError && <div className=\"alert error\">{isError}</div>}\n            {isLoading && <LoadingComponent />}\n          </div>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\nimport { ENCRYPTED } from '../../DataVault/types'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n  decryptPersona: (keys: string[]) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona, decryptPersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== '' && persona.DD_NAME[0].content !== ENCRYPTED\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n          decryptPersona={decryptPersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import React, { useState, useEffect } from 'react'\n\n// eslint-disable-next-line no-unused-vars\nexport enum Decision { DENIED = 'DENIED', GRANTED = 'GRANTED', DEFAULT = 'DEFAULT' }\n\nconst APP_NAME = 'ID_MANAGER'\n\ninterface Interface {\n  domain: string,\n}\n\nconst PlausibleAnalytics: React.FC<Interface> = ({ domain }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  const linkProps = {\n    target: '_blank',\n    rel: 'noopener'\n  }\n\n  useEffect(() => {\n    const answer = localStorage.getItem(`PLAUSIBLE_${APP_NAME}`) || Decision.DEFAULT\n\n    setShow(answer === Decision.DEFAULT)\n    if (answer === Decision.GRANTED) {\n      addAnalyticsScript()\n    }\n  }, [])\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    const decision = event.currentTarget.id === 'accept' ? Decision.GRANTED : Decision.DENIED\n    localStorage.setItem(`PLAUSIBLE_${APP_NAME}`, decision)\n\n    setShow(false)\n    if (decision === Decision.GRANTED) {\n      addAnalyticsScript()\n    }\n  }\n\n  const addAnalyticsScript = () => {\n    const script = document.createElement('script')\n    script.setAttribute('src', 'https://plausible.io/js/plausible.js')\n    script.setAttribute('async', 'true')\n    script.setAttribute('data-domain', domain)\n    document.head.appendChild(script)\n  }\n\n  return show ? (\n    <div id=\"analytics\">\n      <p>In order to improve the user&apos;s experience, this site uses Plausible, an open source and privacy-friendly tool, which does not use cookies and is compliant with GDPR, CCPA and PECR. We analyse your activity and our traffic. We strive to collect only the data that we need. We do not share your information with third parties; we want to better understand your behaviour in order to improve our website. Please take a moment to familiarize yourself with <a href=\"https://plausible.io/data-policy\" {...linkProps}>Plausible’s</a> and <a href=\"https://www.rsk.co/privacy-policy\" {...linkProps}>our policies</a>.</p>\n      <p>If you accept Plausible’s and ours policy, please click Accept.</p>\n      <p>If you do not accept Plausible’s and ours policy, we provide you with the means to disable our tracking system, please click Reject.</p>\n      <p>Certain features of the site may not be available if the tracking system is disabled.*</p>\n      <p>\n        <button onClick={handleClick} id=\"accept\">Accept</button>\n        <button onClick={handleClick} id=\"reject\">Reject</button>\n      </p>\n    </div>\n  ) : <></>\n}\n\nexport default PlausibleAnalytics\n","export default __webpack_public_path__ + \"static/media/copy.713b200d.svg\";","import React, { useRef, useState } from 'react'\nimport CopyIcon from '../../assets/images/icons/copy.svg'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const [showResponse, setShowResponse] = useState<boolean>(false)\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    setShowResponse(true)\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n    setTimeout(() => {\n      setShowResponse(false)\n    }, 1000)\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" onClick={handleClick} className=\"icon\">\n        <img src={CopyIcon} alt=\"Copy text\" />\n      </button>\n      {showResponse && <span className=\"response\">Copied to clipboard.</span>}\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  address: string\n  chainId: number\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId }) => {\n  const did = createDidFormat(address, chainId)\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Persona information\"\n          className=\"identity-information\"\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Persona DID</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                <CopyButton value={did} />\n              </p>\n            </div>\n            <div className=\"column\">\n              <h2>Persona Address</h2>\n              <p className=\"value\">\n                {address}\n                <CopyButton value={address} />\n              </p>\n            </div>\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <button className=\"link\" style={{ marginTop: -10 }} onClick={handleButton}>View your DataVault</button>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\n\ninterface BalanceRowInterface {\n  name?: string | null\n  balance?: number | null\n  symbol?: string | null\n  className?: string\n  conversion?: number\n}\n\nconst BalanceRow: React.FC<BalanceRowInterface> = ({ name, balance, symbol, className, conversion }) => {\n  const shorten = (original: number | null | undefined) => {\n    if (!original) { return original }\n    const shorten = parseFloat(original.toFixed(6))\n    return shorten === original ? original : shorten\n  }\n\n  if (!symbol) {\n    return <></>\n  }\n\n  return (\n    <div className={className ? `balance-row ${className}` : 'balance-row'}>\n      <h2>{name}</h2>\n      <div>\n        <span className=\"balance\">{shorten(balance)}</span>\n        <span className=\"symbol\">{symbol}</span>\n        {(conversion && !!balance) && (\n          <span className=\"conversion\">${Math.round(conversion * balance * 100) / 100} USD</span>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default BalanceRow\n","import React from 'react'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport { getBalanceName } from '../../../config/getConfig'\nimport { Token } from '../../state/reducers/defi'\n\ninterface DeFiSummaryInterface {\n  balance: number | null\n  converstion: number | null\n  chainId?: number | null\n  featuredToken?: Token\n  handleButton: () => void\n}\n\nconst DeFiSummary: React.FC<DeFiSummaryInterface> = ({ balance, chainId, featuredToken, converstion, handleButton }) =>\n  (balance !== null) && chainId\n    ? (\n      <Panel title={<>DeFi Summary</>} className=\"defi\">\n        <div className=\"container balance\">\n          <div className=\"columnDobule\">\n            <BalanceRow\n              name=\"Balance\"\n              balance={balance}\n              symbol={getBalanceName(chainId)}\n              conversion={converstion || undefined}\n            />\n            {featuredToken && (\n              <BalanceRow\n                name={featuredToken.name}\n                balance={featuredToken.balance}\n                symbol={featuredToken.symbol}\n                conversion={featuredToken.conversion || undefined}\n              />\n            )}\n          </div>\n        </div>\n        <BaseButton onClick={handleButton} className=\"turquoise\">More Defi</BaseButton>\n      </Panel>\n    )\n    : <></>\n\nexport default DeFiSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport DeFiSummary from './panels/DeFiSummary'\nimport { Token } from '../state/reducers/defi'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  storage?: DataVaultStorageState\n  balance: number | null\n  featuredTokens?: Token[]\n  converstion: number | null\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, storage, balance, featuredTokens, converstion, changeScreen\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      {address && chainId && <IdentitySummary address={address} chainId={chainId} />}\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeFiSummary\n            balance={balance}\n            converstion={converstion}\n            chainId={chainId}\n            featuredToken={featuredTokens ? featuredTokens[0] : undefined}\n            handleButton={() => changeScreen(screens.DEFI)}\n          />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\nimport { Token } from '../state/reducers/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.defi.tokens,\n  balance: state.defi.balance,\n  converstion: state.defi.conversion,\n  featuredTokens: state.defi.tokens.filter((token: Token) => token.symbol === 'RIF' || token.symbol === 'tRIF'),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  error?: string | null\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, error, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n      {error && <div className=\"alert error\">{error}</div>}\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState } from 'react'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport { DataVaultContent } from '../../state/reducers/datavault'\n\ninterface Interface {\n  itemKey: string\n  item: DataVaultContent\n  deleteValue: (key: string, id: string) => Promise<any>\n}\n\nconst DeleteDvContentButton: React.FC<Interface> = ({\n  itemKey, item, deleteValue\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<boolean>(false)\n\n  const handleDeleteItem = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(itemKey, item.id)\n      .then(() => setIsDeleting(false))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <>\n      <button\n        disabled={isLoading}\n        className=\"icon delete\"\n        onClick={() => setIsDeleting(true)}>\n        <img src={trashIcon} alt=\"Delete Item\" />\n      </button>\n\n      <BinaryModal\n        show={isDeleting}\n        onClose={() => setIsDeleting(false)}\n        onConfirm={handleDeleteItem}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n        error={isError}\n      />\n    </>\n  )\n}\n\nexport default DeleteDvContentButton\n","import React from 'react'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface DecryptKeyInterface {\n  handleGetContent: () => void\n  disabled: boolean\n}\n\nconst DecryptKey: React.FC<DecryptKeyInterface> = ({\n  handleGetContent, disabled\n}) => {\n  return (\n    <div className=\"decrypt\">\n      <BaseButton\n        className=\"gray small\"\n        onClick={handleGetContent}\n        disabled={disabled}>\n        Download\n      </BaseButton>\n    </div>\n  )\n}\n\nexport default DecryptKey\n","import React from 'react'\n\ninterface DownloadErrorMessageInterface {\n keyError: string\n}\n\nconst DownloadErrorMessage: React.FC<DownloadErrorMessageInterface> = ({ keyError }) => (\n  <p className=\"alert error\">This content is encrypted, and your wallet is unable to decrypt the key <em>{keyError}</em>.</p>\n)\n\nexport default DownloadErrorMessage\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport DecryptKey from '../components/DecryptKey'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  getKeyContent: (key: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue, getKeyContent }) => {\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleGetContent = (key: string) => {\n    setIsDownloadError(null)\n    setIsGettingContent([...isGettingContent, key])\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => {\n        setIsGettingContent(isGettingContent.filter((k: string) => k !== key))\n      })\n  }\n\n  const showDownloadMessage = () => {\n    const keys = Object.keys(details)\n    if (keys.length === 0) {\n      return false\n    }\n\n    let hasEmpty = false\n    for (var key in details) {\n      if (details[key].length === 0) {\n        hasEmpty = true\n      }\n    }\n    return hasEmpty\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      {showDownloadMessage() && <p className=\"intro\">Click on the download button to decrypt the content. Your wallet will request to decrypt each piece of content.</p>}\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key.replace('DD_', '')}</td>\n                <td>\n                  {details[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                  {details[key].map((item: DataVaultContent) => (\n                    <div className=\"content-row\" key={item.id}>\n                      <div className=\"content break-all\">\n                        <p>{item.content}</p>\n                      </div>\n                      <div className=\"options\">\n                        <button\n                          disabled={isLoading}\n                          className=\"icon edit\"\n                          onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                        >\n                          <img src={pencilIcon} alt=\"Edit item\" />\n                        </button>\n                        <DeleteDvContentButton itemKey={key} item={item} deleteValue={deleteValue} />\n                      </div>\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            )\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(`DD_${type.toUpperCase()}`, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"alert error\">\n          <p>{isError}</p>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n  reset: () => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null,\n  reset: () => {}\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient | null) => setDvClient(client),\n    reset: () => {\n      setProvider(null)\n      setDvClient(null)\n    }\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { ReactNode, useEffect, useState } from 'react'\nimport jwtDecode from 'jwt-decode'\n\ninterface CredentialViewInterface {\n  jwt: string\n  options?: ReactNode\n}\n\nconst CredentialView: React.FC<CredentialViewInterface> = ({ jwt, options }) => {\n  const [showRaw, setShowRaw] = useState<boolean>(false)\n  const [error, setError] = useState<null | string>(null)\n  const [prettyJson, setPrettyJson] = useState<string>('')\n\n  useEffect(() => {\n    try {\n      setPrettyJson(JSON.stringify(jwtDecode(jwt), null, 2))\n    } catch (err) {\n      setError(err.message)\n      setShowRaw(true)\n    }\n  }, [jwt])\n\n  return (\n    <div className=\"content-row\">\n      <div className=\"content\">\n        {prettyJson && (\n          <div className=\"break-all\">\n            <textarea\n              defaultValue={prettyJson}\n              disabled={true}></textarea>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert error\">\n            <strong>Could not decode credential!</strong><br />\n            <em>The raw data is displayed below.</em>\n          </div>\n        )}\n\n        {showRaw && <div className=\"raw break-all\">{jwt}</div>}\n      </div>\n      {!error && (\n        <div className=\"options\">\n          <button className=\"icon raw\" onClick={() => setShowRaw(!showRaw)}>{showRaw ? 'Hide' : 'View'} Raw</button>\n          {options}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CredentialView\n","export default __webpack_public_path__ + \"static/media/credential.436c18a7.svg\";","import React, { useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport { BaseButton } from '../../../components/Buttons'\n\ninterface PresentCredentialInterface {\n  jwt: string\n  createPresentation: (jwt: string) => Promise<string>\n}\n\nconst PresentCredential: React.FC<PresentCredentialInterface> = ({ jwt, createPresentation }) => {\n  interface stateInterface {\n    status: 'NONE' | 'LOADING' | 'DONE' | 'ERROR'\n    message: string\n  }\n  const initialState: stateInterface = { status: 'NONE', message: '' }\n  const [state, setState] = useState<stateInterface>(initialState)\n\n  const handleCreate = () => {\n    setState({ status: 'LOADING', message: '' })\n    createPresentation(jwt)\n      .then((message: string) => setState({ status: 'DONE', message }))\n      .catch((error: Error) => setState({ status: 'ERROR', message: error.message }))\n  }\n\n  const presentationLink = state.status === 'DONE' ? `https://rsksmart.github.io/rif-credential-verifier/?jwt=${state.message}` : ''\n\n  return (\n    <>\n      <button className=\"icon\" onClick={handleCreate}>Present</button>\n      <Modal show={state.status !== 'NONE'} onClose={() => setState(initialState)} title=\"Present Credential\">\n        {state.status === 'LOADING' && <LoadingComponent />}\n        {state.status === 'DONE' && (\n          <div>\n            <h2>Sharable link:</h2>\n            <textarea defaultValue={presentationLink} className=\"sharableLink\" />\n            <p><CopyButton value={presentationLink} /></p>\n            <p>\n              <a href={presentationLink} target=\"_blank\" rel=\"noreferrer\">\n                Open in new window\n              </a>\n            </p>\n          </div>\n        )}\n        {state.status === 'ERROR' && (\n          <>\n            <p className=\"alert error\">{state.message}</p>\n            <p><BaseButton onClick={handleCreate}>Try Again</BaseButton></p>\n          </>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default PresentCredential\n","import React, { useState } from 'react'\nimport CredentialView from '../../../components/CredentialView/CredentialView'\nimport Panel from '../../../components/Panel/Panel'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport CredentialIcon from '../../../assets/images/icons/credential.svg'\nimport DecryptKey from '../components/DecryptKey'\nimport DeleteDvContentButton from '../components/DeleteDvContentButton'\nimport PresentCredential from '../components/PresentCredential'\nimport DownloadErrorMessage from '../components/DownloadErrorMessage'\n\ninterface CredentialDisplayInterface {\n  credentials: DataVaultKey\n  getKeyContent: (key: string) => Promise<any>\n  deleteValue: (key: string, id: string) => Promise<any>\n  createPresentation: (jwt: string) => Promise<any>\n}\n\nconst CredentialDisplay: React.FC<CredentialDisplayInterface> = ({ credentials, getKeyContent, deleteValue, createPresentation }) => {\n  const [isGettingContent, setIsGettingContent] = useState<string[]>([])\n  const [isDownloadError, setIsDownloadError] = useState<null | string>(null)\n  const handleGetContent = (key: string) => {\n    setIsGettingContent([...isGettingContent, key])\n    setIsDownloadError(null)\n    getKeyContent(key)\n      .catch(() => setIsDownloadError(key))\n      .finally(() => setIsGettingContent(isGettingContent.filter((k: string) => k !== key)))\n  }\n\n  const emailCredLink = <a href=\"https://email-verifier.identity.rifos.org/\" target=\"_blank\" rel=\"noreferrer\">Get an Email Credential</a>\n\n  return (\n    <Panel title={<><img src={CredentialIcon} /> Credentials</>} className=\"display credentials\" headerRight={emailCredLink}>\n      {isDownloadError && <DownloadErrorMessage keyError={isDownloadError} />}\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(credentials).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>\n                  <ul>\n                    {credentials[key].map((item: DataVaultContent) =>\n                      <li key={item.id}>\n                        <CredentialView\n                          jwt={item.content}\n                          options={<>\n                            <div><PresentCredential jwt={item.content} createPresentation={createPresentation} /></div>\n                            <div><DeleteDvContentButton item={item} itemKey={key} deleteValue={deleteValue} /></div>\n                          </>}\n                        />\n                      </li>)}\n                  </ul>\n                  {credentials[key].length === 0 && (\n                    <DecryptKey handleGetContent={() => handleGetContent(key)} disabled={isGettingContent.includes(key)} />\n                  )}\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Panel>\n  )\n}\n\nexport default CredentialDisplay\n","export default __webpack_public_path__ + \"static/media/download.b2edd61f.svg\";","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport downloadIcon from '../../../assets/images/icons/download.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface DownloadBackupInterface {\n  handleDownload: () => Promise<any>\n}\n\nconst DownloadBackup: React.FC<DownloadBackupInterface> = ({\n  handleDownload\n}) => {\n  const initStatus = { isLoading: false, isError: null }\n  const [status, setStatus] = useState<{ isLoading: boolean; isError: string | null }>({\n    isLoading: false,\n    isError: null\n  })\n\n  const download = () => {\n    setStatus({ ...initStatus, isLoading: true })\n    handleDownload()\n      .then(() => setStatus(initStatus))\n      .catch((error: Error) => setStatus({ ...initStatus, isError: error.message }))\n  }\n\n  return (\n    <Panel title={<><img src={downloadIcon} /> Download Backup</>}>\n      <p>Download a backup file of all the keys and IPFS hashes that are stored in the DataVault.</p>\n      <p><BaseButton onClick={download} disabled={status.isLoading} className=\"small\">\n        Download Backup\n      </BaseButton></p>\n      {status.isLoading && <LoadingComponent />}\n      {status.isError && <div className=\"alert error\">{status.isError}</div>}\n    </Panel>\n  )\n}\n\nexport default DownloadBackup\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\nimport CredentialDisplay from './panels/CredentialDisplay'\nimport DownloadBackup from './panels/DownloadBackup'\nimport { createPresentation } from '../../features/credentials'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n  downloadBackup: (client: DataVaultWebClient) => any\n  getKeyContent: (client: DataVaultWebClient, key: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, credentials, deleteValue, swapValue, downloadBackup, getKeyContent\n}) => {\n  const context = useContext(Web3ProviderContext)\n  const dvClient = context.dvClient\n\n  if (!dvClient) {\n    return (\n      <div className=\"content data-vault\">\n        <h2>Could not connect to the DataVault</h2>\n        <p>Your wallet may be asking for permission.</p>\n      </div>\n    )\n  }\n\n  const handleAdd = (key: string, content: string) => addDeclarativeDetail(dvClient, key, content)\n  const handleDelete = (key: string, id: string) => deleteValue(dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) => swapValue(dvClient, key, content, id)\n  const handleDownload = () => context.dvClient && downloadBackup(dvClient)\n  const handleGetKeyContent = (key: string) => getKeyContent(dvClient, key)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails\n            addDeclarativeDetail={handleAdd}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n            getKeyContent={handleGetKeyContent}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <CredentialDisplay\n            credentials={credentials}\n            deleteValue={handleDelete}\n            getKeyContent={handleGetKeyContent}\n            createPresentation={(jwt: string) => createPresentation(context.provider, jwt)}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DownloadBackup handleDownload={handleDownload} />\n        </div>\n        <div className=\"column\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { createJWT } from 'jesse-did-jwt'\nimport { fromRpcSig } from 'ethereumjs-util'\nimport { getAccountAndNetwork } from '../ethrpc'\nimport { createDidFormat } from '../formatters'\n\nexport const createPresentation = (provider: any, jwt: string) => {\n  return getAccountAndNetwork(provider).then(([address, chainId]) => {\n    const did = createDidFormat(address, chainId)\n\n    const signer = (data: string) => provider.request({ method: 'personal_sign', params: [data, address] })\n      .then(fromRpcSig)\n      .then(({ v, r, s }: { v: number, r: Buffer, s: Buffer }) => ({\n        r: r.toString('hex'),\n        s: s.toString('hex'),\n        recoveryParam: v\n      }))\n\n    const vpPayload = {\n      vp: {\n        '@context': ['https://www.w3.org/2018/credentials/v1'],\n        type: ['VerifiablePresentation'],\n        verifiableCredential: [jwt],\n        nbf: Math.floor(new Date().getTime() / 1000),\n        exp: Math.floor(new Date().getTime() / 1000) + 3600\n      }\n    }\n\n    return createJWT(vpPayload, { alg: 'ES256K', issuer: did, signer })\n  })\n}\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent, downloadBackup, getDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.declarativeDetails,\n  credentials: state.datavault.credentials\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id)),\n  downloadBackup: (client: DataVaultWebClient) => downloadBackup(client),\n  getKeyContent: (client: DataVaultWebClient, key: string) =>\n    dispatch(getDataVaultContent(client, key))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/defi'\nimport { isValidAddress } from 'rskjs-util'\nimport { truncateAddressDid } from '../../../formatters'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport { getBalanceName } from '../../../config/getConfig'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  chainId: number\n  balance: number | null,\n  conversion: number | null,\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setIsError(null)\n  }\n\n  const addToken = (tokenAddress: string) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(tokenAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, tokenAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Assets\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup}>Watch Asset</button>}\n    >\n      {balance !== null && (\n        <BalanceRow\n          name=\"Balance\"\n          className=\"defaultBalance\"\n          balance={balance}\n          symbol={getBalanceName(chainId)}\n          conversion={conversion || undefined}\n        />\n      )}\n\n      {tokens?.map((token: Token) =>\n        <BalanceRow\n          key={token.address}\n          name={token.name || `Custom token: ${truncateAddressDid(token.address)}`}\n          balance={token.balance}\n          symbol={token.symbol}\n          conversion={token.conversion}\n        />\n      )}\n\n      <EditValueModal\n        show={isAdding}\n        onClose={togglePopup}\n        disabled={isLoading}\n        error={isError}\n        strings={{\n          title: 'Add Token',\n          intro: 'Add an ERC20 or ERC721 token to the dashboard',\n          label: 'Token to add:',\n          placeholder: 'contract address',\n          submit: 'Add Token'\n        }}\n        onConfirm={addToken}\n      />\n    </Panel>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Token } from '../state/reducers/defi'\nimport Balance from './panels/Balance'\n\ninterface DeFiComponentInterface {\n  tokens: Token[]\n  chainId: number\n  balance: number | null\n  conversion: number | null\n  addCustomToken: (provider: any, tokenAddr: string) => any\n}\n\nconst DeFiComponent: React.FC<DeFiComponentInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => (\n  <div className=\"content defi\">\n    <div className=\"container\">\n      <div className=\"column\">\n        <Balance\n          tokens={tokens}\n          addCustomToken={addCustomToken}\n          chainId={chainId}\n          balance={balance}\n          conversion={conversion}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default DeFiComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DeFiComponent from './DeFiComponent'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  tokens: state.defi.tokens,\n  chainId: state.identity.chainId,\n  balance: state.defi.balance,\n  conversion: state.defi.conversion\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DeFiComponent)\n","import React, { useContext, useEffect, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport DefiContainer from '../DeFi/DeFiContainer'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => void\n  decryptPersona: (client: DataVaultWebClient | null, keys: string[]) => any\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems, logoutOrSwitchAccounts, decryptPersona }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  const handleWalletChange = (isLoggingOut: boolean = false) => {\n    context.provider.removeAllListeners()\n    context.reset()\n    logoutOrSwitchAccounts(isLoggingOut)\n  }\n\n  useEffect(() => {\n    context.provider.on('accountsChanged', () => handleWalletChange())\n    context.provider.on('chainChanged', () => handleWalletChange())\n    context.provider.on('disconnect', () => handleWalletChange())\n  }, [])\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n        decryptPersona={(keys: string[]) => decryptPersona(context.dvClient, keys)}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n        logout={() => handleWalletChange(true)}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n      {screen === screens.DEFI && <DefiContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { decryptMultipleKeys, modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { logout, resetReducers } from '../state/operations/identity'\nimport { ENCRYPTED } from '../DataVault/types'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n\n  const returnValueOrEmpty = (key: string) => {\n    // key is set and data is decrypted\n    if (data[key] && data[key][0]) {\n      return data[key]\n    }\n\n    // key is loaded, but no content\n    if (data[key] && !data[key][0]) {\n      return [{ id: '', content: ENCRYPTED }]\n    }\n\n    // no key\n    return [{ id: '', content: '' }]\n  }\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.declarativeDetails)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items)),\n  decryptPersona: (client: DataVaultWebClient | null, keys: string[]) => client && dispatch(decryptMultipleKeys(client, keys)),\n  logoutOrSwitchAccounts: (isLoggingOut: boolean) => isLoggingOut ? dispatch(logout()) : dispatch(resetReducers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\nimport PlausibleAnalytics from '../components/Plausible/PlausibleAnalytics'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n      <PlausibleAnalytics domain=\"identity.rifos.org\" />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware, Middleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport defiReducer, { DefiState } from './reducers/defi'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware: Middleware[] = [thunk]\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nexport interface stateInterface {\n  identity: IdentityState\n  ethrdid: EtherdidState\n  defi: DefiState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  defi: defiReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}