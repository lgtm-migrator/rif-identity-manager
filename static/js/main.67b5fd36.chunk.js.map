{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/defi.ts","config/getTokenContracts.ts","storage/localStorage.ts","app/state/operations/defi.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/Authenticated/components/Navigation.tsx","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","assets/images/icons/copy.svg","components/CopyButton/CopyButton.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","components/BalanceRow/BalanceRow.tsx","app/Dashboard/panels/DeFiSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","components/Modal/EditValueModal.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","providerContext.tsx","components/CredentialView/CredentialView.tsx","assets/images/icons/credential.svg","app/DataVault/panels/CredentialDisplay.tsx","app/DataVault/DataVaultComponent.tsx","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/DeFi/panels/Balance.tsx","app/DeFi/DeFiComponent.tsx","app/DeFi/DeFiContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","getSetting","setting","Ethereum","Mainnet","Testnet","Local","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","getBalanceName","BALANCE_NAME","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","createDidFormat","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","conversion","undefined","defiSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","receiveBalance","receiveConversionBalance","usd","mapToCoinGeckoToAddress","getTokenContracts","ContractsMainnet","ContractsTestnet","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getSetTokenList","userAddress","allTokens","ethContract","EthContract","metadata","erc20","erc20abi","at","balanceOf","div","BN","pow","decimals","toNumber","console","log","getTokenWithMetadata","onComplete","token","getCode","Error","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","getConversionRates","geckoIds","COIN_GECKO_IDS","getCoinGeckoIdsForNetwork","Axios","get","geckoId","declarativeDetails","credentials","storage","dataVaultSlice","receiveKeyData","content","endsWith","addContentToKey","removeContentfromKey","swapContentById","receiveStorageInformation","createClient","serviceUrl","AllNetworks","dataVaultUrl","DataVaultWebClient","authManager","AuthManager","personalSign","request","method","params","encryptionManager","EncryptionManager","getEncryptionPublicKey","decrypt","hexCypher","createDataVaultContent","client","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","dataVaultStart","callback","getStorageInformation","getKeys","keys","forEach","getDataVaultContent","login","context","connect","setProvider","getTokenList","getBalance","Math","dvClient","_error","setDvClient","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","screens","LoadingComponent","EditPersonaModal","initValue","updatePersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","changeInputValue","evt","useEffect","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","DEFI","DATAVAULT","IDENTITY","CopyButton","showResponse","setShowResponse","copyTextField","useRef","current","select","document","execCommand","setTimeout","CopyIcon","defaultValue","ref","position","left","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","IdentityInformationPanel","BarWrapper","BarProgress","ProgressBar","total","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","BalanceRow","original","shorten","parseFloat","toFixed","round","DeFiSummary","featuredToken","converstion","DashboardScreen","featuredTokens","changeScreen","IdentitySummary","identity","defi","datavault","userAddr","tokenAddr","DasboardScreen","BinaryModal","onConfirm","onDeny","strings","text","deny","confirm","EditValueModal","inputType","editable","setEditable","sharedProps","intro","label","submit","DeclarativeDetailsDisplay","details","deleteValue","swapValue","isDeleting","setIsDeleting","isEditing","setIsEditing","declarativeIcon","Object","replace","pencilIcon","trashIcon","newValue","existingItem","finally","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","toUpperCase","Web3ProviderContext","React","createContext","Web3ProviderElement","initialContext","Provider","CredentialView","jwt","showRaw","setShowRaw","setError","prettyJson","setPrettyJson","jwtDecode","CredentialDisplay","CredentialIcon","DataVaultComponent","useContext","DelegateComponent","delegates","addDelegate","isOwner","isAdding","setIsAdding","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidAddress","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","ethrdid","EthrDID","setDidOwner","delegateType","setAttribute","Balance","newAddress","setNewAddress","togglePopup","DeFiComponent","AuthenticatedComponent","modifyMultipleItems","screen","setScreen","HeaderComponent","items","DashboardContainer","DataVaultContainer","IdentityContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","defiReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"65EAEO,ICKKA,EDLCC,EAAaC,IAAOC,OAAV,KEFR,MAA0B,2CC0B1BC,EAlB8C,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC9D,OACE,qBAAKC,UAAU,yBAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,yBACpB,yCACA,cAACR,EAAD,CAAYK,UAAU,OAAOI,QAASL,EAAtC,iCACA,8BACG,wBACD,mBAAGM,KAAK,wCAAwCC,OAAO,SAASC,IAAI,sBAApE,oC,wBCfGC,EAAa,SAACC,GAAD,OAAmB,IAAIC,IAAID,GAAUE,eAClDC,EAAc,SAACH,GAAD,OAAmB,IAAIC,IAAID,GAAUI,YAEnDC,EAAuB,SAACL,GAAD,OAClCM,QAAQC,IAAI,CACVJ,EAAYH,GAAUQ,MAAK,SAACJ,GAAD,OAAwBA,EAAS,MAC5DL,EAAWC,GAAUQ,MAAK,SAACC,GAAD,OAAqBC,SAASD,SAK/CE,EAAsB,SAACX,EAAeY,EAAYC,GAC7D,IAAMC,EAAM,IAAIb,IAAID,GAEde,EAAgBC,aAAY,kBAChCF,EAAIG,sBAAsBL,GACvBJ,MAAK,SAACU,GACL,GAAIA,EAEF,OADAC,cAAcJ,GACPF,EAAa,CAClBO,OAAQF,EAASG,gBACjBC,MAAqC,IAA9BZ,SAASQ,EAASK,QAAgB,6BAA+B,UAI7EC,OAAM,SAACC,GAAD,OAAgBZ,EAAa,CAAES,MAAOG,EAAIC,eACnD,M,2FHrBQzC,K,4BAAAA,E,iBAAAA,E,2BAAAA,E,+BAAAA,M,KAOZ,IAAM0C,EAAa,SAAClB,EAAiBmB,GACnC,OAAQnB,GACN,KAAK,EAAG,OAAOoB,EAASD,GACxB,KAAK,GAAI,OAAOE,EAAQF,GACxB,KAAK,GAAI,OAAOG,EAAQH,GACxB,QAAS,OAAOI,EAAMJ,KAIbK,EAAwB,SAACxB,GAAD,OAAqBkB,EAAWlB,EAASxB,EAASiD,oBAC1EC,EAAY,SAAC1B,GAAD,OAAqBkB,EAAWlB,EAASxB,EAASmD,UAE9DC,EAAiB,SAAC5B,GAAD,OAAqBkB,EAAWlB,EAASxB,EAASqD,eItBnEC,EAAS,IAAIC,IAAO,CAC/BC,gBAAgB,EAChBC,gBAAiB,CACfC,cAAe,CACbC,QAASC,IACTC,QAAS,CACPC,IAAK,CACHC,EAAGb,EAAU,GACbc,GAAId,EAAU,IACde,GAAIf,EAAU,IACdgB,KAAMhB,EAAU,UAKxBiB,gBAAiB,CAAC,EAAG,GAAI,GAAI,Q,QCCzBC,EAAgBC,YAAY,CAChCC,KAAM,WACNC,aAPyC,CACzCC,QAAS,GACThD,QAAS,MAMTiD,SAAU,CACRC,cADQ,SACOC,EADP,GAC6F,IAAnDH,EAAkD,EAA7DI,QAAWJ,QAChDG,EAAMH,QAAUA,GAElBK,cAJQ,SAIOF,EAJP,GAI6F,IAAnDnD,EAAkD,EAA7DoD,QAAWpD,QAChDmD,EAAMnD,QAAUA,M,EAK0B4C,EAAcU,QAA/CJ,E,EAAAA,cAAeG,E,EAAAA,cAEfT,IAAf,Q,SCfMW,EAAeV,YAAY,CAC/BC,KAAM,UACNC,aAXyC,CACzCS,YAAa,CACX,WAAY,0BACZC,GAAI,GACJC,UAAW,GACXC,eAAgB,KAOlBV,SAAU,CACRW,WADQ,SACIT,EADJ,GACoF,IAA7CU,EAA4C,EAAvDT,QAAWS,KAC7CV,EAAMK,YAAcK,MAKXD,EAAeL,EAAaD,QAA5BM,WAEAL,IAAf,Q,kBC1BaO,EAAkB,SAACd,EAAiBhD,GAC/C,OAAQA,GACN,KAAK,EAAG,MAAM,oBAAN,OAA2BgD,GACnC,KAAK,GAAI,MAAM,gBAAN,OAAuBA,GAChC,KAAK,GAAI,MAAM,wBAAN,OAA+BA,GACxC,KAAK,KAAM,MAAM,wBAAN,OAA+BA,GAC1C,QAAS,OAAOA,IAQPe,EAAqB,SAACC,GACjC,IAAgC,IAA5BA,EAAMC,YAAY,KACpB,MAAM,GAAN,OAAUD,EAAME,MAAM,EAAG,GAAzB,cAAiCF,EAAME,MAAMF,EAAMG,OAAS,IAG9D,IAAMC,EAAYJ,EAAMC,YAAY,KACpC,MAAM,GAAN,OAAUD,EAAME,MAAM,EAAGE,IAAzB,OAAsCJ,EAAME,MAAME,EAAWA,EAAY,GAAzE,cAAiFJ,EAAME,MAAMF,EAAMG,OAAS,KCxBjGE,EAAyB,CACpCC,SAAU,CACR,CAAExB,KAAM,UAAWyB,SAAU/C,EAAsB,GAAIgD,OAAQ9C,EAAU,IACzE,CAAEoB,KAAM,MAAOyB,SAAU/C,EAAsB,IAAKgD,OAAQ9C,EAAU,KACtE,CAAEoB,KAAM,cAAeyB,SAAU/C,EAAsB,IAAKgD,OAAQ9C,EAAU,KAC9E,CAAEoB,KAAM,cAAeyB,SAAU/C,EAAsB,MAAOgD,OAAQ9C,EAAU,SC+BvE+C,GAAqB,SAAClF,GAAD,OAAmB,SAACmF,GAAD,OACnD,IAAI7E,SAAQ,SAAC8E,GACX/E,EAAqBL,GAAUQ,MAAK,YAAyB,IAAD,mBAAtBiD,EAAsB,KAAbhD,EAAa,KACpD4E,EAAc,IAAIC,IAASC,sBAAYT,IAEvCU,EAAMjB,EAAgBd,EAAShD,GACrC4E,EAAYD,QAAQI,GAAKhF,MAAK,SAAC8D,GAAD,OAAuBc,EAAQD,EAASd,EAAW,CAAEC,sB,mDClC5EmB,GAA2B,CACtChC,QAAS,GACTF,KAAM,KACNmC,OAAQ,KACRC,QAAS,EACTC,gBAAYC,GAmBRC,GAAYxC,YAAY,CAC5BC,KAAM,SACNC,aAZ0B,CAC1BuC,OAAQ,GACRJ,QAAS,KACTC,WAAY,MAUZlC,SAAU,CACRsC,aADQ,SACMpC,EADN,GACoF,IAA/CU,EAA8C,EAAzDT,QAAWS,KACrC2B,EAAgB,2BAAQ3B,GAAR,IAAcb,QAASa,EAAKb,QAAQyC,gBACqC,IAA3FtC,EAAMmC,OAAOI,QAAO,SAACC,GAAD,OAAiBA,EAAK3C,UAAYwC,EAAiBxC,WAASmB,OAClFhB,EAAMmC,OAAOM,KAAb,2BAAuBZ,IAAsBQ,IAE7CrC,EAAMmC,OAASnC,EAAMmC,OAAOO,KAAI,SAACF,GAAD,OAC7BA,EAAK3C,UAAYwC,EAAiBxC,QAAnC,YAAC,eAAkD2C,GAASH,GAAqBG,MAGvFG,eAVQ,SAUQ3C,EAVR,GAUyF,IAAlD+B,EAAiD,EAA5D9B,QAAW8B,QAC7C/B,EAAM+B,QAAUA,GAElBa,yBAbQ,SAakB5C,EAblB,GAa2F,IAA1C6C,EAAyC,EAApD5C,QAAW4C,IACvD7C,EAAMgC,WAAaa,M,GAKiDX,GAAU/B,QAArEiC,G,GAAAA,aAAcO,G,GAAAA,eAAgBC,G,GAAAA,yBAE9BV,MAAf,Q,0CC9BaY,GAA0B,SAAChB,EAAgBjF,GACtD,OAAQiF,GACN,IAAK,WACL,IAAK,UACH,MAAO,iBACT,IAAK,YACH,OAAmB,KAAZjF,EACH,6CAA+C,6CACrD,QAAS,OAAO,OAILkG,GAzBW,SAAClG,GACzB,OAAQA,GACN,KAAK,GAAI,OAAOmG,KAChB,KAAK,GAAI,OAAOC,KAChB,QAAS,OAAO,OCnBdC,GAAoB,sBAcbC,GAA2B,SAACtG,EAAiBuG,GACxD,IAAMC,EAAWC,aAAaC,QAAb,UAAwBL,GAAxB,YAA6CrG,IAC9D,OAAKwG,GAEQG,KAAKC,MAAMJ,GACZD,IAHY,M,qBCepBM,GAAkB,SAACtH,EAAeuH,EAAqB9G,GAArC,OAAyD,SAAC0E,GAChF,IAAMqC,EAAYb,GAAkBlG,GACpC,GAAK+G,EAAL,CAIA,IAAM1G,EAAM,IAAIb,IAAID,GACdyH,EAAc,IAAIC,KAAY5G,GAPwE,WAQjG2C,GACT,IAAMkE,EAAWH,EAAU/D,GAEvBkE,EAASC,OACXH,EAAYI,IAAUC,GAAGrE,GAASsE,UAAUR,GACzC/G,MAAK,SAACmF,GAAD,OAAmBA,EAAQ,MAChCnF,MAAK,SAACmF,GAAD,OAAiBA,EAAQqC,IAAI,IAAIC,KAAG,IAAIC,IAAI,IAAID,KAAGN,EAASQ,YAAYC,cAC7E5H,MAAK,SAACmF,GACW,IAAZA,GACFR,EAASa,GAAa,CAAE1B,KAAM,CAAEb,UAASkC,UAASpC,KAAMoE,EAASpE,KAAMmC,OAAQiC,EAASjC,cAG3FlE,OAAM,SAACC,GAAD,OAAgB4G,QAAQC,IAAI,kBAAmB7G,OAZ5D,IAAK,IAAMgC,KAAW+D,EAAY,EAAvB/D,MAwBA8E,GAAuB,SAACvI,EAAeyD,EAAiB8D,EAAqBiB,GAAtD,OAA2E,SAACrD,GAC9G,IAAMrE,EAAM,IAAIb,IAAID,GAEdyI,EADc,IAAIf,KAAY5G,EACtB2G,CAAYI,IAAUC,GAAGrE,GAEvC3C,EAAI4H,QAAQjF,GAASjD,MAAK,SAACY,GACzB,GAAe,QAAXA,EACF,OAAOoH,GAAcA,EAAW,IAAIG,MAAM,kCAG5CF,EAAM/C,SAASlF,MAAK,SAACkF,GAAD,OAAsBA,EAAO,MAC9ClF,MAAK,SAACkF,GAAD,OAAoBP,EAASa,GAAa,CAAE1B,KAAM,CAAEb,UAASiC,gBAClElE,OAAM,SAACC,GAAD,OAAgB4G,QAAQC,IAAI,SAAU7G,EAAIC,YAEnD+G,EAAMlF,OAAO/C,MAAK,SAAC+C,GAAD,OAAkBA,EAAK,MACtC/C,MAAK,SAAC+C,GAAD,OAAkB4B,EAASa,GAAa,CAAE1B,KAAM,CAAEb,UAASF,cAChE/B,OAAM,SAACC,GAAD,OAAgB4G,QAAQC,IAAI,OAAQ7G,EAAIC,YAEjD+G,EAAMN,WAAW3H,MAAK,SAAC2H,GAAD,OAAoBA,EAAS,MAChD3H,MAAK,SAAC2H,GACLM,EAAMV,UAAUR,GACb/G,MAAK,SAACmF,GAAD,OAAmBA,EAAQ,MAChCnF,MAAK,SAACmF,GAAD,OAAiBA,EAAQqC,IAAI,IAAIC,KAAG,IAAIC,IAAIC,IAAWC,cAC5D5H,MAAK,SAACmF,GACO,IAAZA,GAAiBR,EAASa,GAAa,CAAE1B,KAAM,CAAEb,UAASkC,cAC1D6C,GAAcA,GAAW,MAE1BhH,OAAM,SAACC,GAAD,OAAgB4G,QAAQC,IAAI,kBAAmB7G,SAEzDD,OAAM,kBAAMgH,GAAcA,EAAW,IAAIG,MAAM,qEAWzCC,GAAiB,SAAC5I,EAAeuH,EAAqB9D,EAAiBhD,GAAtD,OAA0E,SAAC0E,GAAD,OACtG,IAAI7E,SAAQ,SAAC8E,EAASyD,GAMpB1D,EAASoD,GAAqBvI,EAAUyD,EAAS8D,GAL9B,SAACrG,GAAD,OACjBA,aAAoByH,MAChBE,EAAO3H,GACPkE,ED1GwB,SAAC3E,EAAiBuG,EAAavC,GAC/D,IAAMwC,EAAWC,aAAaC,QAAb,UAAwBL,GAAxB,YAA6CrG,IAExDqI,EAAO7B,EAAWG,KAAKC,MAAMJ,GAAY,GAC1C6B,EAAK9B,KACR8B,EAAK9B,GAAO,IAEd8B,EAAK9B,GAAKX,KAAK5B,GAEfyC,aAAa6B,QAAb,UAAwBjC,GAAxB,YAA6CrG,GAAW2G,KAAK4B,UAAUF,ICiGvDG,CAAmBxI,EAAQyI,WAAY,QAASzF,aAqBrD0F,GAAqB,SAAC1I,GAAD,OAAqB,SAAC0E,GACtD,IAAMiE,EbvGiC,SAAC3I,GAAD,OAAqBkB,EAAWlB,EAASxB,EAASoK,gBauGxEC,CAA0B7I,GACtC2I,GAILG,KAAMC,IAAN,4DAA+DJ,EAA/D,uBACG5I,MAAK,SAACU,GAAD,OAA6BA,EAASoD,QAC3C9D,MAAK,SAAC8D,GACL,IAAK,IAAMmF,KAAWnF,EAAM,CAC1B,IAAMb,EAAUiD,GAAwB+C,EAAShJ,GACjC,mBAAZgD,EACF0B,EAASqB,GAAyBlC,EAAKmF,KAC9BhG,GACT0B,EAASa,GAAa,CAAE1B,KAAM,CAAEb,QAASA,EAASmC,WAAYtB,EAAKmF,GAAShD,c,qBC9GzEjD,GAA+B,CAC1CkG,mBAAoB,GACpBC,YAAa,GACbC,aAAS/D,GAGLgE,GAAiBvG,YAAY,CACjCC,KAAM,YACNC,gBACAE,SAAU,CACRoG,eADQ,SACQlG,EADR,GAC8F,IAAD,IAA5DC,QAAWmD,EAAiD,EAAjDA,IAAK+C,EAA4C,EAA5CA,QACnD/C,EAAIgD,SAAS,cACfpG,EAAM+F,YAAY3C,GAAO+C,EAEzBnG,EAAM8F,mBAAmB1C,GAAO+C,GAGpCE,gBARQ,SAQSrG,EART,GAQ2H,IAAD,IAAxFC,QAAWmD,EAA6E,EAA7EA,IAAK+C,EAAwE,EAAxEA,QACxDnG,EAAM8F,mBAAmB1C,GAAOpD,EAAM8F,mBAAmB1C,GAAKX,KAAK0D,GAAWnG,EAAM8F,mBAAmB1C,GAAO,CAAC+C,IAEjHG,qBAXQ,SAWctG,EAXd,GAW4G,IAAD,IAApEC,QAAWmD,EAAyD,EAAzDA,IAAK9C,EAAoD,EAApDA,GAC7DN,EAAM8F,mBAAmB1C,GAAOpD,EAAM8F,mBAAmB1C,GAAKb,QAAO,SAACC,GAAD,OAA4BA,EAAKlC,KAAOA,MAE/GiG,gBAdQ,SAcSvG,EAdT,GAcgG,IAAD,IAA7DC,QAAWmD,EAAkD,EAAlDA,IAAK9C,EAA6C,EAA7CA,GAAI6F,EAAyC,EAAzCA,QAC5DnG,EAAM8F,mBAAmB1C,GAAOpD,EAAM8F,mBAAmB1C,GAAKV,KAAI,SAACF,GAAD,OAA4BA,EAAKlC,KAAOA,EAAZ,2BAAsBkC,GAAtB,IAA4B2D,YAAY3D,MAExIgE,0BAjBQ,SAiBmBxG,EAjBnB,GAiBwH,IAAjEgG,EAAgE,EAA3E/F,QAAW+F,QAC7DhG,EAAMgG,QAAUA,M,GAK+FC,GAAe9F,QAArH+F,G,GAAAA,eAAgBG,G,GAAAA,gBAAiBC,G,GAAAA,qBAAsBC,G,GAAAA,gBAAiBC,G,GAAAA,0BAExEP,MAAf,QCrDaQ,GAAe,SAACrK,EAAeyD,EAAiBhD,GAC3D,IAAM6J,EfU0BC,EAAYC,aeTtChF,EAAMjB,EAAgBd,EAAShD,GAMrC,OAAO,IAAIgK,KAAmB,CAC5BH,aACAI,YAAa,IAAIC,eAAY,CAAEnF,MAAK8E,aAAYM,aAN7B,SAACtG,GAAD,OAAkBtE,EAAS6K,QAAQ,CAAEC,OAAQ,gBAAiBC,OAAQ,CAACtH,EAASa,QAOnG0G,kBAAmB,IAAIC,qBAAkB,CAAEC,uBALd,kBAAMlL,EAAS6K,QAAQ,CAAEC,OAAQ,6BAA8BC,OAAQ,CAACtH,MAKlC0H,QANrD,SAACC,GAAD,OAAuBpL,EAAS6K,QAAQ,CAAEC,OAAQ,cAAeC,OAAQ,CAACK,EAAW3H,WA8B1F4H,GAAyB,SAACC,EAA4BtE,EAAa+C,GAA1C,OAA8D,SAAC5E,GAAD,OAClGmG,EAAOC,OAAO,CAAEvE,MAAK+C,YAClBvJ,MAAK,SAACY,GAAD,OAAmCA,EAAO8C,MAC/C1D,MAAK,SAAC0D,GAAD,OAAgBiB,EAAS8E,GAAgB,CAAEjD,MAAK+C,QAAS,CAAE7F,KAAI6F,mBAQ5DyB,GAAyB,SAACF,EAA4BtE,EAAa9C,GAA1C,OAAyD,SAACiB,GAAD,OAC7FmG,EAAOG,OAAO,CAAEzE,MAAK9C,OAClB1D,MAAK,kBAAM2E,EAAS+E,GAAqB,CAAElD,MAAK9C,aASxCwH,GAAuB,SAACJ,EAA4BtE,EAAa+C,EAAiB7F,GAA3D,OAA0E,SAACiB,GAAD,OAC5GmG,EAAOK,KAAK,CAAE3E,MAAK+C,UAAS7F,OACzB1D,MAAK,kBAAM2E,EAASgF,GAAgB,CAAEnD,MAAK9C,KAAI6F,kBAsCvC6B,GAAiB,SAAC5L,EAAeyD,EAAiBhD,EAAiBoL,GAAlD,OAAqE,SAAC1G,GAClG,IAAMmG,EAASjB,GAAarK,EAAUyD,EAAShD,GAE/C6K,EAAOQ,wBACJtL,MAAK,SAACoJ,GACLzE,EAASiF,GAA0B,CAAER,aACrCzE,EAnF6B,SAACmG,GAAD,OAAgC,SAACnG,GAAD,OACjEmG,EAAOS,UACJvL,MAAK,SAACwL,GAAD,OACJA,EAAKC,SAAQ,SAACjF,GAAD,OACXsE,EAAO9B,IAAI,CAAExC,QACVxG,MAAK,SAACuJ,GAAD,OAAkBA,KACvBvJ,MAAK,SAACuJ,GAAD,OAAiC5E,EAAS2E,GAAe,CAAE9C,MAAK+C,uBA6EjEmC,CAAoBZ,IAC7BO,EAASP,MAEV9J,OAAM,SAACC,GAAD,OAAcoK,EAAS,KAAMpK,QCzG3B0K,GAAQ,SAACC,GAAD,OAAkB,SAACjH,GAAD,OACrC5C,EAAO8J,UAAU7L,MAAK,SAACR,GACrBoM,EAAQE,YAAYtM,GAEpBK,EAAqBL,GAAUQ,MAAK,YAAyB,IAAD,mBAAtBiD,EAAsB,KAAbhD,EAAa,KAC1D0E,EAASxB,EAAc,CAAEF,aACzB0B,EAASrB,EAAc,CAAErD,QAASC,SAASD,MAE3C0E,EAASD,GAAmBlF,IAC5BmF,EHbsB,SAACnF,EAAeS,EAAiB8G,GAAjC,OAAyD,SAACpC,GAEpFA,EAASmC,GAAgBtH,EAAUuH,EAAa9G,IAGhD0E,EAASgE,GAAmB1I,KAGRsG,GAAyBtG,EAAQyI,WAAY,SAAWnC,GAAyBtG,EAAQyI,WAAY,SAAW,IACxH5C,KAAI,SAAC7C,GACf0B,EAASoD,GAAqBvI,EAAUyD,EAAS8D,QGGtCgF,CAAavM,EAAUU,SAASD,GAAUgD,IACnD0B,EH6FoB,SAACnF,EAAeyD,GAAhB,OAAoC,SAAC0B,GAAD,OAC5D,IAAIlF,IAAID,GAAUwM,WAAW/I,GAC1BjD,MAAK,SAACmF,GAAD,OAAiBjF,SAASiF,EAAQuD,eACvC1I,MAAK,SAACmF,GAAD,OAAqBA,EAAU8G,KAAKvE,IAAI,GAAI,OACjD1H,MAAK,SAACmF,GAAD,OAAoBR,EAASoB,GAAe,CAAEZ,iBGjGzC6G,CAAWxM,EAAUyD,IAG9B0B,EAASyG,GAAe5L,EAAUyD,EAAShD,GAD1B,SAACiM,EAAeC,GAAhB,OAAgCP,EAAQQ,YAAYF,aAItElL,OAAM,SAACC,GAAD,OAAiB4G,QAAQC,IAAI,eAAgB7G,QChBzC4K,eAAQ,MAXI,SAAClH,GAAD,MAAoB,CAC7C7F,YAAa,SAAC8M,GAAD,OAAkBjH,EAASgH,GAAMC,SAG7B,SAACS,EAAiBC,EAAoBC,GAAtC,mBAAC,uCACfF,GACAC,GACAC,GAHc,IAIjBzN,YAAa,kBAAMwN,EAAcxN,YAAYyN,EAASX,cAGzCC,CAA8ChN,GCf9C,OAA0B,gD,0oBCGzC,IAAM2N,GAAuB7N,IAAO8N,KAAV,MAYpBC,GAAe/N,IAAO6I,IAAV,MAcA,qBAAGmF,UAA6B,UAAY,aAUjDC,GAAgB,SAAC3M,GAC5B,OAAQA,GACN,KAAK,EAAG,MAAO,WACf,KAAK,GAAI,MAAO,cAChB,KAAK,GAAI,MAAO,cAChB,QAAS,MAAM,cAAN,OAAqBA,EAAQyI,cAc3BmE,GAVyC,SAAC,GAAkC,IAAhCF,EAA+B,EAA/BA,UAAW5J,EAAoB,EAApBA,KAAM9C,EAAc,EAAdA,QAC1E,OACE,cAACuM,GAAD,CAAsBzN,UAAW4N,EAAY,YAAc,eAA3D,SACE,cAACD,GAAD,CAAcC,UAAWA,EAAzB,SACG1M,EAAU2M,GAAc3M,GAAW8C,O,imBC3C5C,IAAM+J,GAAYnO,IAAO8N,KAAV,MAiBTM,GAAepO,IAAO8N,KAAV,KAMZK,IAcSE,GAP6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAUnO,EAA3B,EAA2BA,UAA3B,OAC1C,eAACgO,GAAD,CAAchO,UAAWA,EAAzB,UACGmO,EACD,cAACJ,GAAD,CAAW/N,UAAU,gBAArB,SAAsCkO,Q,qBCL3BE,GA7B+B,SAAC,GAAqB,IAAnBlJ,EAAkB,EAAlBA,MAAOmJ,EAAW,EAAXA,KAQhDC,EAAS,CACbC,QAAS,eACTC,WAAY,UACZC,OAAQ,oBACRC,QAAS,MACTC,OAAQ,IACRC,OAAO,GAAD,OAAKP,GAAQ,GAAb,MACNQ,MAAM,GAAD,OAAKR,GAAQ,GAAb,MACLS,aAAc,OAGhB,OACE,qBACE7O,IAAG,oCAA+B,IAAI8O,KAAU7J,EApBpC,CACd8J,OAAQ,MACRR,WAAY,CAAC,GAAI,IAAK,IAAK,KAC3BG,OAAQ,MACRM,WAAY,OAgBsDtF,YAChExJ,IAAK+E,EACLlF,UAAU,YACVkP,MAAOZ,K,i7CCvBN,IAAMa,GAAgBvP,IAAO6I,IAAV,MAcZ,qBAAG2G,KAAmB,UAAY,YAC9B,qBAAGA,KAAmB,OAAS,UAU3CC,GAAYzP,IAAO6I,IAAV,MAST6G,GAAa1P,IAAO6I,IAAV,MAMV8G,GAAmB3P,IAAOC,OAAV,MAehB2P,GAAe5P,IAAO6I,IAAV,MA+BHgH,GAlByB,SAAC,GAAD,IAAGtB,EAAH,EAAGA,SAAUiB,EAAb,EAAaA,KAAMM,EAAnB,EAAmBA,MAAO1P,EAA1B,EAA0BA,UAAW2P,EAArC,EAAqCA,QAArC,OACtCP,EAEI,cAACD,GAAD,CAAeC,KAAMA,EAAMpP,UAAWA,EAAtC,SACE,eAACqP,GAAD,WACE,eAACC,GAAD,CAAYtP,UAAU,cAAtB,UACG0P,EACD,cAACH,GAAD,CAAkBvP,UAAU,QAAQI,QAASuP,OAE/C,cAACH,GAAD,CAAcxP,UAAU,gBAAxB,SACGmO,SAKP,8BC5FS,OAA0B,oCCA1B,OAA0B,mC,yhGCIzC,ICDYyB,GDwEGC,GAvEUjQ,IAAO6I,IAAV,MEiHPqH,GAtG+C,SAAC,GAAuC,IAArC7J,EAAoC,EAApCA,IAAK8J,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC/E,IAAK/J,EACH,OAAO,6BAF0F,MAKjEgK,oBAAkB,GAL+C,mBAK5FC,EAL4F,KAKjFC,EALiF,OAMjEF,oBAAkB,GAN+C,mBAM5FG,EAN4F,KAMjFC,EANiF,OAOrEJ,mBAAwB,MAP6C,mBAO5FK,EAP4F,KAOnFC,EAPmF,OAQvEN,mBAA8G,CACxIjM,KAAM,GACNwM,MAAO,GACPtM,QAAS,GACTuM,SAAU,GACVC,MAAO,GACPC,UAAW,KAdsF,mBAQ5FC,EAR4F,KAQpFC,EARoF,KAiB7FC,EAAmB,SAACC,GAAD,OACvBF,EAAU,2BAAKD,GAAN,mBAAeG,EAAIzQ,OAAOqE,GAAKoM,EAAIzQ,OAAO4E,UAErD8L,qBAAU,WACRT,EAAW,MACXF,GAAa,GAEbQ,EAAU,CACR7M,KAAM+L,EAAUkB,QAAQ,GAAGzG,QAC3BgG,MAAOT,EAAUmB,SAAS,GAAG1G,QAC7BtG,QAAS6L,EAAUoB,WAAW,GAAG3G,QACjCiG,SAAUV,EAAUqB,YAAY,GAAG5G,QACnCkG,MAAOX,EAAUsB,SAAS,GAAG7G,QAC7BmG,UAAWZ,EAAUuB,aAAa,GAAG9G,YAEtC,CAACuF,IAEJ,IA2BMwB,EAAe,SAACC,GAAD,MAAkB,CAAEC,YAAY,WAAD,OAAaD,GAAQ7M,GAAI6M,EAAMA,KAAM,OAAQxR,UAAW,OAAQ0R,SAAUZ,EAAkBa,SAAUvB,IAE1J,OACE,qCACE,wBAAQpQ,UAAU,YAAYI,QAAS,kBAAM+P,GAAa,IAA1D,SACE,qBAAKlQ,IAAK2R,GAAYzR,IAAI,mBAG5B,cAAC,GAAD,CACEiP,KAAMc,EACNP,QAAS,kBAAMQ,GAAa,IAC5BT,MAAO,qCAAE,qBAAKzP,IAAK4R,GAAa1R,IAAI,WAA7B,mBACPH,UAAU,sBAJZ,SAME,gCACE,8CACCiF,EAAmBgB,GACpB,6FAEA,4BAAG,2CAAa,mCAAOf,MAAO0L,EAAO5M,MAAUuN,EAAa,eAC5D,4BAAG,4CAAc,mCAAOrM,MAAO0L,EAAOJ,OAAWe,EAAa,gBAC9D,4BAAG,8CAAgB,mCAAOrM,MAAO0L,EAAO1M,SAAaqN,EAAa,kBAClE,4BAAG,gDAAkB,mCAAOrM,MAAO0L,EAAOH,UAAcc,EAAa,mBACrE,4BAAG,mDAAqB,mCAAOrM,MAAO0L,EAAOF,OAAWa,EAAa,gBACrE,4BAAG,gDAAkB,mCAAOrM,MAAO0L,EAAOD,WAAeY,EAAa,oBAEtE,4BACE,cAAC5R,EAAD,CACEK,UAAU,YACVI,QAxDC,WACXiQ,GAAa,GACbE,EAAW,MAEX,IAAMuB,EAAyB,SAACrK,EAAa+C,GAAd,OAC5BuF,EAAUtI,GAAK,GAAG+C,UAAYA,EAAW,CAAC,2BAAKuF,EAAUtI,GAAK,IAArB,IAAyB+C,aAAa,IAE5EuH,EAAc,CAClBd,QAASa,EAAuB,UAAWlB,EAAO5M,MAClDkN,SAAUY,EAAuB,WAAYlB,EAAOJ,OACpDW,WAAYW,EAAuB,aAAclB,EAAO1M,SACxDkN,YAAaU,EAAuB,cAAelB,EAAOH,UAC1DY,SAAUS,EAAuB,WAAYlB,EAAOF,OACpDY,aAAcQ,EAAuB,eAAgBlB,EAAOD,YAG9DX,EAAc+B,GACX9Q,MAAK,WACJoP,GAAa,GACbF,GAAa,MAEdlO,OAAM,SAACC,GACNmO,GAAa,GACbE,EAAWrO,EAAIC,aAkCTwP,SAAUvB,EAHZ,oBAMDE,GAAW,qBAAKtQ,UAAU,cAAf,SAA8BsQ,IACzCF,GAAa,cAAC,GAAD,aC9DT4B,GA/BoC,SAAC,GAAD,IAAG/L,EAAH,EAAGA,IAAK/E,EAAR,EAAQA,QAAS+Q,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,aAAclC,EAAxC,EAAwCA,cAAxC,OACjD,yBAAQhQ,UAAU,YAAlB,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKC,IAAKkS,GAAchS,IAAI,qBAE9B,oBAAIH,UAAU,UAAd,SACGiG,GACC,qCACE,cAAC,GAAD,CAAUf,MAAOe,EAAKoI,KAAM,KACI,KAA/B4D,EAAQhB,QAAQ,GAAGzG,QAChB,8BAAMyH,EAAQhB,QAAQ,GAAGzG,UACzB,cAAC,GAAD,CAAS0D,aAAcjI,EAAvB,SAA4B,8BAAMhB,EAAmBgB,YAK9DiM,GACC,cAAC,GAAD,CACEjM,IAAKA,EACL8J,UAAWkC,EACXjC,cAAeA,OAIrB,qBAAKhQ,UAAU,iBAAf,SACGkB,GAAW,cAAC,GAAD,CAAe0M,WAAS,EAAC1M,QAASA,W,SFxCxC0O,K,sBAAAA,E,sBAAAA,E,oBAAAA,E,aAAAA,Q,KAaZ,IAyBewC,GAzBmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAeC,EAA5B,EAA4BA,YAA5B,OAChD,qBAAKvS,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAWqS,IAAazC,GAAQ4C,UAAY,mBAAqB,YAArE,SACE,wBAAQpS,QAAS,kBAAMmS,EAAY3C,GAAQ4C,YAA3C,yBAEF,oBAAIxS,UAAWqS,IAAazC,GAAQ6C,KAAO,cAAgB,OAA3D,SACE,wBAAQrS,QAAS,kBAAMmS,EAAY3C,GAAQ6C,OAA3C,2BAEDH,GACC,oBAAItS,UAAWqS,IAAazC,GAAQ8C,UAAY,mBAAqB,YAArE,SACE,wBAAQtS,QAAS,kBAAMmS,EAAY3C,GAAQ8C,YAA3C,0BAGJ,oBAAI1S,UAAWqS,IAAazC,GAAQ+C,SAAW,SAAW,GAA1D,SACE,wBAAQvS,QAAS,kBAAMmS,EAAY3C,GAAQ+C,WAA3C,+BAEF,oBAAI3S,UAAU,WAAd,iCACA,oBAAIA,UAAU,WAAd,8BGnCO,OAA0B,iCCqC1B4S,GA9BmC,SAAC,GAAe,IAAb1N,EAAY,EAAZA,MAAY,EACvB+K,oBAAkB,GADK,mBACxD4C,EADwD,KAC1CC,EAD0C,KAEzDC,EAAgBC,iBAAyB,MAW/C,OACE,uBAAMhT,UAAU,aAAhB,UACE,wBAAQwR,KAAK,SAASpR,QAXN,WAClB0S,GAAgB,GAChBC,EAAcE,SAAWF,EAAcE,QAAQC,SAC/CC,SAASC,YAAY,QACrBC,YAAW,WACTP,GAAgB,KACf,MAK2C9S,UAAU,OAAtD,SACE,qBAAKC,IAAKqT,GAAUnT,IAAI,gBAEzB0S,GAAgB,sBAAM7S,UAAU,WAAhB,kCACjB,uBACEwR,KAAK,OACLxR,UAAU,WACVuT,aAAcrO,EACdsO,IAAKT,EACL7D,MAAO,CAAEuE,SAAU,WAAYC,KAAM,kB,gwBC5B7C,IAAMC,GAAe/T,IAAO6I,IAAV,MAMZmL,GAAchU,IAAO6I,IAAV,MAMXoL,GAAajU,IAAOkU,EAAV,MAUVC,GAAanU,IAAO6I,IAAV,MAIVuL,GAAepU,IAAO6I,IAAV,MAyBHwL,GAdyB,SAAC,GAAD,IAAGvE,EAAH,EAAGA,MAAOwE,EAAV,EAAUA,YAAa/F,EAAvB,EAAuBA,SAAUnO,EAAjC,EAAiCA,UAAjC,OACtC,eAAC2T,GAAD,CAAc3T,UAAS,gBAAWA,GAAlC,UACG0P,GACC,eAACkE,GAAD,CAAa5T,UAAU,eAAvB,UACE,cAAC6T,GAAD,CAAY7T,UAAU,cAAtB,SAAqC0P,IACpCwE,GAAe,cAACH,GAAD,CAAY/T,UAAU,cAAtB,SAAqCkU,OAGzD,cAACF,GAAD,CAAchU,UAAU,gBAAxB,SACGmO,QCPQgG,GA/BuD,SAAC,GAA0B,IAAxBjQ,EAAuB,EAAvBA,QAAShD,EAAc,EAAdA,QAC1E+E,EAAMjB,EAAgBd,EAAShD,GACrC,OACE,qBAAKlB,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CACE0P,MAAM,sBACN1P,UAAU,uBAFZ,SAIE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,6CACA,oBAAGA,UAAU,QAAb,UACE,cAAC,GAAD,CAASkO,aAAcjI,EAAvB,SAA6BhB,EAAmBgB,KAChD,cAAC,GAAD,CAAYf,MAAOe,UAGvB,sBAAKjG,UAAU,SAAf,UACE,iDACA,oBAAGA,UAAU,QAAb,UACGkE,EACD,cAAC,GAAD,CAAYgB,MAAOhB,oBChCpB,OAA0B,uC,gtBCQzC,IAAMkQ,GAAaxU,IAAO6I,IAAV,MAWV4L,GAAczU,IAAO6I,IAAV,MAyBF6L,GATqC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOrP,EAAY,EAAZA,MACtD2J,EAAQ3J,EAAQqP,EAAQrH,KAAKsH,KAAc,IAARtP,EAAeqP,GAAS,IACjE,OACE,cAACH,GAAD,CAAYpU,UAAU,mBAAtB,SACE,cAACqU,GAAD,CAAarU,UAAU,WAAWkP,MAAO,CAAEL,MAAM,GAAD,OAAKA,EAAL,WCRvC4F,GAlB+C,SAAC,GAAD,IAAGpK,EAAH,EAAGA,QAASqK,EAAZ,EAAYA,aAAZ,OAC5DrK,EACE,eAAC,GAAD,CAAOqF,MAAO,qCAAE,qBAAKzP,IAAK0U,GAAexU,IAAI,cAA/B,wBAAoEH,UAAU,YAA5F,UACE,+CACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,GAAD,CAASA,UAAU,mBAAmBkO,aAAc,8BAAI7D,EAAQuK,KAAZ,QAAuBvK,EAAQwK,UAAYxK,EAAQuK,MAAME,iBAAzD,YAApD,SACE,cAAC,GAAD,CAAaP,MAAQlK,EAAQwK,UAAYxK,EAAQuK,KAAO1P,MAAOmF,EAAQuK,WAG3E,qBAAK5U,UAAU,SAAf,SACE,cAACL,EAAD,CAAYS,QAASsU,EAAc1U,UAAU,yBAA7C,+BAKJ,8BCAS+U,GAnBmC,SAAC,GAAsD,IAApD/Q,EAAmD,EAAnDA,KAAMoC,EAA6C,EAA7CA,QAASD,EAAoC,EAApCA,OAAQnG,EAA4B,EAA5BA,UAAWqG,EAAiB,EAAjBA,WAOrF,OACE,sBAAKrG,UAAWA,EAAS,sBAAkBA,GAAc,cAAzD,UACE,6BAAKgE,IACL,gCACE,sBAAMhE,UAAU,UAAhB,SAVU,SAACgV,GACf,IAAKA,EAAY,OAAOA,EACxB,IAAMC,EAAUC,WAAWF,EAASG,QAAQ,IAC5C,OAAOF,IAAYD,EAAWA,EAAWC,EAOVA,CAAQ7O,KACnC,sBAAMpG,UAAU,SAAhB,SAA0BmG,IACxBE,GAAcD,GAAY,uBAAMpG,UAAU,aAAhB,cAA+BkN,KAAKkI,MAAM/O,EAAaD,EAAU,KAAO,IAAxE,iBCmBrBiP,GA3BqC,SAAC,GAAD,IAAGjP,EAAH,EAAGA,QAASlF,EAAZ,EAAYA,QAASoU,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,YAAab,EAAjD,EAAiDA,aAAjD,OAClDtO,GAAWlF,EAEP,eAAC,GAAD,CAAOwO,MAAO,oDAAmB1P,UAAU,OAA3C,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,GAAD,CACEgE,KAAK,UACLoC,QAASA,EACTD,OAAQrD,EAAe5B,GACvBmF,WAAYkP,QAAejP,IAE5BgP,GACC,cAAC,GAAD,CACEtR,KAAMsR,EAActR,KACpBoC,QAASkP,EAAclP,QACvBD,OAAQmP,EAAcnP,OACtBE,WAAYiP,EAAcjP,iBAAcC,SAKhD,cAAC3G,EAAD,CAAYS,QAASsU,EAAc1U,UAAU,YAA7C,0BAGF,8BCESwV,GAxB6C,SAAC,GAEtD,IADLtU,EACI,EADJA,QAASgD,EACL,EADKA,QAASmG,EACd,EADcA,QAASjE,EACvB,EADuBA,QAASqP,EAChC,EADgCA,eAAgBF,EAChD,EADgDA,YAAaG,EAC7D,EAD6DA,aAEjE,OACE,sBAAK1V,UAAU,oBAAf,UACGkE,GAAWhD,GAAW,cAACyU,GAAD,CAAiBzR,QAASA,EAAShD,QAASA,IACnE,sBAAKlB,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CACEoG,QAASA,EACTmP,YAAaA,EACbrU,QAASA,EACToU,cAAeG,EAAiBA,EAAe,QAAKnP,EACpDoO,aAAc,kBAAMgB,EAAa9F,GAAQ6C,WAG7C,qBAAKzS,UAAU,SAAf,SACE,cAAC,GAAD,CAAkBqK,QAASA,EAASqK,aAAc,kBAAMgB,EAAa9F,GAAQ8C,uBCPxE5F,gBApBS,SAACzI,GAAD,MAA4B,CAClDH,QAASG,EAAMuR,SAAS1R,QACxBhD,QAASmD,EAAMuR,SAAS1U,QACxBsF,OAAQnC,EAAMwR,KAAKrP,OACnBJ,QAAS/B,EAAMwR,KAAKzP,QACpBmP,YAAalR,EAAMwR,KAAKxP,WACxBoP,eAAgBpR,EAAMwR,KAAKrP,OAAOI,QAAO,SAACsC,GAAD,MAAmC,QAAjBA,EAAM/C,QAAqC,SAAjB+C,EAAM/C,UAC3FkE,QAAShG,EAAMyR,UAAUzL,YAGA,SAACzE,GAAD,MAA6D,CACtFyD,eAAgB,SAAC5I,EAAesV,EAAkBC,EAAmB9U,GAArD,OAAyE0E,EAASyD,GAAe5I,EAAUsV,EAAUC,EAAW9U,SAG/H,SAACoM,EAAiBC,EAAoBC,GAAtC,mBAAC,2BACfF,GACAC,GACAC,KAGUV,CAAyDmJ,IC5BzD,OAA0B,gDCA1B,OAA0B,kCCyC1BC,GAtBqC,SAAC,GAE9C,IADL9G,EACI,EADJA,KAAMM,EACF,EADEA,MAAOiC,EACT,EADSA,SAAU3R,EACnB,EADmBA,UAAWmW,EAC9B,EAD8BA,UAAWxG,EACzC,EADyCA,QAASyG,EAClD,EADkDA,OAAQC,EAC1D,EAD0DA,QAE9D,OACE,eAAC,GAAD,CAAOjH,KAAMA,EAAMpP,UAAWA,EAAW2P,QAASA,EAASD,MAAOA,GAAS,gBAA3E,UACE,6BAAW,OAAP2G,QAAO,IAAPA,OAAA,EAAAA,EAASC,OAAQ,kBACrB,sBAAKtW,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAACL,EAAD,CAAYS,QAASgW,GAAUzG,EAAS3P,UAAU,iBAAiB2R,SAAUA,IAAY,EAAzF,UACU,OAAP0E,QAAO,IAAPA,OAAA,EAAAA,EAASE,OAAQ,WAGtB,qBAAKvW,UAAU,SAAf,SACE,cAACL,EAAD,CAAYS,QAAS+V,EAAWnW,UAAU,oBAAoB2R,SAAUA,IAAY,EAApF,UACU,OAAP0E,QAAO,IAAPA,OAAA,EAAAA,EAASG,UAAW,qBCiClBC,GA1C2C,SAAC,GAEpD,IADLrH,EACI,EADJA,KAAMpP,EACF,EADEA,UAAWmW,EACb,EADaA,UAAWxG,EACxB,EADwBA,QAASgC,EACjC,EADiCA,SAAUvB,EAC3C,EAD2CA,UAAWrO,EACtD,EADsDA,MAAOgO,EAC7D,EAD6DA,UAAW2G,EACxE,EADwEA,UAAWL,EACnF,EADmFA,QACnF,EAC4BpG,mBAAiB,IAD7C,mBACG0G,EADH,KACaC,EADb,KAEEC,EAAc,CAClBnF,SAAU,SAACX,GAAD,OAA8D6F,EAAY7F,EAAIzQ,OAAO4E,QAC/FyM,WACA3R,UAAW,gBACXyR,YAAW,OAAE4E,QAAF,IAAEA,OAAF,EAAEA,EAAS5E,YACtBvM,MAAOyR,GAAY,IAOrB,OAJA3F,qBAAU,WACR4F,EAAY7G,GAAa,MACxB,CAACA,IAGF,eAAC,GAAD,CAAOX,KAAMA,EAAMpP,UAAWA,EAAW2P,QAASA,EAASD,OAAc,OAAP2G,QAAO,IAAPA,OAAA,EAAAA,EAAS3G,QAAS,aAApF,UACE,mBAAG1P,UAAU,aAAb,gBAA2BqW,QAA3B,IAA2BA,OAA3B,EAA2BA,EAASS,QACpC,8BACE,iCAAe,OAAPT,QAAO,IAAPA,OAAA,EAAAA,EAASU,QAAS,WACX,aAAdL,EACG,wCAAcG,IACd,mCAAOrF,KAAK,QAAWqF,OAE7B,4BACE,cAAClX,EAAD,CACES,QAAS,kBAAM+V,EAAUQ,IACzBhF,SAAUA,EACV3R,UAAU,SAHZ,UAIS,OAAPqW,QAAO,IAAPA,OAAA,EAAAA,EAASW,SAAU,aAEtB5G,GAAa,cAAC,GAAD,IACbrO,GACC,qBAAK/B,UAAU,kBAAf,SACE,qBAAKA,UAAU,cAAf,SAA8B+B,UC+DzBkV,GA3GiE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAAgB,EAIrFnH,oBAAkB,GAJmE,mBAIhHG,EAJgH,KAIrGC,EAJqG,OAKzFJ,mBAAwB,MALiE,mBAKhHK,EALgH,KAKvGC,EALuG,OAMnFN,mBAA6B,MANsD,mBAMhHoH,EANgH,KAMpGC,EANoG,OAOrFrH,mBAA2B,MAP0D,mBAOhHsH,EAPgH,KAOrGC,EAPqG,KAoCvH,OACE,eAAC,GAAD,CAAO9H,MAAO,qCAAE,qBAAKzP,IAAKwX,KAAZ,0BAAwDzX,UAAU,UAAhF,UACE,kCACE,gCACE,+BACE,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,UAAd,0BAGJ,gCACI0X,OAAOjL,KAAKyK,GAASnQ,KAAI,SAACU,GAC1B,GAA4B,IAAxByP,EAAQzP,GAAKpC,OACf,OACE,+BACE,6BAAKoC,EAAIkQ,QAAQ,MAAO,MACxB,6BACGT,EAAQzP,GAAKV,KAAI,SAACF,GAAD,OAChB,sBAAK7G,UAAU,cAAf,UACE,qBAAKA,UAAU,UAAf,SACE,4BAAI6G,EAAK2D,YAEX,sBAAKxK,UAAU,UAAf,UACE,wBACE2R,SAAUvB,EACVpQ,UAAU,YACVI,QAAS,WAAQmQ,EAAW,MAAOiH,EAAa,CAAE/P,MAAKZ,UAHzD,SAKE,qBAAK5G,IAAK2X,GAAYzX,IAAI,gBAE5B,wBACEwR,SAAUvB,EACVpQ,UAAU,cACVI,QAAS,kBAAMkX,EAAc,CAAE7P,MAAK9C,GAAIkC,EAAKlC,MAH/C,SAIE,qBAAK1E,IAAK4X,GAAW1X,IAAI,uBAhBG0G,EAAKlC,WAJpC8C,WAkCnB,cAAC,GAAD,CACE2H,KAAoB,OAAdmI,EACN5H,QAAS,kBAAM6H,EAAa,OAC5BrB,UAAW,SAACjR,GAAD,OAAmBqS,GAnEb,SAACO,EAAkBC,GACxC,GAAID,IAAaC,EAAalR,KAAK2D,QACjC,OAAO+F,EAAW,qCAGpBF,GAAa,GACbE,EAAW,MAEX6G,EAAUW,EAAatQ,IAAKqQ,EAAUC,EAAalR,KAAKlC,IACrD1D,MAAK,WACJoP,GAAa,GACbmH,EAAa,SAEdvV,OAAM,SAACC,GAAD,OAAgBqO,EAAWrO,EAAIC,YACrC6V,SAAQ,kBAAM3H,GAAa,MAqDiB4H,CAAe/S,EAAOqS,IACjE5F,SAAUvB,EACViG,QAAS,CAAE3G,MAAO,8BAA+BqH,MAAO,YAAaC,OAAQ,UAC7EhX,UAAU,aACV+P,UAAWwH,EAAYA,EAAU1Q,KAAK2D,QAAU,GAChDkM,UAAU,WACV3U,MAAOuO,IAGT,cAAC,GAAD,CACElB,KAAqB,OAAfiI,EACN1H,QAAS,kBAAM2H,EAAc,OAC7BnB,UAAW,kBAAMkB,IAzFGxQ,EAyF4BwQ,EAxFpDhH,GAAa,GACbE,EAAW,WAEX4G,EAAYtQ,EAAKY,IAAKZ,EAAKlC,IACxB1D,MAAK,kBAAMqW,EAAc,SACzBrV,OAAM,SAACC,GAAD,OAAgBqO,EAAWrO,EAAIC,YACrC6V,SAAQ,kBAAM3H,GAAa,OAPP,IAACxJ,GA0FpB8K,SAAUvB,EACViG,QAAS,CAAEC,KAAM,uDAAwDE,QAAS,MAAOD,KAAM,MAC/FvW,UAAU,qBCpHH,OAA0B,mCC4E1BkY,GAlEyD,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAA2B,EAC5ElI,mBAAS,IADmE,mBAC7FuB,EAD6F,KACvF4G,EADuF,OAEtEnI,mBAAS,IAF6D,mBAE7FzF,EAF6F,KAEpF6N,EAFoF,OAGlEpI,oBAAkB,GAHgD,mBAG7FG,EAH6F,KAGlFC,EAHkF,OAItEJ,mBAAwB,MAJ8C,mBAI7FK,EAJ6F,KAIpFC,EAJoF,KA2B9Fb,EAAQ,qCAAE,qBAAKzP,IAAKqY,KAAZ,kCAEd,OACE,eAAC,GAAD,CAAO5I,MAAOA,EAAO1P,UAAU,kBAA/B,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,QAAb,kBACA,uBAAOwR,KAAK,OACVxR,UAAU,YACVkF,MAAOsM,EACPE,SAAU,SAACX,GAAD,OAASqH,EAAQrH,EAAIzQ,OAAO4E,QACtCyM,SAAUvB,EACVqB,YAAY,oBAEhB,sBAAKzR,UAAU,eAAf,UACE,mBAAGA,UAAU,QAAb,qBACA,0BACEA,UAAU,eACVkF,MAAOsF,EACPkH,SAAU,SAACX,GAAD,OAASsH,EAAWtH,EAAIzQ,OAAO4E,QACzCyM,SAAUvB,EACVqB,YAAY,eAGhB,qBAAKzR,UAAU,sBAAf,SACE,cAACL,EAAD,CAAYK,UAAU,mBAAmBI,QA9C7B,WAIlB,GAHAiQ,GAAa,GACbE,EAAW,MAEE,KAATiB,GAA2B,KAAZhH,EAEjB,OADA6F,GAAa,GACNE,EAAW,qCAGpB4H,EAAqB,MAAD,OAAO3G,EAAK+G,eAAiB/N,GAC9CvJ,MAAK,WACJoP,GAAa,GACbgI,EAAW,IACXD,EAAQ,OAETnW,OAAM,SAACC,GACNmO,GAAa,GACbE,EAAWrO,EAAIC,aA6BkDwP,SAAUvB,EAAzE,2BAGHE,GACC,qBAAKtQ,UAAU,kBAAf,SACE,qBAAKA,UAAU,cAAf,SAA8BsQ,MAIjCF,GAAa,cAAC,GAAD,QC7DPoI,GAAsBC,IAAMC,cAA4C,CACnFjY,SAAU,KACV0M,SAAU,OAOCwL,GAA8D,SAAC,GAAkB,IAAhBxK,EAAe,EAAfA,SAAe,EAC3D8B,mBAAqB,MADsC,mBACpFxP,EADoF,KAC1EsM,EAD0E,OAE3DkD,mBAAoC,MAFuB,mBAEpF9C,EAFoF,KAE1EE,EAF0E,KAIrFuL,EAA+C,CACnDnY,SAAUA,EACVsM,YAAa,SAACtM,GAAD,OAAmBsM,EAAYtM,IAC5C0M,SAAUA,EACVE,YAAa,SAACtB,GAAD,OAAgCsB,EAAYtB,KAG3D,OACE,cAACyM,GAAoBK,SAArB,CAA8B3T,MAAO0T,EAArC,SACGzK,K,UCkBQ2K,GA3C2C,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACvC9I,oBAAkB,GADqB,mBAC9D+I,EAD8D,KACrDC,EADqD,OAE3ChJ,mBAAwB,MAFmB,mBAE9DlO,EAF8D,KAEvDmX,EAFuD,OAGjCjJ,mBAAiB,IAHgB,mBAG9DkJ,EAH8D,KAGlDC,EAHkD,KAcrE,OATApI,qBAAU,WACR,IACEoI,EAAcvR,KAAK4B,UAAU4P,aAAUN,GAAM,KAAM,IACnD,MAAO7W,GACPgX,EAAShX,EAAIC,SACb8W,GAAW,MAEZ,CAACF,IAGF,sBAAK/Y,UAAU,cAAf,UACE,sBAAKA,UAAU,UAAf,UACGmZ,GACC,qBAAKnZ,UAAU,YAAf,SACE,0BACEuT,aAAc4F,EACdxH,UAAU,MAIf5P,GACC,sBAAK/B,UAAU,cAAf,UACE,kEAA6C,uBAC7C,qEAIHgZ,GAAW,qBAAKhZ,UAAU,gBAAf,SAAgC+Y,QAE5ChX,GACA,qBAAK/B,UAAU,UAAf,SACE,yBAAQA,UAAU,WAAWI,QAAS,kBAAM6Y,GAAYD,IAAxD,UAAmEA,EAAU,OAAS,OAAtF,gBC3CK,OAA0B,uCCwC1BM,GA9BiD,SAAC,GAAqB,IAAnBlP,EAAkB,EAAlBA,YACjE,OACE,cAAC,GAAD,CAAOsF,MAAO,qCAAE,qBAAKzP,IAAKsZ,KAAZ,kBAA+CvZ,UAAU,sBAAvE,SACE,kCACE,gCACE,+BACE,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,UAAd,0BAGJ,gCACI0X,OAAOjL,KAAKrC,GAAarD,KAAI,SAACU,GAC9B,OACE,+BACE,6BAAKA,IACL,6BACE,6BACG2C,EAAY3C,GAAKV,KAAI,SAACF,GAAD,OACpB,6BAAkB,cAAC,GAAD,CAAyBkS,IAAKlS,EAAK2D,WAA5C3D,EAAKlC,aALb8C,cC8BR+R,GArC+C,SAAC,GAExD,IADLrB,EACI,EADJA,qBAAsBhO,EAClB,EADkBA,mBAAoBC,EACtC,EADsCA,YAAa+M,EACnD,EADmDA,YAAaC,EAChE,EADgEA,UAE9DvK,EAAU4M,qBAAWjB,IAS3B,OACE,sBAAKxY,UAAU,qBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CAAuBmY,qBAXb,SAAC1Q,EAAa+C,GAAd,OAChBqC,EAAQM,UAAYgL,EAAqBtL,EAAQM,SAAU1F,EAAK+C,UAa9D,qBAAKxK,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CACEkX,QAAS/M,EACTgN,YAhBW,SAAC1P,EAAa9C,GAAd,OACnBkI,EAAQM,UAAYgK,EAAYtK,EAAQM,SAAU1F,EAAK9C,IAgB/CyS,UAfS,SAAC3P,EAAa+C,EAAiB7F,GAA/B,OACjBkI,EAAQM,UAAYiK,EAAUvK,EAAQM,SAAU1F,EAAK+C,EAAS7F,UAkB5D,qBAAK3E,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CAAmBoK,YAAaA,YCxB3B0C,gBAdS,SAACzI,GAAD,MAA4B,CAClD8F,mBAAoB9F,EAAMyR,UAAU3L,mBACpCC,YAAa/F,EAAMyR,UAAU1L,gBAGJ,SAACxE,GAAD,MAA6D,CACtFuS,qBAAsB,SAACpM,EAA4BtE,EAAa+C,GAA1C,OACpB5E,EAASkG,GAAuBC,EAAQtE,EAAK+C,KAC/C2M,YAAa,SAACpL,EAA4BtE,EAAa9C,GAA1C,OACXiB,EAASqG,GAAuBF,EAAQtE,EAAK9C,KAC/CyS,UAAW,SAACrL,EAA4BtE,EAAa+C,EAAiB7F,GAA3D,OACTiB,EAASuG,GAAqBJ,EAAQtE,EAAK+C,EAAS7F,QAGzCmI,CAA6C0M,I,SCtB7C,OAA0B,qCCuG1BE,GAvFiD,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,UAAWzY,EAAoC,EAApCA,QAAS0Y,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAAc,EAChF5J,oBAAkB,GAD8D,mBACzG6J,EADyG,KAC/FC,EAD+F,OAE9E9J,oBAAkB,GAF4D,mBAEzGG,EAFyG,KAE9FC,EAF8F,OAGlFJ,mBAAwB,MAH0D,mBAGzGK,EAHyG,KAGhGC,EAHgG,KAK1GyJ,EAAa,WACjBzJ,EAAW,MACXF,GAAa,IAwCf,OACE,eAAC,GAAD,CACEX,MAAO,qCAAE,qBAAKzP,IAAKga,KAAZ,wBACP/F,YAAa2F,GAAW,wBAAQzZ,QAAS,kBAAM2Z,GAAY,IAAnC,0BAF1B,UAIE,2CACA,qBAAI/Z,UAAU,QAAd,UACyB,KAAb,OAAT2Z,QAAS,IAATA,OAAA,EAAAA,EAAWtU,SAAgB,6BAAI,kEADlC,OAEGsU,QAFH,IAEGA,OAFH,EAEGA,EAAW5S,KAAI,SAACmT,GACf,IAAKA,EAASC,kBAAoBjZ,EAAS,OAAO,6BAClD,IAAM+E,EAAMjB,EAAgBkV,EAASC,gBAAiBjZ,GACtD,OACE,6BACE,cAAC,GAAD,CAASgN,aAAcjI,EAAvB,SAA6BhB,EAAmBgB,MADzCA,SAOf,cAAC,GAAD,CACEmJ,KAAM0K,EACNnK,QA5Bc,WACbS,IACH2J,GAAY,GACZC,MA0BEha,UAAU,oBACVmW,UA5DoB,SAACiE,GAGzB,OAFAJ,IAEKK,0BAAeD,GAKhBA,IAAgBA,EAAYzT,eAAkB2T,kCAAuBF,EAAalZ,GAKoB,KAA7F,OAATyY,QAAS,IAATA,OAAA,EAAAA,EAAW/S,QAAO,SAAAC,GAAI,aAAkE,KAA9D,UAAAA,EAAKsT,uBAAL,eAAsBI,QAAQH,EAAYzT,mBAAuBtB,SAC7F2U,IACOzJ,EAAW,yCAGpBF,GAAa,QACbuJ,EAAYQ,GACTnZ,MAAK,WACJ8Y,GAAY,GACZC,OAED/X,OAAM,SAACC,GACN8X,IACAzJ,EAAWrO,EAAIC,cAjBjB6X,IACOzJ,EAAW,4BANlByJ,IACOzJ,EAAW,qBAwDhBoB,SAAUvB,EACVrO,MAAOuO,EACPP,UAAU,GACVK,UAAWA,EACXiG,QAAS,CACP3G,MAAO,oBACPoH,MAAO,4GACPC,MAAO,cACPC,OAAQ,eACRvF,YAAa,iBCPR+I,GA1E2C,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOZ,EAAoC,EAApCA,QAAS3Y,EAA2B,EAA3BA,QAASwZ,EAAkB,EAAlBA,YAAkB,EACpEzK,oBAAkB,GADkD,mBAC/FsH,EAD+F,KACpFC,EADoF,OAEpEvH,oBAAkB,GAFkD,mBAE/FG,EAF+F,KAEpFC,EAFoF,OAGxEJ,mBAAwB,MAHgD,mBAG/FK,EAH+F,KAGtFC,EAHsF,KAKhGyJ,EAAa,WACjBzJ,EAAW,MACXF,GAAa,IAkCTsK,EAAWF,GAASvZ,GAAW8D,EAAgByV,EAAOvZ,GAE5D,OACE,eAAC,GAAD,CACEwO,MAAO,qCAAE,qBAAKzP,IAAK4R,KAAZ,oBACPqC,YAAa2F,GAAW,wBAAQzZ,QAAS,kBAAMoX,GAAa,IAApC,sBAF1B,UAIE,uCACA,mBAAGxX,UAAU,QAAb,SACG2a,GAAY,cAAC,GAAD,CAASzM,aAAcyM,EAAvB,SAAkC1V,EAAmB0V,OAGpE,cAAC,GAAD,CACEvL,KAAMmI,EACNvX,UAAU,eACVmW,UA9CiB,SAACyE,GAGtB,OAFAZ,IAEKK,0BAAeO,GAKhBA,IAAaA,EAASjU,eAAkB2T,kCAAuBM,EAAU1Z,IAI7EmP,GAAa,QACbqK,EAAYE,GACT3Z,MAAK,WACJuW,GAAa,GACbwC,OAED/X,OAAM,SAACC,GACN8X,IACAzJ,EAAWrO,EAAIC,cAXjB6X,IACOzJ,EAAW,4BANlByJ,IACOzJ,EAAW,qBA0ChBZ,QAvBc,WACbS,IACHoH,GAAa,GACbwC,MAqBErI,SAAUvB,EACVA,UAAWA,EACXrO,MAAOuO,EACPP,UAAW,GACXsG,QAAS,CACP3G,MAAO,yBACPoH,MAAO,+GACPC,MAAO,cACPtF,YAAa,UACbuF,OAAQ,kBClFH,OAA0B,gCC+G1B6D,GAjG+C,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,OAAQlB,EAAc,EAAdA,QAAc,EACjE5J,oBAAkB,GAD+C,mBAC1F6J,EAD0F,KAChFC,EADgF,OAE/D9J,oBAAkB,GAF6C,mBAE1FG,EAF0F,KAE/EC,EAF+E,OAGnEJ,mBAAwB,MAH2C,mBAG1FK,EAH0F,KAGjFC,EAHiF,KAK3FyK,EAAY,CAChBC,UAAW,YACXC,QAAS,UACTC,SAAU,MACVC,SAAU,QACVlW,MAAO,IAVwF,EAarE+K,mBAAkG+K,GAb7B,mBAa1FpK,EAb0F,KAalFC,EAbkF,KAkC3FgG,EAAc,SAAClS,GAAD,MAAiB,CACnCA,KACA3E,UAAW,OACX0R,SAAU,SAACX,GAAD,OACRF,EAAU,2BAAKD,GAAN,mBAAeG,EAAIzQ,OAAOqE,GAAKoM,EAAIzQ,OAAO4E,YAGvD,OACE,qCACE,eAAC,GAAD,CACEwK,MAAO,qCAAE,qBAAKzP,IAAKob,KAAZ,kBACPnH,YAAa2F,GAAW,wBAAQzZ,QAAS,kBAAM2Z,GAAY,IAAnC,4BAF1B,UAIE,6CACA,iCACKe,GAAoC,IAAtBA,EAAWzV,SAAiB,6BAAI,kDADnD,OAEGyV,QAFH,IAEGA,OAFH,EAEGA,EAAY/T,KAAI,SAACuU,GAAD,OACf,+BAAgB,iCAASA,EAAG9J,OAAc,uBAA1C,IAAkD8J,EAAGC,iBAAmBD,EAAGE,eAAlEF,EAAG3W,aAIlB,cAAC,GAAD,CAAO+K,MAAM,iBAAiBN,KAAM0K,EAAUnK,QAAS,kBAAMoK,GAAY,IAAzE,SACE,qCACE,8BACE,kDACA,mDAAYlD,EAAY,cAAxB,IAAsC3R,MAAO0L,EAAOqK,UAApD,UACE,wBAAQ/V,MAAM,YAAd,uBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,UAAd,4BAGJ,8BACE,uBAAOuW,QAAQ,UAAf,yBACA,mDAAY5E,EAAY,YAAxB,IAAoC3R,MAAO0L,EAAOsK,QAAlD,UACE,wBAAQhW,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,4BAGJ,8BACE,uBAAOuW,QAAQ,WAAf,sBACA,mDAAY5E,EAAY,aAAxB,IAAqC3R,MAAO0L,EAAOuK,SAAnD,UACE,wBAAQjW,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,2BAGJ,8BACE,wBAAOuW,QAAQ,WAAf,sBAAmC,mDACnC,iDAAW5E,EAAY,aAAvB,IAAoCrF,KAAK,OAAOtM,MAAO0L,EAAOwK,eAEhE,8BACE,wCACA,wCAAcvE,EAAY,cAG5B,cAAClX,EAAD,CAAYK,UAAU,SAAS2R,SAAUvB,EAAWhQ,QAzEvC,WACnB,GAAqB,KAAjBwQ,EAAO1L,MACT,OAAOqL,EAAW,0BAGpBF,GAAa,GACbE,EAAW,MACXwK,EAAO,WAAD,OAAYnK,EAAOqK,UAAnB,YAAgCrK,EAAOsK,QAAvC,YAAkDtK,EAAOuK,UAAYvK,EAAO1L,MAAO/D,SAASyP,EAAOwK,WACtGna,MAAK,WACJoP,GAAa,GACb0J,GAAY,GACZlJ,EAAUmK,MAEX/Y,OAAM,SAACC,GACNmO,GAAa,GACbE,EAAWrO,EAAIC,aA0Db,4BACCmO,GAAW,qBAAKtQ,UAAU,cAAf,SAA8BsQ,IACzCF,GAAa,cAAC,GAAD,aCxGT,OAA0B,qCCkG1BsL,GApF+C,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,YAAa/B,EAAc,EAAdA,QAAc,EACrE5J,oBAAkB,GADmD,mBAC9F6J,EAD8F,KACpFC,EADoF,OAEnE9J,oBAAkB,GAFiD,mBAE9FG,EAF8F,KAEnFC,EAFmF,OAGvEJ,mBAAwB,MAH+C,mBAG9FK,EAH8F,KAGrFC,EAHqF,KAK/FyK,EAAW,CAAEhX,KAAM,GAAI6X,IAAK,GAAIT,SAAU,SALqD,EAMzEnL,mBAAyD+K,GANgB,mBAM9FpK,EAN8F,KAMtFC,EANsF,KAQ/FgG,EAAc,SAAClS,GAAD,MAAiB,CACnC6M,KAAM,OACNxR,UAAW,OACX2E,KACA+M,SAAU,SAACX,GAAD,OACRF,EAAU,2BAAKD,GAAN,mBAAeG,EAAIzQ,OAAOqE,GAAKoM,EAAIzQ,OAAO4E,UACrDyM,SAAUvB,EACVqB,YAAa9M,IA6Bf,OACE,qCACE,eAAC,GAAD,CACE+K,MAAO,qCAAE,qBAAKzP,IAAK6b,KAAZ,wBACP5H,YAAa2F,GAAW,wBAAQzZ,QAAS,kBAAM2Z,GAAY,IAAnC,0BAF1B,UAIE,kDACA,iCACK4B,GAAmC,KAAb,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWtW,UAAiB,6BAAI,+DADlD,OAEGsW,QAFH,IAEGA,OAFH,EAEGA,EAAW5U,KAAI,SAACgV,GAAD,OACd,qBAAI/b,UAAU,WAAd,UACE,iCAAS+b,EAASvK,OADpB,MACsCuK,EAASC,kBADjBD,EAASpX,IAAMoX,EAASvK,eAO5D,eAAC,GAAD,CAAOpC,KAAM0K,EAAUpK,MAAM,uBAAuBC,QAAS,kBAAMoK,GAAY,IAA/E,UACE,qCACE,8BACE,uBAAO0B,QAAQ,OAAf,kBACA,iDAAW5E,EAAY,SAAvB,IAAgC3R,MAAO0L,EAAO5M,WAEhD,8BACE,uBAAOyX,QAAQ,MAAf,iBACA,iDAAW5E,EAAY,QAAvB,IAA+B3R,MAAO0L,EAAOiL,UAE/C,8BACE,wBAAOJ,QAAQ,WAAf,sBAAmC,mDACnC,iDAAW5E,EAAY,aAAvB,IAAoC3R,MAAO0L,EAAOwK,kBAGtD,cAACzb,EAAD,CAAYK,UAAU,SAAS2R,SAAUvB,EAAWhQ,QA1DhC,WAIxB,OAHAiQ,GAAa,GACbE,EAAW,MAES,KAAhBK,EAAO5M,MAA8B,KAAf4M,EAAOiL,KAC/BxL,GAAa,GACNE,EAAW,uCAGc,IAA9BK,EAAO5M,KAAKuW,QAAQ,MACtBlK,GAAa,GACNE,EAAW,yCAGpBqL,EAAY,WAAD,OAAYhL,EAAO5M,MAAQ4M,EAAOiL,IAAK1a,SAASyP,EAAOwK,WAC/Dna,MAAK,WACJoP,GAAa,GACb0J,GAAY,GACZlJ,EAAUmK,MAEX/Y,OAAM,SAACC,GACNmO,GAAa,GACbE,EAAWrO,EAAIC,aAoCf,0BACCmO,GAAW,qBAAKtQ,UAAU,cAAf,SAA8BsQ,IACzCF,GAAa,cAAC,GAAD,WCvCP6L,GAjCiD,SAAC,GAE1D,IADLxB,EACI,EADJA,MAAOvW,EACH,EADGA,QAAShD,EACZ,EADYA,QAASyY,EACrB,EADqBA,UAAWuC,EAChC,EADgCA,QAASpB,EACzC,EADyCA,WAAYJ,EACrD,EADqDA,YAAad,EAClE,EADkEA,YAAauC,EAC/E,EAD+EA,aAE7EtC,GAAiB,OAAP3V,QAAO,IAAPA,OAAA,EAAAA,EAASyC,kBAAT,OAA2B8T,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAO9T,eAC5CkG,EAAU4M,qBAAWjB,IAIrB4D,EAAqB,SAAC5K,EAActM,EAAekW,GAA9B,OACzBe,EAAY,OAACtP,QAAD,IAACA,OAAD,EAACA,EAASpM,SAAU+Q,EAAMtM,EAAOkW,IAE/C,OACE,sBAAKpb,UAAU,mBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CAAgBya,MAAOA,EAAOvZ,QAASA,EAAS2Y,QAASA,EAASa,YAThD,SAACE,GAAD,OAAsBF,EAAW,OAAC7N,QAAD,IAACA,OAAD,EAACA,EAASpM,SAAUma,QAWzE,qBAAK5a,UAAU,SAAf,SACE,cAAC,GAAD,CAAmB2Z,UAAWA,EAAWzY,QAASA,EAAS0Y,YAXzC,SAACM,GAAD,OAAsBN,EAAW,OAAC/M,QAAD,IAACA,OAAD,EAACA,EAASpM,SAAUyZ,IAWoBL,QAASA,SAGxG,sBAAK7Z,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAACqc,GAAD,CAAYvB,WAAYA,EAAYC,OAAQqB,EAAoBvC,QAASA,MAE3E,qBAAK7Z,UAAU,SAAf,SACE,cAAC,GAAD,CAAkB2b,UAAWO,EAASN,YAAaQ,EAAoBvC,QAASA,aCtCpFyC,GAAqB,SAAC5X,GAC1B,IAAM6X,EAAa7X,EAAYE,UAAUgC,QAAO,SAAC0U,GAAD,OAAmBA,EAAG3W,GAAG8F,SAAS,kBAAgB,GAClG,MAA8B,qBAAf8R,EAA8B,KAAOA,EAAWpC,iBAmBlDrN,gBAhBS,SAACzI,GAAD,cAA4B,CAClDH,QAASG,EAAMuR,SAAS1R,QACxBhD,QAASmD,EAAMuR,SAAS1U,QACxBuZ,MAAO6B,GAAmBjY,EAAMmY,QAAQ9X,aACxCiV,UAAS,UAAEtV,EAAMmY,QAAQ9X,YAAYE,iBAA5B,aAAE,EAAqCgC,QAAO,SAAC0U,GAAD,OAAoBA,EAAG3W,GAAG8F,SAAS,iBAC1FyR,QAAS7X,EAAMmY,QAAQ9X,YAAYwX,QACnCpB,WAAU,UAAEzW,EAAMmY,QAAQ9X,YAAYE,iBAA5B,aAAE,EAAqCgC,QAAO,SAAC0U,GAAD,OAAmBA,EAAGC,iBAAmBD,EAAGE,oBAG3E,SAAC5V,GAAD,MAA6D,CACtF8U,YAAa,SAACja,EAAema,GAAhB,OAAqChV,EpDNzB,SAACnF,EAAema,GAAhB,OAAqC,SAAChV,GAAD,OAC9D,IAAI7E,SAAQ,SAAC8E,EAASyD,GACpB,IAAMgD,EAAW,SAAC3K,GAAD,OACfA,EAASI,MAAQuH,EAAO3H,EAASI,OAAS8D,EAAQD,EAASD,GAAmBlF,MAEhFK,EAAqBL,GAAUQ,MAAK,mCAAEiD,EAAF,KAAWhD,EAAX,YAClC,IAAIub,IAAQ,CACVvY,QAASA,EACTzD,WACAgF,SAAU/C,EAAsBvB,SAASD,MAExCwZ,YAAYE,EAASjU,eACrB1F,MAAK,SAACI,GAAD,OAAgBD,EAAoBX,EAAUY,EAAIiL,MACvDrK,OAAM,SAACC,GAAD,OAAgBoH,EAAOpH,aoDPuBwa,CAAYjc,EAAUma,KACjFhB,YAAa,SAACnZ,EAAe2Z,GAAhB,OAAwCxU,EpD6B5B,SAACnF,EAAeyZ,GAAhB,OAAqC,SAACtU,GAAD,OAC9D,IAAI7E,SAAQ,SAAC8E,EAASyD,GACpB,IAAMgD,EAAW,SAAC3K,GAAD,OACfA,EAASI,MAAQuH,EAAO3H,EAASI,OAAS8D,EAAQD,EAASD,GAAmBlF,MAEhFK,EAAqBL,GAAUQ,MAAK,mCAAEiD,EAAF,KAAWhD,EAAX,YAClC,IAAIub,IAAQ,CACVvY,QAASA,EACTzD,WACAgF,SAAU/C,EAAsBvB,SAASD,MAExC0Y,YAAYM,EAAU,CACrByC,aAvD2B,qBAyD5B1b,MAAK,SAACI,GAAD,OAAgBD,EAAoBX,EAAUY,EAAIiL,MACvDrK,OAAM,SAACC,GAAD,OAAgBoH,EAAOpH,aoD5C0B0X,CAAYnZ,EAAU2Z,KACpF+B,aAAc,SAAC1b,EAAe+Q,EAActM,EAAekW,GAA7C,OACZxV,EpDqDwB,SAACnF,EAAe+Q,EAActM,EAAekW,GAA7C,OAAmE,SAACxV,GAAD,OAC7F,IAAI7E,SAAQ,SAAC8E,EAASyD,GACpB,IAAMgD,EAAW,SAAC3K,GAAD,OACfA,EAASI,MAAQuH,EAAO3H,EAASI,OAAS8D,EAAQD,EAASD,GAAmBlF,MAEhFK,EAAqBL,GAAUQ,MAAK,mCAAEiD,EAAF,KAAWhD,EAAX,YAClC,IAAIub,IAAQ,CACVvY,QAASA,EACTzD,WACAgF,SAAU/C,EAAsBvB,SAASD,MAExC0b,aAAapL,EAAMtM,EAAOkW,GAC1Bna,MAAK,SAACI,GAAD,OAAgBD,EAAoBX,EAAUY,EAAIiL,MACvDrK,OAAM,SAACC,GAAD,OAAgBoH,EAAOpH,aoDlEzBia,CAAa1b,EAAU+Q,EAAMtM,EAAOkW,QAGlCtO,CAA6CmP,ICiE7CY,GA5E6B,SAAC,GAA8D,IAA5DrW,EAA2D,EAA3DA,OAAQtF,EAAmD,EAAnDA,QAASkF,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,WAAYgD,EAAqB,EAArBA,eAAqB,EACxE4G,oBAAkB,GADsD,mBACjG6J,EADiG,KACvFC,EADuF,OAEpE9J,mBAAiB,IAFmD,mBAEjG6M,EAFiG,KAErFC,EAFqF,OAGtE9M,oBAAkB,GAHoD,mBAGjGG,EAHiG,KAGtFC,EAHsF,OAI1EJ,mBAAwB,MAJkD,mBAIjGK,EAJiG,KAIxFC,EAJwF,KAMlG1D,EAAU4M,qBAAWjB,IAErBwE,EAAc,WAClBjD,GAAaD,GACbiD,EAAc,KAsBhB,OACE,eAAC,GAAD,CACErN,MAAM,SACN1P,UAAU,mBACVkU,YAAa,wBAAQ9T,QAAS4c,EAAjB,yBAHf,UAKG5W,GACC,cAAC,GAAD,CACEpC,KAAK,UACLhE,UAAU,iBACVoG,QAASA,EACTD,OAAQrD,EAAe5B,GACvBmF,WAAYA,QAAcC,IAXhC,OAeGE,QAfH,IAeGA,OAfH,EAeGA,EAAQO,KAAI,SAACmC,GAAD,OACX,cAAC,GAAD,CAEElF,KAAMkF,EAAMlF,MAAN,wBAA+BiB,EAAmBiE,EAAMhF,UAC9DkC,QAAS8C,EAAM9C,QACfD,OAAQ+C,EAAM/C,OACdE,WAAY6C,EAAM7C,YAJb6C,EAAMhF,YAQf,cAAC,GAAD,CACEkL,KAAM0K,EACNnK,QAASqN,EACTrL,SAAUvB,EACVrO,MAAOuO,EACP+F,QAAS,CACP3G,MAAO,YACPoH,MAAO,gDACPC,MAAO,gBACPtF,YAAa,mBACbuF,OAAQ,aAEVb,UAzDW,WAIf,GAHA9F,GAAa,GACbE,EAAW,OAEN8J,0BAAeyC,GAElB,OADAzM,GAAa,GACNE,EAAW,wBAEpBlH,EAAc,OAACwD,QAAD,IAACA,OAAD,EAACA,EAASpM,SAAUqc,GAC/B7b,MAAK,WACJoP,GAAa,GACb0J,GAAY,MAEb9X,OAAM,SAACC,GACNmO,GAAa,GACbE,EAAWrO,EAAIC,mBClBR8a,GAhByC,SAAC,GAAD,IAAGzW,EAAH,EAAGA,OAAQtF,EAAX,EAAWA,QAASkF,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,WAAYgD,EAAzC,EAAyCA,eAAzC,OACtD,qBAAKrJ,UAAU,eAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,GAAD,CACEwG,OAAQA,EACR6C,eAAgBA,EAChBnI,QAASA,EACTkF,QAASA,EACTC,WAAYA,WCIPyG,gBAlBS,SAACzI,GAAD,MAA4B,CAClDmC,OAAQnC,EAAMwR,KAAKrP,OACnBtF,QAASmD,EAAMuR,SAAS1U,QACxBkF,QAAS/B,EAAMwR,KAAKzP,QACpBC,WAAYhC,EAAMwR,KAAKxP,eAGE,SAACT,GAAD,MAA6D,CACtFyD,eAAgB,SAAC5I,EAAesV,EAAkBC,EAAmB9U,GAArD,OAAyE0E,EAASyD,GAAe5I,EAAUsV,EAAUC,EAAW9U,SAG/H,SAACoM,EAAiBC,EAAoBC,GAAtC,mBAAC,uCACfF,GACAC,GACAC,GAHc,IAIjBnE,eAAgB,SAAC5I,EAAeuV,GAAhB,OAAsCzI,EAAclE,eAAe5I,EAAU6M,EAAWpJ,QAAS8R,EAAW1I,EAAWpM,cAG1H4L,CAAyDmQ,ICuBzDC,GA7B2D,SAAC,GAAwD,IAAtDhc,EAAqD,EAArDA,QAASgD,EAA4C,EAA5CA,QAAS+N,EAAmC,EAAnCA,QAASkL,EAA0B,EAA1BA,oBAA0B,EACpGlN,mBAAkBL,GAAQ4C,WAD0E,mBACzH4K,EADyH,KACjHC,EADiH,KAE1HxQ,EAAU4M,qBAAWjB,IAErB9C,EAAe,SAAC0H,GAAD,OAAqBC,EAAUD,IAGpD,OACE,qCACE,cAACE,GAAD,CACEpc,QAASA,QAAWoF,EACpBL,IAAM/B,GAAWhD,EAAW8D,EAAgBd,EAAShD,QAAWoF,EAChE2L,QAASA,EACTC,eAAgBrF,EAAQM,SACxB6C,cATgB,SAACuN,GAAD,OAAyB1Q,EAAQM,UAAYgQ,EAAoBtQ,EAAQM,SAAUoQ,MAWrG,cAAC,GAAD,CACElL,SAAU+K,EACV7K,YAAamD,EACbpD,gBAAiBzF,EAAQM,WAE1BiQ,IAAWxN,GAAQ4C,WAAa,cAACgL,GAAD,CAAoB9H,aAAcA,IAClE0H,IAAWxN,GAAQ8C,WAAa,cAAC+K,GAAD,IAChCL,IAAWxN,GAAQ+C,UAAY,cAAC+K,GAAD,IAC/BN,IAAWxN,GAAQ6C,MAAQ,cAAC,GAAD,QC9BrBkL,GAA+B,SAAC5Y,GAC3C,IAGM6L,EAAuB,GAK7B,MARqB,CAAC,UAAW,WAAY,aAAc,cAAe,WAAY,gBAIzElE,SAAQ,SAACjF,GACpBmJ,EAAOnJ,GAJkB,SAACA,GAAD,OAAiB1C,EAAK0C,IAAQ1C,EAAK0C,GAAK,GAAK1C,EAAK0C,GAAO,CAAC,CAAE9C,GAAI,GAAI6F,QAAS,KAIxFoT,CAAmBnW,MAG5BmJ,GAcM9D,gBAXS,SAACzI,GAAD,MAA4B,CAClDH,QAASG,EAAMuR,SAAS1R,QACxBhD,QAASmD,EAAMuR,SAAS1U,QACxB+Q,QAAS0L,GAA6BtZ,EAAMyR,UAAU3L,wBAG7B,SAACvE,GAAD,MAA6D,CACtFuX,oBAAqB,SAACpR,EAA4BwR,GAA7B,OACnB3X,EnD+C+B,SAACmG,EAA4B6E,GAA7B,OAAsD,SAAChL,GAExF,IAAIiY,EAA+B,GAiBnC,OAfAnG,OAAOjL,KAAKmE,GAAQ7J,KAAI,SAACU,GAAD,OACtBmJ,EAAOnJ,GAAKV,KAAI,SAACF,GACf,IAAIiX,EACY,KAAZjX,EAAKlC,IAA8B,KAAjBkC,EAAK2D,QACzBsT,EAAS,kBAAMlY,EAASkG,GAAuBC,EAAQtE,EAAKZ,EAAK2D,WAC5C,KAAZ3D,EAAKlC,IAA8B,KAAjBkC,EAAK2D,QAChCsT,EAAS,kBAAMlY,EAASuG,GAAqBJ,EAAQtE,EAAKZ,EAAK2D,QAAS3D,EAAKlC,MACxD,KAAZkC,EAAKlC,IAA8B,KAAjBkC,EAAK2D,UAChCsT,EAAS,kBAAMlY,EAASqG,GAAuBF,EAAQtE,EAAKZ,EAAKlC,OAGnEkZ,EAAa/W,KAAK,IAAI/F,SAAQ,SAAC8E,GAAcA,EAAQiY,eAIlD/c,QAAQC,IAAI6c,ImDlERV,CAAoBpR,EAAQwR,QAG1BzQ,CAA6CoQ,ICpC7C,OAA0B,2CCA1B,OAA0B,gDCiB1Ba,GARiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAAf,OAC9C,yBAAQje,UAAU,aAAlB,UACE,qBAAKC,IAAK+d,EAAaE,GAAcC,GAAShe,IAAI,mBAClD,mFACA,yCAAY8d,SCUDG,GAfH,WACV,IAAMvR,EAAU4M,qBAAWjB,IACrBwF,EAAU,OAAGnR,QAAH,IAAGA,OAAH,EAAGA,EAASpM,SAE5B,OACE,sBAAKT,UAAWge,EAAa,eAAiB,YAA9C,UACGA,EACG,cAACK,GAAD,IACA,cAACC,GAAD,CAAsBzR,QAASA,IAEnC,cAAC,GAAD,CAAWmR,WAAYA,EAAYC,QAASA,UCJnCM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBxd,MAAK,YAAkD,IAA/Cyd,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCDRO,GAAa,CAACC,KAAOC,2BASrBC,GAAcC,aAAgB,CAClCvJ,SAAUwJ,EACV5C,QAAS6C,EACTxJ,KAAMyJ,GACNxJ,UAAWyJ,KAMEC,GAHQ,SAACC,GAAD,OACrBC,aAAYR,GAAaO,EAAeE,KAAe,WAAf,EAAmBZ,MCjB7Da,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOP,KAAjB,SACE,cAAC,GAAD,UACE,cAAC,GAAD,UAINrM,SAAS6M,eAAe,SAM1BzB,O","file":"static/js/main.67b5fd36.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport AllNetworks from './config.json'\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  BALANCE_NAME = 'balanceName',\n  COIN_GECKO_IDS = 'coinGeckoIds'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    default: return Local[setting]\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getDataVault = () => AllNetworks.dataVaultUrl\nexport const getBalanceName = (chainId: number) => getSetting(chainId, SETTINGS.BALANCE_NAME) as string\nexport const getCoinGeckoIdsForNetwork = (chainId: number) => getSetting(chainId, SETTINGS.COIN_GECKO_IDS) as string\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:mainnet:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null,\n  conversion?: number\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0,\n  conversion: undefined\n}\n\nexport interface DefiState {\n  tokens: Token[],\n  balance: number | null,\n  conversion: number | null\n}\n\nexport const initialState = {\n  tokens: [],\n  balance: null,\n  conversion: null\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst defiSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: DefiState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    },\n    receiveBalance (state: DefiState, { payload: { balance } }: PayloadAction<{ balance: number }>) {\n      state.balance = balance\n    },\n    receiveConversionBalance (state: DefiState, { payload: { usd } }: PayloadAction<{ usd: number }>) {\n      state.conversion = usd\n    }\n  }\n})\n\nexport const { addTokenData, receiveBalance, receiveConversionBalance } = defiSlice.actions\n\nexport default defiSlice.reducer\n","import ContractsTestnet from '@rsksmart/rsk-testnet-contract-metadata'\nimport ContractsMainnet from '@rsksmart/rsk-contract-metadata'\n\nexport interface TokenMetadata {\n  name: string\n  logo: string\n  erc20: boolean\n  symbol: string\n  decimals: number\n}\n\nexport interface TokenMetadataPair {\n  [address: string] : TokenMetadata\n}\n\nconst getTokenContracts = (chainId: number) => {\n  switch (chainId) {\n    case 30: return ContractsMainnet\n    case 31: return ContractsTestnet\n    default: return null\n  }\n}\n\n/**\n * Converts CoinGecko coin Ids to their address or to the defaultBalance\n * @param symbol CoinGecko's coin/token Id\n * @param chainId ChainId of the network\n */\nexport const mapToCoinGeckoToAddress = (symbol: string, chainId: number) => {\n  switch (symbol) {\n    case 'ethereum':\n    case 'bitcoin':\n      return 'defaultBalance'\n    case 'rif-token':\n      return chainId === 30\n        ? '0x2aCc95758f8b5F583470bA265Eb685a8f45fC9D5' : '0x19f64674D8a5b4e652319F5e239EFd3bc969a1FE'\n    default: return null\n  }\n}\n\nexport default getTokenContracts\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData, receiveBalance, receiveConversionBalance } from '../reducers/defi'\nimport getTokenContracts, { TokenMetadataPair, TokenMetadata, mapToCoinGeckoToAddress } from '../../../config/getTokenContracts'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\nimport Axios, { AxiosResponse } from 'axios'\nimport { getCoinGeckoIdsForNetwork } from '../../../config/getConfig'\n\nexport const getTokenList = (provider: any, chainId: number, userAddress: string) => (dispatch: Dispatch<any>) => {\n  // get the set token list for the specific chainId\n  dispatch(getSetTokenList(provider, userAddress, chainId))\n\n  // get conversion rates for tokenlist that are in CoinGecko\n  dispatch(getConversionRates(chainId))\n\n  // local tokens that were saved in localStorage\n  const localTokens = getValueFromLocalStorage(chainId.toString(), 'TOKEN') ? getValueFromLocalStorage(chainId.toString(), 'TOKEN') : []\n  localTokens.map((address: string) => {\n    dispatch(getTokenWithMetadata(provider, address, userAddress))\n  })\n}\n\n/**\n * Loops through the contract metadata as specificed by @rsksmart/rsk-[testnet-]contract-metadata\n * @param provider web3 provider\n * @param userAddress users Address\n * @param chainId id of the network\n */\nconst getSetTokenList = (provider: any, userAddress: string, chainId: number) => (dispatch: Dispatch<any>) => {\n  const allTokens = getTokenContracts(chainId) as TokenMetadataPair\n  if (!allTokens) {\n    return\n  }\n\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  for (const address in allTokens) {\n    const metadata = allTokens[address] as TokenMetadata\n\n    if (metadata.erc20) {\n      ethContract(erc20abi).at(address).balanceOf(userAddress)\n        .then((balance: BN[]) => balance[0])\n        .then((balance: BN) => balance.div(new BN(10).pow(new BN(metadata.decimals))).toNumber())\n        .then((balance: number) => {\n          if (balance !== 0) {\n            dispatch(addTokenData({ data: { address, balance, name: metadata.name, symbol: metadata.symbol } }))\n          }\n        })\n        .catch((err: Error) => console.log('balanceOf error', err))\n    }\n  }\n}\n\n/**\n * Get balance and metadata for a specific token\n * @param provider web3 Provider\n * @param address contract address\n * @param userAddress address of the user to query balance\n * @param onComplete callback function to be called\n */\nexport const getTokenWithMetadata = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\n/**\n * Watch a custom token that the user has inputed the address for\n * @param provider web3 provider\n * @param userAddress user's address\n * @param address contract address to query\n * @param chainId chain Id\n */\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getTokenWithMetadata(provider, address, userAddress, onComplete))\n  })\n\n/**\n * Get the default balance of the user\n * @param provider web3 provider\n * @param address address of the user\n */\nexport const getBalance = (provider: any, address: string) => (dispatch: Dispatch<any>) =>\n  new Eth(provider).getBalance(address)\n    .then((balance: BN) => parseInt(balance.toString()))\n    .then((balance: number) => balance / Math.pow(10, 18))\n    .then((balance:number) => dispatch(receiveBalance({ balance })))\n\n/**\n * Gets the Token to USD conversion rate\n * @param address Token address, used for storing it in redux\n * @param geckoIds Ids of the coin for coingecko's AIP\n */\nexport const getConversionRates = (chainId: number) => (dispatch: Dispatch<any>) => {\n  const geckoIds = getCoinGeckoIdsForNetwork(chainId)\n  if (!geckoIds) {\n    return\n  }\n\n  Axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=${geckoIds}&vs_currencies=usd`)\n    .then((response: AxiosResponse) => response.data)\n    .then((data: { [name: string]: { usd: number } }) => {\n      for (const geckoId in data) {\n        const address = mapToCoinGeckoToAddress(geckoId, chainId)\n        if (address === 'defaultBalance') {\n          dispatch(receiveConversionBalance(data[geckoId]))\n        } else if (address) {\n          dispatch(addTokenData({ data: { address: address, conversion: data[geckoId].usd } }))\n        }\n      }\n    })\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  declarativeDetails: {},\n  credentials: {},\n  storage: undefined\n}\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      if (key.endsWith('Credential')) {\n        state.credentials[key] = content\n      } else {\n        state.declarativeDetails[key] = content\n      }\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.declarativeDetails[key] ? state.declarativeDetails[key].push(content) : state.declarativeDetails[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].filter((item: DataVaultContent) => item.id !== id)\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    }\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient, { AuthManager, EncryptionManager } from '@rsksmart/ipfs-cpinner-client'\n\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const serviceUrl = getDataVault()\n  const did = createDidFormat(address, chainId)\n\n  const personalSign = (data: string) => provider.request({ method: 'personal_sign', params: [address, data] })\n  const decrypt = (hexCypher: string) => provider.request({ method: 'eth_decrypt', params: [hexCypher, address] })\n  const getEncryptionPublicKey = () => provider.request({ method: 'eth_getEncryptionPublicKey', params: [address] })\n\n  return new DataVaultWebClient({\n    serviceUrl,\n    authManager: new AuthManager({ did, serviceUrl, personalSign }),\n    encryptionManager: new EncryptionManager({ getEncryptionPublicKey, decrypt })\n  })\n}\n\n/**\n * Get all keys and data from the datavault\n * @param client DataVault client\n * @param did DID of the user, required for getting individual key content\n */\nexport const getDataVaultContent = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) =>\n      keys.forEach((key: string) =>\n        client.get({ key })\n          .then((content: any) => content as DataVaultContent[])\n          .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content }))))\n    )\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n\n/**\n * Start the Data Vault Client\n * Request StorageInformation first, which will save the access token with the DataVault Service\n * in localStorage. Then request the content from the data vault.\n * @param provider Web3 Provider\n * @param address User Address\n * @param chainId ChainId\n * @param callback Function\n */\nexport const dataVaultStart = (provider: any, address: string, chainId: number, callback?: any) => (dispatch: Dispatch<any>) => {\n  const client = createClient(provider, address, chainId)\n\n  client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => {\n      dispatch(receiveStorageInformation({ storage }))\n      dispatch(getDataVaultContent(client))\n      callback(client)\n    })\n    .catch((err: any) => callback(null, err))\n}\n","import { Dispatch } from 'react'\n\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getBalance, getTokenList } from './defi'\nimport { dataVaultStart } from './datavault'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, parseInt(chainId), address))\n      dispatch(getBalance(provider, address))\n\n      const callback = (dvClient: any, _error: any) => context.setDvClient(dvClient)\n      dispatch(dataVaultStart(provider, address, chainId, callback))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  opacity: 0;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  margin-top:25px;\n  top: 0px;\n  transition: opacity .6s;\n  display: block;\n  min-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover {\n    ${HoverSpan} {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <HoverTrigger className={className}>\n    {children}\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </HoverTrigger>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity',\n  DEFI = 'defi'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'dashboard active' : 'dashboard'}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        <li className={selected === screens.DEFI ? 'defi active' : 'defi'}>\n          <button onClick={() => handleClick(screens.DEFI)}>DeFi Assets</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'datavault active' : 'datavault'}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  useEffect(() => {\n    setIsError(null)\n    setIsLoading(false)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n  }, [initValue])\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={() => setShowModal(true)}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        <div>\n          <h2>Edit Persona</h2>\n          {truncateAddressDid(did)}\n          <p>You can edit your personal that be saved in your data vault.</p>\n\n          <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n          <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n          <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n          <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n          <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n          <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n          <p>\n            <BaseButton\n              className=\"save blue\"\n              onClick={save}\n              disabled={isLoading}\n            >Save</BaseButton></p>\n\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== ''\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/copy.713b200d.svg\";","import React, { useRef, useState } from 'react'\nimport CopyIcon from '../../assets/images/icons/copy.svg'\n\ninterface CopyButtonInterface {\n  value: string\n}\n\nconst CopyButton: React.FC<CopyButtonInterface> = ({ value }) => {\n  const [showResponse, setShowResponse] = useState<boolean>(false)\n  const copyTextField = useRef<HTMLInputElement>(null)\n\n  const handleClick = () => {\n    setShowResponse(true)\n    copyTextField.current && copyTextField.current.select()\n    document.execCommand('copy')\n    setTimeout(() => {\n      setShowResponse(false)\n    }, 1000)\n  }\n\n  return (\n    <span className=\"copyButton\">\n      <button type=\"button\" onClick={handleClick} className=\"icon\">\n        <img src={CopyIcon} alt=\"Copy text\" />\n      </button>\n      {showResponse && <span className=\"response\">Copied to clipboard.</span>}\n      <input\n        type=\"text\"\n        className=\"copyText\"\n        defaultValue={value}\n        ref={copyTextField}\n        style={{ position: 'absolute', left: '-10000px' }}\n      />\n    </span>\n  )\n}\n\nexport default CopyButton\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport CopyButton from '../../../components/CopyButton/CopyButton'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  address: string\n  chainId: number\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId }) => {\n  const did = createDidFormat(address, chainId)\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Persona information\"\n          className=\"identity-information\"\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Persona DID</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                <CopyButton value={did} />\n              </p>\n            </div>\n            <div className=\"column\">\n              <h2>Persona Address</h2>\n              <p className=\"value\">\n                {address}\n                <CopyButton value={address} />\n              </p>\n            </div>\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={handleButton} className=\"turquoise panel-button\">DataVault</BaseButton>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\n\ninterface BalanceRowInterface {\n  name?: string | null\n  balance?: number | null\n  symbol?: string | null\n  className?: string\n  conversion?: number\n}\n\nconst BalanceRow: React.FC<BalanceRowInterface> = ({ name, balance, symbol, className, conversion }) => {\n  const shorten = (original: number | null | undefined) => {\n    if (!original) { return original }\n    const shorten = parseFloat(original.toFixed(6))\n    return shorten === original ? original : shorten\n  }\n\n  return (\n    <div className={className ? `balance-row ${className}` : 'balance-row'}>\n      <h2>{name}</h2>\n      <div>\n        <span className=\"balance\">{shorten(balance)}</span>\n        <span className=\"symbol\">{symbol}</span>\n        {(conversion && balance) && <span className=\"conversion\">${Math.round(conversion * balance * 100) / 100} USD</span>}\n      </div>\n    </div>\n  )\n}\n\nexport default BalanceRow\n","import React from 'react'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport { getBalanceName } from '../../../config/getConfig'\nimport { Token } from '../../state/reducers/defi'\n\ninterface DeFiSummaryInterface {\n  balance: number | null\n  converstion: number | null\n  chainId?: number | null\n  featuredToken?: Token\n  handleButton: () => void\n}\n\nconst DeFiSummary: React.FC<DeFiSummaryInterface> = ({ balance, chainId, featuredToken, converstion, handleButton }) =>\n  balance && chainId\n    ? (\n      <Panel title={<>DeFi Summary</>} className=\"defi\">\n        <div className=\"container balance\">\n          <div className=\"columnDobule\">\n            <BalanceRow\n              name=\"Balance\"\n              balance={balance}\n              symbol={getBalanceName(chainId)}\n              conversion={converstion || undefined}\n            />\n            {featuredToken && (\n              <BalanceRow\n                name={featuredToken.name}\n                balance={featuredToken.balance}\n                symbol={featuredToken.symbol}\n                conversion={featuredToken.conversion || undefined}\n              />\n            )}\n          </div>\n        </div>\n        <BaseButton onClick={handleButton} className=\"turquoise\">More Defi</BaseButton>\n      </Panel>\n    )\n    : <></>\n\nexport default DeFiSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport DeFiSummary from './panels/DeFiSummary'\nimport { Token } from '../state/reducers/defi'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  storage?: DataVaultStorageState\n  balance: number | null\n  featuredTokens?: Token[]\n  converstion: number | null\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, storage, balance, featuredTokens, converstion, changeScreen\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      {address && chainId && <IdentitySummary address={address} chainId={chainId} />}\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeFiSummary\n            balance={balance}\n            converstion={converstion}\n            chainId={chainId}\n            featuredToken={featuredTokens ? featuredTokens[0] : undefined}\n            handleButton={() => changeScreen(screens.DEFI)}\n          />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\nimport { Token } from '../state/reducers/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.defi.tokens,\n  balance: state.defi.balance,\n  converstion: state.defi.conversion,\n  featuredTokens: state.defi.tokens.filter((token: Token) => token.symbol === 'RIF' || token.symbol === 'tRIF'),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue }) => {\n  interface DeleteItemI { key: string; id: string }\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<null | DeleteItemI>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n\n  const handleDeleteItem = (item: DeleteItemI) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(item.key, item.id)\n      .then(() => setIsDeleting(null))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            if (details[key].length !== 0) {\n              return (\n                <tr key={key}>\n                  <td>{key.replace('DD_', '')}</td>\n                  <td>\n                    {details[key].map((item: DataVaultContent) => (\n                      <div className=\"content-row\" key={item.id}>\n                        <div className=\"content\">\n                          <p>{item.content}</p>\n                        </div>\n                        <div className=\"options\">\n                          <button\n                            disabled={isLoading}\n                            className=\"icon edit\"\n                            onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                          >\n                            <img src={pencilIcon} alt=\"Edit item\" />\n                          </button>\n                          <button\n                            disabled={isLoading}\n                            className=\"icon delete\"\n                            onClick={() => setIsDeleting({ key, id: item.id })}>\n                            <img src={trashIcon} alt=\"Delete Item\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n              )\n            }\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n\n      <BinaryModal\n        show={isDeleting !== null}\n        onClose={() => setIsDeleting(null)}\n        onConfirm={() => isDeleting && handleDeleteItem(isDeleting)}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(`DD_${type.toUpperCase()}`, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{isError}</div>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient) => setDvClient(client)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport jwtDecode from 'jwt-decode'\n\ninterface CredentialViewInterface {\n  jwt: string\n}\n\nconst CredentialView: React.FC<CredentialViewInterface> = ({ jwt }) => {\n  const [showRaw, setShowRaw] = useState<boolean>(false)\n  const [error, setError] = useState<null | string>(null)\n  const [prettyJson, setPrettyJson] = useState<string>('')\n\n  useEffect(() => {\n    try {\n      setPrettyJson(JSON.stringify(jwtDecode(jwt), null, 2))\n    } catch (err) {\n      setError(err.message)\n      setShowRaw(true)\n    }\n  }, [jwt])\n\n  return (\n    <div className=\"content-row\">\n      <div className=\"content\">\n        {prettyJson && (\n          <div className=\"break-all\">\n            <textarea\n              defaultValue={prettyJson}\n              disabled={true}></textarea>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert error\">\n            <strong>Could not decode credential!</strong><br />\n            <em>The raw data is displayed below.</em>\n          </div>\n        )}\n\n        {showRaw && <div className=\"raw break-all\">{jwt}</div>}\n      </div>\n      {!error && (\n        <div className=\"options\">\n          <button className=\"icon raw\" onClick={() => setShowRaw(!showRaw)}>{showRaw ? 'Hide' : 'View'} Raw</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CredentialView\n","export default __webpack_public_path__ + \"static/media/credential.436c18a7.svg\";","import React from 'react'\nimport CredentialViewInterface from '../../../components/CredentialView/CredentialView'\nimport Panel from '../../../components/Panel/Panel'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport CredentialIcon from '../../../assets/images/icons/credential.svg'\n\ninterface CredentialDisplayInterface {\n  credentials: DataVaultKey\n}\n\nconst CredentialDisplay: React.FC<CredentialDisplayInterface> = ({ credentials }) => {\n  return (\n    <Panel title={<><img src={CredentialIcon} /> Credentials</>} className=\"display credentials\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(credentials).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>\n                  <ul>\n                    {credentials[key].map((item: DataVaultContent) =>\n                      <li key={item.id}><CredentialViewInterface jwt={item.content} /></li>)}\n                  </ul>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Panel>\n  )\n}\n\nexport default CredentialDisplay\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\nimport CredentialDisplay from './panels/CredentialDisplay'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, credentials, deleteValue, swapValue\n}) => {\n  const context = useContext(Web3ProviderContext)\n\n  const handleAdd = (key: string, content: string) =>\n    context.dvClient && addDeclarativeDetail(context.dvClient, key, content)\n  const handleDelete = (key: string, id: string) =>\n    context.dvClient && deleteValue(context.dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) =>\n    context.dvClient && swapValue(context.dvClient, key, content, id)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails addDeclarativeDetail={handleAdd} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <CredentialDisplay credentials={credentials} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.declarativeDetails,\n  credentials: state.datavault.credentials\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/defi'\nimport { isValidAddress } from 'rskjs-util'\nimport { truncateAddressDid } from '../../../formatters'\nimport BalanceRow from '../../../components/BalanceRow/BalanceRow'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport { getBalanceName } from '../../../config/getConfig'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  chainId: number\n  balance: number | null,\n  conversion: number | null,\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Assets\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup}>Watch Asset</button>}\n    >\n      {balance && (\n        <BalanceRow\n          name=\"Balance\"\n          className=\"defaultBalance\"\n          balance={balance}\n          symbol={getBalanceName(chainId)}\n          conversion={conversion || undefined}\n        />\n      )}\n\n      {tokens?.map((token: Token) =>\n        <BalanceRow\n          key={token.address}\n          name={token.name || `Custom token: ${truncateAddressDid(token.address)}`}\n          balance={token.balance}\n          symbol={token.symbol}\n          conversion={token.conversion}\n        />\n      )}\n\n      <EditValueModal\n        show={isAdding}\n        onClose={togglePopup}\n        disabled={isLoading}\n        error={isError}\n        strings={{\n          title: 'Add Token',\n          intro: 'Add an ERC20 or ERC721 token to the dashboard',\n          label: 'Token to add:',\n          placeholder: 'contract address',\n          submit: 'Add Token'\n        }}\n        onConfirm={addToken}\n      />\n    </Panel>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Token } from '../state/reducers/defi'\nimport Balance from './panels/Balance'\n\ninterface DeFiComponentInterface {\n  tokens: Token[]\n  chainId: number\n  balance: number | null\n  conversion: number | null\n  addCustomToken: (provider: any, tokenAddr: string) => any\n}\n\nconst DeFiComponent: React.FC<DeFiComponentInterface> = ({ tokens, chainId, balance, conversion, addCustomToken }) => (\n  <div className=\"content defi\">\n    <div className=\"container\">\n      <div className=\"column\">\n        <Balance\n          tokens={tokens}\n          addCustomToken={addCustomToken}\n          chainId={chainId}\n          balance={balance}\n          conversion={conversion}\n        />\n      </div>\n    </div>\n  </div>\n)\n\nexport default DeFiComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DeFiComponent from './DeFiComponent'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/defi'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  tokens: state.defi.tokens,\n  chainId: state.identity.chainId,\n  balance: state.defi.balance,\n  conversion: state.defi.conversion\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DeFiComponent)\n","import React, { useContext, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport DefiContainer from '../DeFi/DeFiContainer'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n      {screen === screens.DEFI && <DefiContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n  const returnValueOrEmpty = (key: string) => data[key] && data[key][0] ? data[key] : [{ id: '', content: '' }]\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.declarativeDetails)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport defiReducer, { DefiState } from './reducers/defi'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState\n  ethrdid: EtherdidState\n  defi: DefiState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  defi: defiReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}