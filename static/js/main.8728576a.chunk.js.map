{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/tokens.ts","storage/localStorage.ts","app/state/operations/tokens.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","app/Authenticated/components/Navigation.tsx","app/Authenticated/components/HeaderComponent.tsx","components/Loading/LoadingComponent.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","components/Modal/Modal.tsx","providerContext.tsx","app/Dashboard/panels/Balance.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","assets/images/icons/trash.svg","assets/images/icons/pencil.svg","components/Modal/BinaryModal.tsx","components/Modal/EditValueModal.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","app/DataVault/DataVaultComponent.tsx","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","assets/images/icons/persona.svg","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","getSetting","setting","Ethereum","Mainnet","Testnet","Local","Error","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","createDidFormat","includeEthr","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","tokensSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getTokenList","userAddress","TOKENS","getTokens","localTokens","concat","Array","isArray","getToken","onComplete","token","EthContract","ethContract","erc20abi","at","getCode","console","log","decimals","balanceOf","div","BN","pow","toNumber","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","storage","undefined","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","swapContentById","receiveStorageInformation","createClient","dataVaultConfig","DATAVAULT","getDataVault","DataVaultWebClient","serviceUrl","serviceDid","rpcPersonalSign","request","method","params","login","context","connect","setProvider","client","dataVaultClient","setDvClient","getKeys","keys","forEach","get","getStorageInformation","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","screens","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","Header","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","IDENTITY","LoadingComponent","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","title","headerRight","IdentityInformationPanel","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","onClose","Web3ProviderContext","React","createContext","dvClient","Web3ProviderElement","useState","initialContext","Provider","needHover","original","rounded","parseFloat","toFixed","SingleToken","Balance","isAdding","setIsAdding","newAddress","setNewAddress","isLoading","setIsLoading","isError","setIsError","useContext","togglePopup","type","onChange","evt","placeholder","disabled","isValidAddress","BarWrapper","BarProgress","ProgressBar","total","width","Math","ceil","style","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","DashboardScreen","changeScreen","IdentitySummary","identity","datavault","userAddr","tokenAddr","DasboardScreen","BinaryModal","onConfirm","onDeny","strings","text","deny","confirm","EditValueModal","initValue","inputType","editable","setEditable","sharedProps","useEffect","intro","label","submit","DeclarativeDetailsDisplay","details","deleteValue","swapValue","isDeleting","setIsDeleting","isEditing","setIsEditing","declarativeIcon","Object","pencilIcon","trashIcon","newValue","existingItem","finally","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","DataVaultComponent","declarativeDetails","create","createDataVaultContent","delete","deleteDataVaultContent","swap","swapDataVaultContent","DelegateComponent","delegates","addDelegate","isOwner","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","PersonaIcon","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","values","setValues","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","endsWith","ethrdid","callback","EthrDID","setDidOwner","delegateType","setAttribute","AuthenticatedComponent","screen","setScreen","HeaderComponent","DashboardContainer","DataVaultContainer","IdentityContainer","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","tokenReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8728576a.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  TOKENS = 'tokens',\n  DATAVAULT = 'dataVault'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 5777: return Local[setting]\n    default: throw new Error(`No setting for chainId ${chainId}`)\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getTokens = (chainId: number) => getSetting(chainId, SETTINGS.TOKENS)\nexport const getDataVault = (chainId: number) => getSetting(chainId, SETTINGS.DATAVAULT)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n * @param includeEthr include eth:, required for some did tools\n */\nexport const createDidFormat = (address: string, chainId: number, includeEthr?: boolean) => {\n  switch (chainId) {\n    case 1: return `did:${includeEthr ? 'ethr:' : ''}mainnet:${address}`\n    case 30: return `did:${includeEthr ? 'ethr:' : ''}rsk:${address}`\n    case 31: return `did:${includeEthr ? 'ethr:' : ''}rsk:testnet:${address}`\n    case 5777: return `did:${includeEthr ? 'ethr:' : ''}development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId, true)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0\n}\n\nexport interface TokenState {\n  tokens: Token[]\n}\n\nexport const initialState = {\n  tokens: []\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst tokensSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: TokenState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    }\n  }\n})\n\nexport const { addTokenData } = tokensSlice.actions\n\nexport default tokensSlice.reducer\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData } from '../reducers/tokens'\nimport { getTokens } from '../../../config/getConfig'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\n\nexport const getTokenList = (provider: any, chainId: string, userAddress: string) => (dispatch: Dispatch<any>) => {\n  const tokens = <string[]> getTokens(parseInt(chainId))\n  const localTokens = getValueFromLocalStorage(chainId, 'TOKEN') ? getValueFromLocalStorage(chainId, 'TOKEN') : []\n\n  const all = tokens?.concat(localTokens)\n  Array.isArray(all) && all.map((address: string) => {\n    dispatch(getToken(provider, address, userAddress))\n  })\n}\n\nexport const getToken = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getToken(provider, address, userAddress, onComplete))\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  data: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  data: {},\n  storage: undefined\n}\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state.data[key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.data[key] ? state.data[key].push(content) : state.data[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      state.data[key] = state.data[key].filter((item: DataVaultContent) => item.id !== id)\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.data[key] = state.data[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    }\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const dataVaultConfig = <{serviceUrl: string, serviceDid: string} | null> getDataVault(chainId)\n\n  return dataVaultConfig\n    ? new DataVaultWebClient({\n      serviceUrl: dataVaultConfig.serviceUrl,\n      serviceDid: dataVaultConfig.serviceDid,\n      did: createDidFormat(address, chainId, true),\n      rpcPersonalSign: (data: string) => provider.request({ method: 'personal_sign', params: [address, data] })\n    })\n    : null\n}\n\n/**\n * Get all keys and data from the datavault\n * @param client DataVault client\n * @param did DID of the user, required for getting individual key content\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, did: string) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) =>\n      keys.forEach((key: string) =>\n        client.get({ did, key })\n          .then((content: any) => content as DataVaultContent[])\n          .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n      )\n    )\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Returns storage information from DataVault\n * @param client DataVault client\n */\nexport const getStorageInformation = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => dispatch(receiveStorageInformation({ storage })))\n","import { Dispatch } from 'react'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getTokenList } from './tokens'\nimport { createClient, getDataVaultContent, getStorageInformation } from './datavault'\nimport { createDidFormat } from '../../../formatters'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, chainId, address))\n\n      const dataVaultClient = createClient(provider, address, chainId)\n      context.setDvClient(dataVaultClient)\n\n      dataVaultClient && dispatch(getDataVaultContent(dataVaultClient, createDidFormat(address, chainId, true)))\n      dataVaultClient && dispatch(getStorageInformation(dataVaultClient))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  visibility: hidden;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity .6s;\n  max-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover + ${HoverSpan} {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <>\n    <HoverTrigger className={className}>{children}</HoverTrigger>\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </>\n)\n\nexport default ToolTip\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'active' : ''}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface HeaderComponentInterface {\n  did: string | null\n  chainId?: number | null\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId }) => (\n  <header className=\"container\">\n    <div className=\"column branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      {did && (\n        <h1 className=\"persona\">\n          <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n        </h1>\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  did?: string\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ did }) =>\n  !did ? <LoadingComponent />\n    : (\n      <div className=\"container\">\n        <div className=\"column\">\n          <Panel\n            title=\"Persona information\"\n            className=\"identity-information\"\n          >\n            <div className=\"container\">\n              <div className=\"column\">\n                <h2>Persona Address</h2>\n                <p className=\"value\">\n                  <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                </p>\n              </div>\n            </div>\n          </Panel>\n        </div>\n      </div>\n    )\n\nexport default IdentityInformationPanel\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient) => setDvClient(client)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Modal from '../../../components/Modal/Modal'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/tokens'\nimport { isValidAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst needHover = (original: number | null | undefined) => {\n  if (!original) { return original }\n  const rounded = parseFloat(original.toFixed(8))\n  return rounded === original ? original : <ToolTip hoverContent={original}>{rounded}</ToolTip>\n}\n\nconst SingleToken: React.FC<{ token: Token, key: any }> = ({ token }) => (\n  <div className=\"token\">\n    <div className=\"heading-symbol\">\n      {token.name || `Custom token: ${truncateAddressDid(token.address)}`}</div>\n    <div>\n      <span className=\"balance\">{needHover(token.balance)}</span>\n      <span className=\"symbol\">{token.symbol}</span>\n    </div>\n  </div>\n)\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Identity Balance\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup} className=\"circle-plus\">+</button>}\n    >\n      {tokens?.map((token: Token) => <SingleToken key={token.address} token={token} />)}\n\n      <Modal show={isAdding} title=\"Add token\" onClose={togglePopup}>\n        <p>Add an ERC20 or ERC721 token to the dashboard.</p>\n        <p>\n          <strong>Token to Add:</strong>\n          <input\n            type=\"text\"\n            value={newAddress}\n            onChange={evt => setNewAddress(evt.target.value)}\n            placeholder=\"contract address\"\n            className=\"line\"\n            disabled={isLoading}\n          />\n        </p>\n        <BaseButton\n          onClick={addToken}\n          className=\"blue\"\n          disabled={isLoading}\n        >Add Token</BaseButton>\n        {isError && <p>{isError}</p>}\n      </Modal>\n    </Panel>\n  )\n}\n\nexport default Balance\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={handleButton} className=\"turquoise panel-button\">DataVault</BaseButton>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport Balance from './panels/Balance'\nimport { Token } from '../state/reducers/tokens'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport { createDidFormat } from '../../formatters'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  tokens?: Token[]\n  storage?: DataVaultStorageState\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addCustomToken: (provider: any, tokenAddr: string) => any\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, tokens, addCustomToken, changeScreen, storage\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      <IdentitySummary\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n      />\n      <div className=\"container\">\n        <div className=\"column\">\n          <Balance tokens={tokens} addCustomToken={addCustomToken} />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/tokens'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.tokens.tokens,\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue }) => {\n  interface DeleteItemI { key: string; id: string }\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<null | DeleteItemI>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n\n  const handleDeleteItem = (item: DeleteItemI) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(item.key, item.id)\n      .then(() => setIsDeleting(null))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            if (details[key].length !== 0) {\n              return (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>\n                    {details[key].map((item: DataVaultContent) => (\n                      <div className=\"content-row\" key={item.id}>\n                        <div className=\"content\">\n                          <p>{item.content}</p>\n                        </div>\n                        <div className=\"options\">\n                          <button\n                            disabled={isLoading}\n                            className=\"icon edit\"\n                            onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                          >\n                            <img src={pencilIcon} alt=\"Edit item\" />\n                          </button>\n                          <button\n                            disabled={isLoading}\n                            className=\"icon delete\"\n                            onClick={() => setIsDeleting({ key, id: item.id })}>\n                            <img src={trashIcon} alt=\"Delete Item\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n              )\n            }\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n\n      <BinaryModal\n        show={isDeleting !== null}\n        onClose={() => setIsDeleting(null)}\n        onConfirm={() => isDeleting && handleDeleteItem(isDeleting)}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(type, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{isError}</div>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, deleteValue, swapValue\n}) => {\n  const context = useContext(Web3ProviderContext)\n\n  const handleAdd = (key: string, content: string) =>\n    context.dvClient && addDeclarativeDetail(context.dvClient, key, content)\n  const handleDelete = (key: string, id: string) =>\n    context.dvClient && deleteValue(context.dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) =>\n    context.dvClient && swapValue(context.dvClient, key, content, id)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails addDeclarativeDetail={handleAdd} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.data\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId, true)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n\n  return (\n    <>\n      <HeaderComponent chainId={chainId} did={address} />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId\n})\n\nexport default connect(mapStateToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport tokenReducer, { TokenState } from './reducers/tokens'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState,\n  ethrdid: EtherdidState,\n  tokens: TokenState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  tokens: tokenReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}