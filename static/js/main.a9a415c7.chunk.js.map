{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/tokens.ts","storage/localStorage.ts","app/state/operations/tokens.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/Authenticated/components/Navigation.tsx","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","components/Panel/Panel.tsx","app/Dashboard/panels/IdentitySummary.tsx","providerContext.tsx","app/Dashboard/panels/Balance.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","components/Modal/EditValueModal.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","components/CredentialView/CredentialView.tsx","assets/images/icons/credential.svg","app/DataVault/panels/CredentialDisplay.tsx","app/DataVault/DataVaultComponent.tsx","app/DataVault/DataVaultContainer.ts","assets/images/icons/delegate.svg","app/Identity/components/DelegateComponent.tsx","app/Identity/components/OwnerComponent.tsx","assets/images/icons/key.svg","app/Identity/components/PublicKeys.tsx","assets/images/icons/computer.svg","app/Identity/components/ServiceEndPoints.tsx","app/Identity/IdentityComponent.tsx","app/Identity/IdentityContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","transactionListener","tx","userCallback","eth","checkInterval","setInterval","getTransactionReceipt","response","clearInterval","result","transactionHash","error","status","catch","err","message","getSetting","setting","Ethereum","Mainnet","Testnet","Local","Error","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","createDidFormat","truncateAddressDid","value","lastIndexOf","slice","length","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","tokensSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getTokenList","userAddress","TOKENS","getTokens","localTokens","concat","Array","isArray","getToken","onComplete","token","EthContract","ethContract","erc20abi","at","getCode","console","log","decimals","balanceOf","div","BN","pow","toNumber","addCustomToken","reject","json","setItem","stringify","saveToLocalStorage","toString","declarativeDetails","credentials","storage","undefined","dataVaultSlice","receiveKeyData","content","endsWith","addContentToKey","removeContentfromKey","swapContentById","receiveStorageInformation","createClient","dataVaultConfig","DATAVAULT","getDataVault","DataVaultWebClient","serviceUrl","serviceDid","rpcPersonalSign","request","method","params","createDataVaultContent","client","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","login","context","connect","setProvider","dataVaultClient","setDvClient","getKeys","keys","forEach","get","getStorageInformation","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","screens","LoadingComponent","EditPersonaModal","initValue","updatePersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","changeInputValue","evt","useEffect","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","IDENTITY","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","IdentityInformationPanel","Web3ProviderContext","React","createContext","dvClient","Web3ProviderElement","initialContext","Provider","needHover","original","rounded","parseFloat","toFixed","SingleToken","Balance","isAdding","setIsAdding","newAddress","setNewAddress","useContext","togglePopup","isValidAddress","BarWrapper","BarProgress","ProgressBar","total","Math","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","DashboardScreen","changeScreen","IdentitySummary","identity","datavault","userAddr","tokenAddr","DasboardScreen","BinaryModal","onConfirm","onDeny","strings","text","deny","confirm","EditValueModal","inputType","editable","setEditable","sharedProps","intro","label","submit","DeclarativeDetailsDisplay","details","deleteValue","swapValue","isDeleting","setIsDeleting","isEditing","setIsEditing","declarativeIcon","Object","replace","pencilIcon","trashIcon","newValue","existingItem","finally","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","toUpperCase","CredentialView","jwt","showRaw","setShowRaw","setError","prettyJson","setPrettyJson","jwtDecode","defaultValue","CredentialDisplay","CredentialIcon","DataVaultComponent","DelegateComponent","delegates","addDelegate","isOwner","resetState","DelegateIcon","delegate","ethereumAddress","newDelegate","isValidChecksumAddress","indexOf","OwnerComponent","owner","changeOwner","ownerDid","newOwner","PublicAttributes","publicKeys","addKey","defaults","algorithm","purpose","encoding","validity","KeyIcon","pk","publicKeyBase64","publicKeyHex","htmlFor","ServiceEndPoints","endpoints","addEndpoint","url","computerIcon","endpoint","serviceEndpoint","IdentityComponent","service","addAttribute","handleAddAttribute","PublicKeys","getOwnerFromDidDoc","controller","ethrdid","callback","EthrDID","setDidOwner","delegateType","setAttribute","AuthenticatedComponent","modifyMultipleItems","screen","setScreen","HeaderComponent","items","DashboardContainer","DataVaultContainer","IdentityContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","tokenReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a9a415c7.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  TOKENS = 'tokens',\n  DATAVAULT = 'dataVault'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 5777: return Local[setting]\n    default: throw new Error(`No setting for chainId ${chainId}`)\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getTokens = (chainId: number) => getSetting(chainId, SETTINGS.TOKENS)\nexport const getDataVault = (chainId: number) => getSetting(chainId, SETTINGS.DATAVAULT)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n\nexport interface transactionListenerI { result?: string, error?: string }\n\nexport const transactionListener = (provider: any, tx: string, userCallback: any) => {\n  const eth = new Eth(provider)\n\n  const checkInterval = setInterval(() =>\n    eth.getTransactionReceipt(tx)\n      .then((response: any) => {\n        if (response) {\n          clearInterval(checkInterval)\n          return userCallback({\n            result: response.transactionHash,\n            error: parseInt(response.status) !== 1 ? 'Transaction Recepit Failed' : null\n          })\n        }\n      })\n      .catch((err: Error) => userCallback({ error: err.message }))\n  , 2000)\n}\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:mainnet:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork, transactionListener, transactionListenerI } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\n/**\n * Add Delegate to a persona\n * @param provider web3 provider\n * @param delegate address of the new delegate\n */\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Add Attribute to DID Document\n * @param provider web3 provider\n * @param type attribute type\n * @param value value\n * @param validity time in seconds valid, optional, defaults to 86400 seconds, or 1 day\n */\nexport const addAttribute = (provider: any, type: string, value: string, validity?: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const callback = (response: transactionListenerI) =>\n      response.error ? reject(response.error) : resolve(dispatch(resolveDidDocument(provider)))\n\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .setAttribute(type, value, validity)\n        .then((tx: string) => transactionListener(provider, tx, callback))\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0\n}\n\nexport interface TokenState {\n  tokens: Token[]\n}\n\nexport const initialState = {\n  tokens: []\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst tokensSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: TokenState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    }\n  }\n})\n\nexport const { addTokenData } = tokensSlice.actions\n\nexport default tokensSlice.reducer\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData } from '../reducers/tokens'\nimport { getTokens } from '../../../config/getConfig'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\n\nexport const getTokenList = (provider: any, chainId: string, userAddress: string) => (dispatch: Dispatch<any>) => {\n  const tokens = <string[]> getTokens(parseInt(chainId))\n  const localTokens = getValueFromLocalStorage(chainId, 'TOKEN') ? getValueFromLocalStorage(chainId, 'TOKEN') : []\n\n  const all = tokens?.concat(localTokens)\n  Array.isArray(all) && all.map((address: string) => {\n    dispatch(getToken(provider, address, userAddress))\n  })\n}\n\nexport const getToken = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getToken(provider, address, userAddress, onComplete))\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  declarativeDetails: {},\n  credentials: {},\n  storage: undefined\n}\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      if (key.endsWith('Credential')) {\n        state.credentials[key] = content\n      } else {\n        state.declarativeDetails[key] = content\n      }\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.declarativeDetails[key] ? state.declarativeDetails[key].push(content) : state.declarativeDetails[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].filter((item: DataVaultContent) => item.id !== id)\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.declarativeDetails[key] = state.declarativeDetails[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    }\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const dataVaultConfig = <{serviceUrl: string, serviceDid: string} | null> getDataVault(chainId)\n\n  return dataVaultConfig\n    ? new DataVaultWebClient({\n      serviceUrl: dataVaultConfig.serviceUrl,\n      serviceDid: dataVaultConfig.serviceDid,\n      did: createDidFormat(address, chainId),\n      rpcPersonalSign: (data: string) => provider.request({ method: 'personal_sign', params: [address, data] })\n    })\n    : null\n}\n\n/**\n * Get all keys and data from the datavault\n * @param client DataVault client\n * @param did DID of the user, required for getting individual key content\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, did: string) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) =>\n      keys.forEach((key: string) =>\n        client.get({ did, key })\n          .then((content: any) => content as DataVaultContent[])\n          .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n      )\n    )\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Returns storage information from DataVault\n * @param client DataVault client\n */\nexport const getStorageInformation = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => dispatch(receiveStorageInformation({ storage })))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n","import { Dispatch } from 'react'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getTokenList } from './tokens'\nimport { createClient, getDataVaultContent, getStorageInformation } from './datavault'\nimport { createDidFormat } from '../../../formatters'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, chainId, address))\n\n      const dataVaultClient = createClient(provider, address, chainId)\n      context.setDvClient(dataVaultClient)\n\n      dataVaultClient && dispatch(getDataVaultContent(dataVaultClient, createDidFormat(address, chainId)))\n      dataVaultClient && dispatch(getStorageInformation(dataVaultClient))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  visibility: hidden;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity .6s;\n  max-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover + ${HoverSpan} {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <>\n    <HoverTrigger className={className}>{children}</HoverTrigger>\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.f3d51fc5.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault',\n  IDENTITY = 'identity'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'active' : ''}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className={selected === screens.IDENTITY ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.IDENTITY)}>Manage Identity</button>\n        </li>\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  useEffect(() => {\n    setIsError(null)\n    setIsLoading(false)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n  }, [initValue])\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={() => setShowModal(true)}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        <div>\n          <h2>Edit Persona</h2>\n          {truncateAddressDid(did)}\n          <p>You can edit your personal that be saved in your data vault.</p>\n\n          <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n          <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n          <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n          <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n          <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n          <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n          <p>\n            <BaseButton\n              className=\"save blue\"\n              onClick={save}\n              disabled={isLoading}\n            >Save</BaseButton></p>\n\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== ''\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React from 'react'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface IdentityInformationPanelI {\n  did?: string\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ did }) =>\n  !did ? <LoadingComponent />\n    : (\n      <div className=\"container\">\n        <div className=\"column\">\n          <Panel\n            title=\"Persona information\"\n            className=\"identity-information\"\n          >\n            <div className=\"container\">\n              <div className=\"column\">\n                <h2>Persona Address</h2>\n                <p className=\"value\">\n                  <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n                </p>\n              </div>\n            </div>\n          </Panel>\n        </div>\n      </div>\n    )\n\nexport default IdentityInformationPanel\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient) => setDvClient(client)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Modal from '../../../components/Modal/Modal'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/tokens'\nimport { isValidAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst needHover = (original: number | null | undefined) => {\n  if (!original) { return original }\n  const rounded = parseFloat(original.toFixed(8))\n  return rounded === original ? original : <ToolTip hoverContent={original}>{rounded}</ToolTip>\n}\n\nconst SingleToken: React.FC<{ token: Token, key: any }> = ({ token }) => (\n  <div className=\"token\">\n    <div className=\"heading-symbol\">\n      {token.name || `Custom token: ${truncateAddressDid(token.address)}`}</div>\n    <div>\n      <span className=\"balance\">{needHover(token.balance)}</span>\n      <span className=\"symbol\">{token.symbol}</span>\n    </div>\n  </div>\n)\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Identity Balance\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup} className=\"circle-plus\">+</button>}\n    >\n      {tokens?.map((token: Token) => <SingleToken key={token.address} token={token} />)}\n\n      <Modal show={isAdding} title=\"Add token\" onClose={togglePopup}>\n        <p>Add an ERC20 or ERC721 token to the dashboard.</p>\n        <p>\n          <strong>Token to Add:</strong>\n          <input\n            type=\"text\"\n            value={newAddress}\n            onChange={evt => setNewAddress(evt.target.value)}\n            placeholder=\"contract address\"\n            className=\"line\"\n            disabled={isLoading}\n          />\n        </p>\n        <BaseButton\n          onClick={addToken}\n          className=\"blue\"\n          disabled={isLoading}\n        >Add Token</BaseButton>\n        {isError && <p>{isError}</p>}\n      </Modal>\n    </Panel>\n  )\n}\n\nexport default Balance\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={handleButton} className=\"turquoise panel-button\">DataVault</BaseButton>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\nimport IdentitySummary from './panels/IdentitySummary'\nimport Balance from './panels/Balance'\nimport { Token } from '../state/reducers/tokens'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\nimport { createDidFormat } from '../../formatters'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  tokens?: Token[]\n  storage?: DataVaultStorageState\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addCustomToken: (provider: any, tokenAddr: string) => any\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, tokens, addCustomToken, changeScreen, storage\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      <IdentitySummary\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n      />\n      <div className=\"container\">\n        <div className=\"column\">\n          <Balance tokens={tokens} addCustomToken={addCustomToken} />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { addCustomToken } from '../state/operations/tokens'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.tokens.tokens,\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport LoadingComponent from '../Loading/LoadingComponent'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  isLoading?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, isLoading, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {isLoading && <LoadingComponent />}\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue }) => {\n  interface DeleteItemI { key: string; id: string }\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<null | DeleteItemI>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n\n  const handleDeleteItem = (item: DeleteItemI) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(item.key, item.id)\n      .then(() => setIsDeleting(null))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            if (details[key].length !== 0) {\n              return (\n                <tr key={key}>\n                  <td>{key.replace('DD_', '')}</td>\n                  <td>\n                    {details[key].map((item: DataVaultContent) => (\n                      <div className=\"content-row\" key={item.id}>\n                        <div className=\"content\">\n                          <p>{item.content}</p>\n                        </div>\n                        <div className=\"options\">\n                          <button\n                            disabled={isLoading}\n                            className=\"icon edit\"\n                            onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                          >\n                            <img src={pencilIcon} alt=\"Edit item\" />\n                          </button>\n                          <button\n                            disabled={isLoading}\n                            className=\"icon delete\"\n                            onClick={() => setIsDeleting({ key, id: item.id })}>\n                            <img src={trashIcon} alt=\"Delete Item\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n              )\n            }\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n\n      <BinaryModal\n        show={isDeleting !== null}\n        onClose={() => setIsDeleting(null)}\n        onConfirm={() => isDeleting && handleDeleteItem(isDeleting)}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(`DD_${type.toUpperCase()}`, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{isError}</div>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useEffect, useState } from 'react'\nimport jwtDecode from 'jwt-decode'\n\ninterface CredentialViewInterface {\n  jwt: string\n}\n\nconst CredentialView: React.FC<CredentialViewInterface> = ({ jwt }) => {\n  const [showRaw, setShowRaw] = useState<boolean>(false)\n  const [error, setError] = useState<null | string>(null)\n  const [prettyJson, setPrettyJson] = useState<string>('')\n\n  useEffect(() => {\n    try {\n      setPrettyJson(JSON.stringify(jwtDecode(jwt), null, 2))\n    } catch (err) {\n      setError(err.message)\n      setShowRaw(true)\n    }\n  }, [jwt])\n\n  return (\n    <div className=\"content-row\">\n      <div className=\"content\">\n        {prettyJson && (\n          <div className=\"break-all\">\n            <textarea\n              defaultValue={prettyJson}\n              disabled={true}></textarea>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"alert error\">\n            <strong>Could not decode credential!</strong><br />\n            <em>The raw data is displayed below.</em>\n          </div>\n        )}\n\n        {showRaw && <div className=\"raw break-all\">{jwt}</div>}\n      </div>\n      {!error && (\n        <div className=\"options\">\n          <button className=\"icon raw\" onClick={() => setShowRaw(!showRaw)}>{showRaw ? 'Hide' : 'View'} Raw</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default CredentialView\n","export default __webpack_public_path__ + \"static/media/credential.436c18a7.svg\";","import React from 'react'\nimport CredentialViewInterface from '../../../components/CredentialView/CredentialView'\nimport Panel from '../../../components/Panel/Panel'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport CredentialIcon from '../../../assets/images/icons/credential.svg'\n\ninterface CredentialDisplayInterface {\n  credentials: DataVaultKey\n}\n\nconst CredentialDisplay: React.FC<CredentialDisplayInterface> = ({ credentials }) => {\n  return (\n    <Panel title={<><img src={CredentialIcon} /> Credentials</>} className=\"display credentials\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(credentials).map((key: string) => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>\n                  <ul>\n                    {credentials[key].map((item: DataVaultContent) =>\n                      <li key={item.id}><CredentialViewInterface jwt={item.content} /></li>)}\n                  </ul>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </Panel>\n  )\n}\n\nexport default CredentialDisplay\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\nimport CredentialDisplay from './panels/CredentialDisplay'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  credentials: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, credentials, deleteValue, swapValue\n}) => {\n  const context = useContext(Web3ProviderContext)\n\n  const handleAdd = (key: string, content: string) =>\n    context.dvClient && addDeclarativeDetail(context.dvClient, key, content)\n  const handleDelete = (key: string, id: string) =>\n    context.dvClient && deleteValue(context.dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) =>\n    context.dvClient && swapValue(context.dvClient, key, content, id)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails addDeclarativeDetail={handleAdd} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n          />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <CredentialDisplay credentials={credentials} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.declarativeDetails,\n  credentials: state.datavault.credentials\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","export default __webpack_public_path__ + \"static/media/delegate.618299c9.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport DelegateIcon from '../../../assets/images/icons/delegate.svg'\n\ninterface DelegateComponentInterface {\n  delegates?: PublicKey[] | null\n  chainId?: number | null\n  addDelegate: (delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = (newDelegate: string) => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.ethereumAddress?.indexOf(newDelegate.toLowerCase()) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(newDelegate)\n      .then(() => {\n        setIsAdding(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsAdding(false)\n      resetState()\n    }\n  }\n\n  return (\n    <Panel\n      title={<><img src={DelegateIcon} /> Delegate Identity</>}\n      headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Delegate</button>}\n    >\n      <h2>Delegates</h2>\n      <ul className=\"value\">\n        {delegates?.length === 0 && <li><em>No delegates for this persona.</em></li>}\n        {delegates?.map((delegate: PublicKey) => {\n          if (!delegate.ethereumAddress || !chainId) return <></>\n          const did = createDidFormat(delegate.ethereumAddress, chainId)\n          return (\n            <li key={did}>\n              <ToolTip hoverContent={did}>{truncateAddressDid(did)}</ToolTip>\n            </li>\n          )\n        })}\n      </ul>\n\n      <EditValueModal\n        show={isAdding}\n        onClose={handleClose}\n        className=\"delegate-identity\"\n        onConfirm={handleAddDelegate}\n        disabled={isLoading}\n        error={isError}\n        initValue=''\n        isLoading={isLoading}\n        strings={{\n          title: 'Delegate Identity',\n          intro: 'Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.',\n          label: 'Delegate to',\n          submit: 'Add delegate',\n          placeholder: 'Address'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useState } from 'react'\nimport { createDidFormat, truncateAddressDid } from '../../../formatters'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport Panel from '../../../components/Panel/Panel'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = (newOwner: string) => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(newOwner)\n      .then(() => {\n        setIsEditing(false)\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setIsEditing(false)\n      resetState()\n    }\n  }\n\n  const ownerDid = owner && chainId && createDidFormat(owner, chainId)\n\n  return (\n    <Panel\n      title={<><img src={PersonaIcon} /> Persona owner</>}\n      headerRight={isOwner && <button onClick={() => setIsEditing(true)}>Transfer</button>}\n    >\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {ownerDid && <ToolTip hoverContent={ownerDid}>{truncateAddressDid(ownerDid)}</ToolTip>}\n      </p>\n\n      <EditValueModal\n        show={isEditing}\n        className=\"change-owner\"\n        onConfirm={handleSetOwner}\n        onClose={handleClose}\n        disabled={isLoading}\n        isLoading={isLoading}\n        error={isError}\n        initValue={''}\n        strings={{\n          title: 'Transfer Persona Owner',\n          intro: 'Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.',\n          label: 'Transfer to',\n          placeholder: 'address',\n          submit: 'Transfer'\n        }}\n      />\n    </Panel>\n  )\n}\n\nexport default OwnerComponent\n","export default __webpack_public_path__ + \"static/media/key.6bad30f3.svg\";","import React, { useState } from 'react'\nimport { PublicKey } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport KeyIcon from '../../../assets/images/icons/key.svg'\n\ninterface PublicAttributesInterface {\n  addKey: (type: string, value: string, validity: number) => Promise<any>\n  publicKeys?: PublicKey[]\n  isOwner: boolean\n}\n\nconst PublicAttributes: React.FC<PublicAttributesInterface> = ({ publicKeys, addKey, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n\n  const defaults = ({\n    algorithm: 'secp256k1',\n    purpose: 'veriKey',\n    encoding: 'hex',\n    validity: '86400',\n    value: ''\n  })\n\n  const [values, setValues] = useState<{algorithm: string, purpose: string, encoding: string, validity: string, value: string}>(defaults)\n\n  const handleAddKey = () => {\n    if (values.value === '') {\n      return setIsError('Value can not be empty')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n    addKey(`did/pub/${values.algorithm}/${values.purpose}/${values.encoding}`, values.value, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const sharedProps = (id: string) => ({\n    id,\n    className: 'line',\n    onChange: (evt: { target: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value })\n  })\n\n  return (\n    <>\n      <Panel\n        title={<><img src={KeyIcon} /> Public Keys</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Public Key</button>}\n      >\n        <h2>Public Keys</h2>\n        <ul>\n          {(!publicKeys || publicKeys.length === 0) && <li><em>No public keys</em></li>}\n          {publicKeys?.map((pk: PublicKey) => (\n            <li key={pk.id}><strong>{pk.type}</strong><br /> {pk.publicKeyBase64 || pk.publicKeyHex}</li>\n          ))}\n        </ul>\n      </Panel>\n      <Modal title=\"Add Public Key\" show={isAdding} onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label>Key Algorithm</label>\n            <select {...sharedProps('algorithm')} value={values.algorithm}>\n              <option value=\"secp256k1\">secp256k1</option>\n              <option value=\"rsa\">RSA</option>\n              <option value=\"Ed25519\">Ed25519</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"purpose\">Key Purpose</label>\n            <select {...sharedProps('purpose')} value={values.purpose}>\n              <option value=\"veriKey\">veriKey</option>\n              <option value=\"sigAuth\">sigAuth</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"encoding\">Encoding</label>\n            <select {...sharedProps('encoding')} value={values.encoding}>\n              <option value=\"hex\">hex</option>\n              <option value=\"base64\">base64</option>\n            </select>\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} type=\"text\" value={values.validity} />\n          </p>\n          <p>\n            <label>Key</label>\n            <textarea {...sharedProps('value')}></textarea>\n          </p>\n\n          <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddKey}>Add Public Key</BaseButton>\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </fieldset>\n      </Modal>\n    </>\n  )\n}\n\nexport default PublicAttributes\n","export default __webpack_public_path__ + \"static/media/computer.de8f038b.svg\";","import React, { useState } from 'react'\nimport { ServiceEndpoint } from 'did-resolver'\nimport Panel from '../../../components/Panel/Panel'\nimport Modal from '../../../components/Modal/Modal'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport computerIcon from '../../../assets/images/icons/computer.svg'\n\ninterface ServiceEndPointsInterface {\n  endpoints?: ServiceEndpoint[],\n  addEndpoint: (name: string, url: string, validity: number) => Promise<any>\n  isOwner: boolean\n}\n\nconst ServiceEndPoints: React.FC<ServiceEndPointsInterface> = ({ endpoints, addEndpoint, isOwner }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const defaults = { name: '', url: '', validity: '86400' }\n  const [values, setValues] = useState<{ name: string, url: string, validity: string}>(defaults)\n\n  const sharedProps = (id: string) => ({\n    type: 'text',\n    className: 'line',\n    id,\n    onChange: (evt: { target: HTMLInputElement }) =>\n      setValues({ ...values, [evt.target.id]: evt.target.value }),\n    disabled: isLoading,\n    placeholder: id\n  })\n\n  const handleAddEndpoint = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (values.name === '' || values.url === '') {\n      setIsLoading(false)\n      return setIsError('Name and URL are required fields.')\n    }\n\n    if (values.name.indexOf(' ') !== -1) {\n      setIsLoading(false)\n      return setIsError('Name should not contain spaces.')\n    }\n\n    addEndpoint(`did/svc/${values.name}`, values.url, parseInt(values.validity))\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n        setValues(defaults)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <>\n      <Panel\n        title={<><img src={computerIcon} /> Service Endpoints</>}\n        headerRight={isOwner && <button onClick={() => setIsAdding(true)}>Add Endpoint</button>}\n      >\n        <h2>Active Endpoints</h2>\n        <ul>\n          {(!endpoints || endpoints?.length === 0) && <li><em>No service endpoints setup.</em></li>}\n          {endpoints?.map((endpoint: ServiceEndpoint) => (\n            <li className=\"endpoint\" key={endpoint.id || endpoint.type}>\n              <strong>{endpoint.type}</strong> - {endpoint.serviceEndpoint}\n            </li>\n          ))}\n        </ul>\n      </Panel>\n\n      <Modal show={isAdding} title=\"Add Service Endpoint\" onClose={() => setIsAdding(false)}>\n        <fieldset>\n          <p>\n            <label htmlFor=\"name\">Name</label>\n            <input {...sharedProps('name')} value={values.name} />\n          </p>\n          <p>\n            <label htmlFor=\"url\">URL</label>\n            <input {...sharedProps('url')} value={values.url} />\n          </p>\n          <p>\n            <label htmlFor=\"validity\">Validity <span>(in seconds)</span></label>\n            <input {...sharedProps('validity')} value={values.validity} />\n          </p>\n        </fieldset>\n        <BaseButton className=\"submit\" disabled={isLoading} onClick={handleAddEndpoint}>Add Endpoint</BaseButton>\n        {isError && <div className=\"alert error\">{isError}</div>}\n        {isLoading && <LoadingComponent />}\n      </Modal>\n    </>\n  )\n}\n\nexport default ServiceEndPoints\n","import { PublicKey, ServiceEndpoint } from 'did-resolver'\nimport React, { useContext } from 'react'\nimport DelegateComponent from './components/DelegateComponent'\nimport OwnerComponent from './components/OwnerComponent'\nimport { Web3ProviderContext } from '../../providerContext'\nimport PublicKeys from './components/PublicKeys'\nimport ServiceEndPoints from './components/ServiceEndPoints'\n\ninterface IdentityComponentInterface {\n  owner?: string | null\n  address: string\n  chainId?: number | null\n  delegates?: PublicKey[]\n  service?: ServiceEndpoint[]\n  publicKeys?: PublicKey[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addAttribute: (provider: any, type: string, value: string, validity: number) => any\n}\n\nconst IdentityComponent: React.FC<IdentityComponentInterface> = ({\n  owner, address, chainId, delegates, service, publicKeys, changeOwner, addDelegate, addAttribute\n}) => {\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  const context = useContext(Web3ProviderContext)\n\n  const handleChangeOwner = (newOwner: string) => changeOwner(context?.provider, newOwner)\n  const handleAddDelegate = (delegate: string) => addDelegate(context?.provider, delegate)\n  const handleAddAttribute = (type: string, value: string, validity: number) =>\n    addAttribute(context?.provider, type, value, validity)\n\n  return (\n    <div className=\"content identity\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <OwnerComponent owner={owner} chainId={chainId} isOwner={isOwner} changeOwner={handleChangeOwner} />\n        </div>\n        <div className=\"column\">\n          <DelegateComponent delegates={delegates} chainId={chainId} addDelegate={handleAddDelegate} isOwner={isOwner} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <PublicKeys publicKeys={publicKeys} addKey={handleAddAttribute} isOwner={isOwner} />\n        </div>\n        <div className=\"column\">\n          <ServiceEndPoints endpoints={service} addEndpoint={handleAddAttribute} isOwner={isOwner} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport { AnyAction } from 'redux'\nimport { DIDDocument, PublicKey } from 'did-resolver'\nimport IdentityComponent from './IdentityComponent'\nimport { stateInterface } from '../state/configureStore'\nimport { setDidOwner, addDelegate, addAttribute } from '../state/operations/ethrdid'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => !pk.id.endsWith('controller')),\n  service: state.ethrdid.didDocument.service,\n  publicKeys: state.ethrdid.didDocument.publicKey?.filter((pk: PublicKey) => pk.publicKeyBase64 || pk.publicKeyHex)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addAttribute: (provider: any, type: string, value: string, validity: number) =>\n    dispatch(addAttribute(provider, type, value, validity))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IdentityComponent)\n","import React, { useContext, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport IdentityContainer from '../Identity/IdentityContainer'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n      {screen === screens.IDENTITY && <IdentityContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n  const returnValueOrEmpty = (key: string) => data[key] && data[key][0] ? data[key] : [{ id: '', content: '' }]\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.declarativeDetails)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport tokenReducer, { TokenState } from './reducers/tokens'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState,\n  ethrdid: EtherdidState,\n  tokens: TokenState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  tokens: tokenReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}