{"version":3,"sources":["components/Buttons.tsx","config/getConfig.ts","assets/images/rif-id-manager.svg","app/Login/LoginScreenComponent.tsx","ethrpc.ts","features/rLogin.ts","app/state/reducers/identity.ts","app/state/reducers/ethrdid.ts","formatters.ts","features/resolverConfig.ts","app/state/operations/ethrdid.ts","app/state/reducers/tokens.ts","storage/localStorage.ts","app/state/operations/tokens.ts","app/state/reducers/datavault.ts","app/state/operations/datavault.ts","app/state/operations/identity.ts","app/Login/LoginScreenContainer.ts","assets/images/rif-id-manager-gray.svg","components/NetworkStatus/NetworkStatus.tsx","components/Tooltip/Tooltip.tsx","components/UserIcon/UserIcon.tsx","components/Modal/Modal.tsx","assets/images/icons/persona.svg","assets/images/icons/pencil.svg","components/Loading/LoadingComponent.tsx","app/Authenticated/components/Navigation.tsx","app/DataVault/components/EditPersonaModal.tsx","app/Authenticated/components/HeaderComponent.tsx","components/Panel/Panel.tsx","providerContext.tsx","components/EthrDid/DelegateComponent.tsx","components/EthrDid/OwnerComponent.tsx","app/Dashboard/panels/IdentityInformation.tsx","app/Dashboard/panels/Balance.tsx","assets/images/icons/data-vault.svg","components/ProgressBar/ProgressBar.tsx","app/Dashboard/panels/DataVaultSummary.tsx","app/Dashboard/DashboardScreen.tsx","app/Dashboard/DashboardContainer.ts","assets/images/icons/declarative-details.svg","assets/images/icons/trash.svg","components/Modal/BinaryModal.tsx","components/Modal/EditValueModal.tsx","app/DataVault/panels/DeclarativeDetailsDisplay.tsx","assets/images/icons/upload.svg","app/DataVault/panels/AddDeclarativeDetails.tsx","app/DataVault/DataVaultComponent.tsx","app/DataVault/DataVaultContainer.ts","app/Authenticated/AuthenticatedComponent.tsx","app/Authenticated/AuthenticatedContainer.ts","assets/images/powered-by-iov.svg","assets/images/powered-by-iov-gray.svg","components/RifFooter/RifFooter.tsx","app/App.tsx","reportWebVitals.ts","app/state/configureStore.ts","index.tsx"],"names":["SETTINGS","BaseButton","styled","button","LoginScreenComponent","handleLogin","className","src","logo","alt","onClick","href","target","rel","getNetwork","provider","Eth","net_version","getAccounts","accounts","getAccountAndNetwork","Promise","all","then","chainId","parseInt","getSetting","setting","Ethereum","Mainnet","Testnet","Local","Error","getDIDRegistryAddress","ETHR_DID_CONTRACT","getRPCUrl","RPC_URL","rLogin","RLogin","cachedProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","1","30","31","5777","supportedChains","identitySlice","createSlice","name","initialState","address","reducers","changeAccount","state","payload","changeChainId","actions","ethrDidSlice","didDocument","id","publicKey","authentication","resolveDid","data","displayIdentity","addr","slice","length","createDidFormat","truncateAddressDid","value","lastIndexOf","lastIndex","resolverProviderConfig","networks","registry","rpcUrl","resolveDidDocument","dispatch","resolve","didResolver","Resolver","getResolver","did","tokenInitialState","symbol","balance","tokensSlice","tokens","addTokenData","formattedPayload","toLowerCase","filter","item","push","map","LOCAL_STORAGE_KEY","getValueFromLocalStorage","key","settings","localStorage","getItem","JSON","parse","getTokenList","userAddress","TOKENS","getTokens","localTokens","concat","Array","isArray","getToken","onComplete","eth","token","EthContract","ethContract","erc20abi","at","getCode","result","catch","err","console","log","message","decimals","balanceOf","div","BN","pow","toNumber","addCustomToken","reject","response","json","setItem","stringify","saveToLocalStorage","toString","storage","undefined","dataVaultSlice","receiveKeyData","content","addContentToKey","removeContentfromKey","swapContentById","receiveStorageInformation","createClient","dataVaultConfig","DATAVAULT","getDataVault","DataVaultWebClient","serviceUrl","serviceDid","rpcPersonalSign","request","method","params","createDataVaultContent","client","create","deleteDataVaultContent","delete","swapDataVaultContent","swap","login","context","connect","setProvider","dataVaultClient","setDvClient","getKeys","keys","forEach","get","getStorageInformation","stateProps","dispatchProps","ownProps","NetworkStatusWrapper","span","NetworkLight","connected","chainIdToName","NetworkStatus","HoverSpan","HoverTrigger","ToolTip","hoverContent","children","UserIcon","size","circle","display","background","border","padding","margin","height","width","borderRadius","Identicon","format","saturation","style","ModalLightbox","show","ModalBody","ModalTitle","ModalCloseButton","ModalContent","Modal","title","onClose","screens","LoadingComponent","EditPersonaModal","initValue","updatePersona","useState","showModal","setShowModal","isLoading","setIsLoading","isError","setIsError","email","idnumber","phone","birthdate","values","setValues","changeInputValue","evt","useEffect","DD_NAME","DD_EMAIL","DD_ADDRESS","DD_IDNUMBER","DD_PHONE","DD_BIRTHDATE","dynamicProps","type","placeholder","onChange","disabled","PencilIcon","PersonaIcon","valueDifferentFromInit","prepareData","Header","persona","hasDataVault","rifIdManager","Navigation","selected","showDataVault","handleClick","DASHBOARD","PanelWrapper","PanelHeader","PanelTitle","p","PanelRight","PanelContent","Panel","headerRight","Web3ProviderContext","React","createContext","dvClient","Web3ProviderElement","initialContext","Provider","DelegateComponent","delegates","addDelegate","isOwner","add","setAdd","newDelegate","setNewDelegate","useContext","resetState","delegate","indexOf","isValidAddress","isValidChecksumAddress","OwnerComponent","owner","changeOwner","edit","setEdit","newOwner","setNewOwner","IdentityInformationPanel","isAdvanced","setIsAdvanced","advancedToggle","needHover","original","rounded","parseFloat","toFixed","SingleToken","Balance","isAdding","setIsAdding","newAddress","setNewAddress","togglePopup","BarWrapper","BarProgress","ProgressBar","total","Math","ceil","DataVaultSummary","handleButton","datavaultIcon","used","available","toLocaleString","DashboardScreen","changeScreen","IdentityInformation","getOwnerFromDidDoc","controller","pk","endsWith","ethereumAddress","identity","ethrdid","datavault","EthrDID","setDidOwner","delegateType","userAddr","tokenAddr","DasboardScreen","BinaryModal","onConfirm","onDeny","strings","text","deny","confirm","EditValueModal","error","inputType","editable","setEditable","sharedProps","intro","label","submit","DeclarativeDetailsDisplay","details","deleteValue","swapValue","isDeleting","setIsDeleting","isEditing","setIsEditing","declarativeIcon","Object","pencilIcon","trashIcon","newValue","existingItem","finally","handleEditItem","AddDeclarativeDetails","addDeclarativeDetail","setType","setContent","uploadIcon","DataVaultComponent","declarativeDetails","AuthenticatedComponent","modifyMultipleItems","screen","setScreen","HeaderComponent","items","DashboardContainer","DataVaultContainer","getPersonaDeclarativeDetails","returnValueOrEmpty","promiseArray","action","RifFooter","isLoggedIn","version","poweredGray","powered","App","AuthenticatedContainer","LoginScreenContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","createLogger","rootReducer","combineReducers","identityReducer","ethrdidReducer","tokenReducer","dataVaultReducer","configureStore","prelodedState","createStore","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a205ba72.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const BaseButton = styled.button`\n  border-radius: 5px;\n  padding: 10px 50px;\n  font-size: 18px;\n  border: none;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n`\n","/* eslint-disable no-unused-vars */\nimport Ethereum from './config.ethereum.json'\nimport Mainnet from './config.mainnet.json'\nimport Testnet from './config.testnet.json'\nimport Local from './config.local.json'\n\nexport enum SETTINGS {\n  ETHR_DID_CONTRACT = 'ethrDid',\n  RPC_URL = 'rpcUrl',\n  TOKENS = 'tokens',\n  DATAVAULT = 'dataVault'\n}\n\nconst getSetting = (chainId: number, setting: SETTINGS) => {\n  switch (chainId) {\n    case 1: return Ethereum[setting]\n    case 30: return Mainnet[setting]\n    case 31: return Testnet[setting]\n    case 5777: return Local[setting]\n    default: throw new Error(`No setting for chainId ${chainId}`)\n  }\n}\n\nexport const getDIDRegistryAddress = (chainId: number) => getSetting(chainId, SETTINGS.ETHR_DID_CONTRACT)\nexport const getRPCUrl = (chainId: number) => getSetting(chainId, SETTINGS.RPC_URL)\nexport const getTokens = (chainId: number) => getSetting(chainId, SETTINGS.TOKENS)\nexport const getDataVault = (chainId: number) => getSetting(chainId, SETTINGS.DATAVAULT)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager.7afc1cbb.svg\";","import React from 'react'\nimport { BaseButton } from '../../components/Buttons'\nimport logo from '../../assets/images/rif-id-manager.svg'\n\ninterface LoginScreenInterface {\n  handleLogin: () => void\n}\n\nconst LoginScreenComponent: React.FC<LoginScreenInterface> = ({ handleLogin }) => {\n  return (\n    <div className=\"container login-screen\">\n      <div className=\"column\">\n        <img src={logo} alt=\"RIF identity Manager\" />\n        <h1>Sign in</h1>\n        <BaseButton className=\"blue\" onClick={handleLogin}>Connect your wallet</BaseButton>\n        <p>\n          {'Don\\'t have a wallet? '}\n          <a href=\"https://developers.rsk.co/wallet/use/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Download here\n          </a>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreenComponent\n","import Eth from 'ethjs-query'\n\nexport const getNetwork = (provider: any) => new Eth(provider).net_version()\nexport const getAccounts = (provider: any) => new Eth(provider).accounts()\n\nexport const getAccountAndNetwork = (provider: any) =>\n  Promise.all([\n    getAccounts(provider).then((accounts: string[]) => accounts[0]),\n    getNetwork(provider).then((chainId: string) => parseInt(chainId))\n  ])\n","import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { getRPCUrl } from '../config/getConfig'\n\nexport const rLogin = new RLogin({\n  cachedProvider: false,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        rpc: {\n          1: getRPCUrl(1),\n          30: getRPCUrl(30),\n          31: getRPCUrl(31),\n          5777: getRPCUrl(5777)\n        }\n      }\n    }\n  },\n  supportedChains: [1, 30, 31, 5777]\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface IdentityState {\n  address: string\n  chainId: number | null\n}\n\ninterface ChangeAccountPayload {\n  address: string\n}\n\ninterface ChangeChainIdPayload {\n  chainId: number\n}\n\nexport const initialState: IdentityState = {\n  address: '',\n  chainId: null\n}\n\nconst identitySlice = createSlice({\n  name: 'identity',\n  initialState,\n  reducers: {\n    changeAccount (state: IdentityState, { payload: { address } }: PayloadAction<ChangeAccountPayload>) {\n      state.address = address\n    },\n    changeChainId (state: IdentityState, { payload: { chainId } }: PayloadAction<ChangeChainIdPayload>) {\n      state.chainId = chainId\n    }\n  }\n})\n\nexport const { changeAccount, changeChainId } = identitySlice.actions\n\nexport default identitySlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DIDDocument } from 'did-resolver'\n\nexport interface EtherdidState {\n  didDocument: DIDDocument\n}\n\ninterface ResolveDidPayload {\n  data: DIDDocument\n}\n\nexport const initialState: EtherdidState = {\n  didDocument: {\n    '@context': 'https://w3id.org/did/v1',\n    id: '',\n    publicKey: [],\n    authentication: []\n  }\n}\n\nconst ethrDidSlice = createSlice({\n  name: 'ethrdid',\n  initialState,\n  reducers: {\n    resolveDid (state: EtherdidState, { payload: { data } }: PayloadAction<ResolveDidPayload>) {\n      state.didDocument = data\n    }\n  }\n})\n\nexport const { resolveDid } = ethrDidSlice.actions\n\nexport default ethrDidSlice.reducer\n","/**\n * Creates address and truncates it\n * @param address address for the did\n * @param chainId chainId\n */\nexport const displayIdentity = (address: string, chainId?: number) => {\n  const addr = `${address.slice(0, 6)}...${address.slice(address.length - 4)}`\n  switch (chainId) {\n    case 1: return `did:eth:${addr}`\n    case 30: return `did:ethr:rsk:${addr}`\n    case 31: return `did:ethr:rsk:testnet:${addr}`\n    default: return addr\n  }\n}\n\n/**\n * Create Identity\n * @param address address for the did\n * @param chainId chainId\n\n */\nexport const createDidFormat = (address: string, chainId: number) => {\n  switch (chainId) {\n    case 1: return `did:ethr:mainnet:${address}`\n    case 30: return `did:ethr:rsk:${address}`\n    case 31: return `did:ethr:rsk:testnet:${address}`\n    case 5777: return `did:ethr:development:${address}`\n    default: return address\n  }\n}\n\n/**\n * Truncates a DID or an Address\n * @param value DID or Address to be truncated\n */\nexport const truncateAddressDid = (value: string) => {\n  if (value.lastIndexOf(':') === -1) {\n    return `${value.slice(0, 6)}...${value.slice(value.length - 4)}`\n  }\n\n  const lastIndex = value.lastIndexOf(':')\n  return `${value.slice(0, lastIndex)}${value.slice(lastIndex, lastIndex + 7)}...${value.slice(value.length - 4)}`\n}\n","import { getDIDRegistryAddress, getRPCUrl } from '../config/getConfig'\n\nexport const resolverProviderConfig = {\n  networks: [\n    { name: 'mainnet', registry: getDIDRegistryAddress(1), rpcUrl: getRPCUrl(1) },\n    { name: 'rsk', registry: getDIDRegistryAddress(30), rpcUrl: getRPCUrl(30) },\n    { name: 'rsk:testnet', registry: getDIDRegistryAddress(31), rpcUrl: getRPCUrl(31) },\n    { name: 'development', registry: getDIDRegistryAddress(5777), rpcUrl: getRPCUrl(5777) }\n  ]\n}\n","import { Dispatch } from 'react'\nimport EthrDID from '@rsksmart/ethr-did'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { resolveDid } from '../reducers/ethrdid'\nimport { getResolver } from 'ethr-did-resolver'\nimport { DIDDocument, Resolver } from 'did-resolver'\nimport { getDIDRegistryAddress } from '../../../config/getConfig'\nimport { createDidFormat } from '../../../formatters'\nimport { resolverProviderConfig } from '../../../features/resolverConfig'\n\nconst Secp256k1VerificationKey2018 = '0x73696741757468'\n\n/**\n * Set the owner in the DID Registry. Can only be set by the owner.\n * @param provider web3 provider\n * @param newOwner new owner of the DID\n */\nexport const setDidOwner = (provider: any, newOwner: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .changeOwner(newOwner.toLowerCase())\n        .then(() => resolve(dispatch(resolveDidDocument(provider))))\n        .catch((err: Error) => reject(err))\n    )\n  })\n\n/**\n * Resolve an address. Returns a DIDDocument\n * @param provider web3 provider\n */\nexport const resolveDidDocument = (provider: any) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      const didResolver = new Resolver(getResolver(resolverProviderConfig))\n\n      const did = createDidFormat(address, chainId)\n      didResolver.resolve(did).then((data: DIDDocument) => resolve(dispatch(resolveDid({ data }))))\n    })\n  })\n\nexport const addDelegate = (provider: any, delegate: string) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    getAccountAndNetwork(provider).then(([address, chainId]) =>\n      new EthrDID({\n        address: address,\n        provider,\n        registry: getDIDRegistryAddress(parseInt(chainId))\n      })\n        .addDelegate(delegate, {\n          delegateType: Secp256k1VerificationKey2018\n        })\n        .then((response: any) => {\n          dispatch(resolveDidDocument(provider))\n          resolve(response)\n        })\n        .catch((err: Error) => reject(err))\n    )\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface Token {\n  address: string,\n  name?: string | null,\n  symbol?: string | null,\n  balance?: number | null\n}\n\nexport const tokenInitialState: Token = {\n  address: '',\n  name: null,\n  symbol: null,\n  balance: 0\n}\n\nexport interface TokenState {\n  tokens: Token[]\n}\n\nexport const initialState = {\n  tokens: []\n}\n\ninterface addTokenDataPayload {\n  data: Token\n}\n\nconst tokensSlice = createSlice({\n  name: 'tokens',\n  initialState,\n  reducers: {\n    addTokenData (state: TokenState, { payload: { data } }: PayloadAction<addTokenDataPayload>) {\n      const formattedPayload = { ...data, address: data.address.toLowerCase() }\n      if (state.tokens.filter((item: Token) => item.address === formattedPayload.address).length === 0) {\n        state.tokens.push({ ...tokenInitialState, ...formattedPayload })\n      } else {\n        state.tokens = state.tokens.map((item: Token) =>\n          (item.address === formattedPayload.address) ? { ...item, ...formattedPayload } : item)\n      }\n    }\n  }\n})\n\nexport const { addTokenData } = tokensSlice.actions\n\nexport default tokensSlice.reducer\n","const LOCAL_STORAGE_KEY = 'id-manager-settings'\n\nexport const saveToLocalStorage = (chainId: string, key: string, value: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n\n  const json = settings ? JSON.parse(settings) : {}\n  if (!json[key]) {\n    json[key] = []\n  }\n  json[key].push(value)\n\n  localStorage.setItem(`${LOCAL_STORAGE_KEY}-${chainId}`, JSON.stringify(json))\n}\n\nexport const getValueFromLocalStorage = (chainId: string, key: string) => {\n  const settings = localStorage.getItem(`${LOCAL_STORAGE_KEY}-${chainId}`)\n  if (!settings) { return null }\n\n  const json = JSON.parse(settings)\n  return json[key] || null\n}\n","import { Dispatch } from 'react'\nimport Eth from 'ethjs-query'\nimport EthContract from 'ethjs-contract'\nimport BN from 'bn.js'\nimport erc20abi from './erc20.json'\nimport { addTokenData } from '../reducers/tokens'\nimport { getTokens } from '../../../config/getConfig'\nimport { saveToLocalStorage, getValueFromLocalStorage } from '../../../storage/localStorage'\n\nexport const getTokenList = (provider: any, chainId: string, userAddress: string) => (dispatch: Dispatch<any>) => {\n  const tokens = <string[]> getTokens(parseInt(chainId))\n  const localTokens = getValueFromLocalStorage(chainId, 'TOKEN') ? getValueFromLocalStorage(chainId, 'TOKEN') : []\n\n  const all = tokens?.concat(localTokens)\n  Array.isArray(all) && all.map((address: string) => {\n    dispatch(getToken(provider, address, userAddress))\n  })\n}\n\nexport const getToken = (provider: any, address: string, userAddress: string, onComplete?: any) => (dispatch: Dispatch<any>) => {\n  const eth = new Eth(provider)\n  const ethContract = new EthContract(eth)\n  const token = ethContract(erc20abi).at(address)\n\n  eth.getCode(address).then((result: string) => {\n    if (result === '0x0') {\n      return onComplete && onComplete(new Error('The address is not a contract'))\n    }\n\n    token.symbol().then((symbol: string[]) => symbol[0])\n      .then((symbol: string) => dispatch(addTokenData({ data: { address, symbol } })))\n      .catch((err: Error) => console.log('symbol', err.message))\n\n    token.name().then((name: string) => name[0])\n      .then((name: string) => dispatch(addTokenData({ data: { address, name } })))\n      .catch((err: Error) => console.log('name', err.message))\n\n    token.decimals().then((decimals: BN[]) => decimals[0])\n      .then((decimals: BN) => {\n        token.balanceOf(userAddress)\n          .then((balance: BN[]) => balance[0])\n          .then((balance: BN) => balance.div(new BN(10).pow(decimals)).toNumber())\n          .then((balance: number) => {\n            balance !== 0 && dispatch(addTokenData({ data: { address, balance } }))\n            onComplete && onComplete(true)\n          })\n          .catch((err: Error) => console.log('balanceOf error', err))\n      })\n      .catch(() => onComplete && onComplete(new Error('The address is a contract but not ERC20 or ERC721 token.')))\n  })\n}\n\nexport const addCustomToken = (provider: any, userAddress: string, address: string, chainId: number) => (dispatch: Dispatch<any>) =>\n  new Promise((resolve, reject) => {\n    const onComplete = (response: any) =>\n      response instanceof Error\n        ? reject(response)\n        : resolve(saveToLocalStorage(chainId.toString(), 'TOKEN', address))\n\n    dispatch(getToken(provider, address, userAddress, onComplete))\n  })\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface DataVaultContent {\n  id: string,\n  content: string\n}\n\nexport interface DataVaultKey {\n  [key: string]: DataVaultContent[]\n}\n\ninterface ReceivePayLoad {\n  key: string,\n  content: DataVaultContent[]\n}\n\ninterface SwapPayLoad {\n  key: string,\n  id: string,\n  content: string\n}\n\nexport interface DataVaultStorageState {\n  used: number,\n  available: number,\n}\n\nexport interface DataVaultState {\n  data: DataVaultKey\n  storage?: DataVaultStorageState\n}\n\nexport const initialState: DataVaultState = {\n  data: {},\n  storage: undefined\n}\n\nconst dataVaultSlice = createSlice({\n  name: 'datavault',\n  initialState,\n  reducers: {\n    receiveKeyData (state: DataVaultState, { payload: { key, content } }: PayloadAction<ReceivePayLoad>) {\n      state.data[key] = content\n    },\n    addContentToKey (state: DataVaultState, { payload: { key, content } }: PayloadAction<{ key: string, content: DataVaultContent }>) {\n      state.data[key] ? state.data[key].push(content) : state.data[key] = [content]\n    },\n    removeContentfromKey (state: DataVaultState, { payload: { key, id } }: PayloadAction<{ key: string, id: string }>) {\n      state.data[key] = state.data[key].filter((item: DataVaultContent) => item.id !== id)\n    },\n    swapContentById (state: DataVaultState, { payload: { key, id, content } }: PayloadAction<SwapPayLoad>) {\n      state.data[key] = state.data[key].map((item: DataVaultContent) => item.id === id ? { ...item, content } : item)\n    },\n    receiveStorageInformation (state: DataVaultState, { payload: { storage } }: PayloadAction<{ storage: DataVaultStorageState }>) {\n      state.storage = storage\n    }\n  }\n})\n\nexport const { receiveKeyData, addContentToKey, removeContentfromKey, swapContentById, receiveStorageInformation } = dataVaultSlice.actions\n\nexport default dataVaultSlice.reducer\n","import { Dispatch } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { createDidFormat } from '../../../formatters'\nimport { addContentToKey, DataVaultContent, receiveKeyData, removeContentfromKey, swapContentById, receiveStorageInformation, DataVaultStorageState, DataVaultKey } from '../reducers/datavault'\nimport { getDataVault } from '../../../config/getConfig'\nimport { CreateContentResponse } from '@rsksmart/ipfs-cpinner-client/lib/types'\n\n/**\n * Create DataVault Clinet\n * @param provider web3 provider\n * @param address address of the user\n * @param chainId chainId of the network to create the DID\n */\nexport const createClient = (provider: any, address: string, chainId: number) => {\n  const dataVaultConfig = <{serviceUrl: string, serviceDid: string} | null> getDataVault(chainId)\n\n  return dataVaultConfig\n    ? new DataVaultWebClient({\n      serviceUrl: dataVaultConfig.serviceUrl,\n      serviceDid: dataVaultConfig.serviceDid,\n      did: createDidFormat(address, chainId),\n      rpcPersonalSign: (data: string) => provider.request({ method: 'personal_sign', params: [address, data] })\n    })\n    : null\n}\n\n/**\n * Get all keys and data from the datavault\n * @param client DataVault client\n * @param did DID of the user, required for getting individual key content\n */\nexport const getDataVaultContent = (client: DataVaultWebClient, did: string) => (dispatch: Dispatch<any>) =>\n  client.getKeys()\n    .then((keys: string[]) =>\n      keys.forEach((key: string) =>\n        client.get({ did, key })\n          .then((content: any) => content as DataVaultContent[])\n          .then((content: DataVaultContent[]) => dispatch(receiveKeyData({ key, content })))\n      )\n    )\n\n/**\n * Create Datavault content to an existing key or a new key\n * @param client DataVault client\n * @param key DV key\n * @param content content to be inserted\n */\nexport const createDataVaultContent = (client: DataVaultWebClient, key: string, content: string) => (dispatch: Dispatch<any>) =>\n  client.create({ key, content })\n    .then((result: CreateContentResponse) => result.id)\n    .then((id: string) => dispatch(addContentToKey({ key, content: { id, content } })))\n\n/**\n * Delete item from the datavault with its key and id\n * @param client DataVault client\n * @param key Key of the object\n * @param id ID of the content\n */\nexport const deleteDataVaultContent = (client: DataVaultWebClient, key: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.delete({ key, id })\n    .then(() => dispatch(removeContentfromKey({ key, id })))\n\n/**\n * Swap content in the datavault by key, and Id\n * @param client DataVault client\n * @param key Key of object\n * @param content New content\n * @param id id of the content\n */\nexport const swapDataVaultContent = (client: DataVaultWebClient, key: string, content: string, id: string) => (dispatch: Dispatch<any>) =>\n  client.swap({ key, content, id })\n    .then(() => dispatch(swapContentById({ key, id, content })))\n\n/**\n * Returns storage information from DataVault\n * @param client DataVault client\n */\nexport const getStorageInformation = (client: DataVaultWebClient) => (dispatch: Dispatch<any>) =>\n  client.getStorageInformation()\n    .then((storage: DataVaultStorageState) => dispatch(receiveStorageInformation({ storage })))\n    .catch((err: Error) => console.log('could not get storage', err))\n\n/**\n * Helper function that loops through DataVault items and decides if key & value should be created, updated, or removed\n * @param client DataVault Client\n * @param item Key/Value DataVault pair where KEY is the DV KEY and VALUE is an array of DataVaultContent\n */\nexport const modifyMultipleItems = (client: DataVaultWebClient, values: DataVaultKey) => (dispatch: Dispatch<any>) => {\n  // eslint-disable-next-line prefer-const\n  let promiseArray: Promise<any>[] = []\n\n  Object.keys(values).map((key: string) =>\n    values[key].map((item: DataVaultContent) => {\n      let action: any\n      if (item.id === '' && item.content !== '') {\n        action = () => dispatch(createDataVaultContent(client, key, item.content))\n      } else if (item.id !== '' && item.content !== '') {\n        action = () => dispatch(swapDataVaultContent(client, key, item.content, item.id))\n      } else if (item.id !== '' && item.content === '') {\n        action = () => dispatch(deleteDataVaultContent(client, key, item.id))\n      }\n\n      promiseArray.push(new Promise((resolve) => { resolve(action()) }))\n    })\n  )\n\n  return Promise.all(promiseArray)\n}\n","import { Dispatch } from 'react'\nimport { getAccountAndNetwork } from '../../../ethrpc'\nimport { rLogin } from '../../../features/rLogin'\n\nimport { changeAccount, changeChainId } from '../reducers/identity'\nimport { resolveDidDocument } from './ethrdid'\nimport { getTokenList } from './tokens'\nimport { createClient, getDataVaultContent, getStorageInformation } from './datavault'\nimport { createDidFormat } from '../../../formatters'\n\n/**\n * Login into web3 provider via rLogin\n * Saves the web3 provider into context and saves address and chainId to redux\n * @param context the app context where the provider will be ser\n */\nexport const login = (context: any) => (dispatch: Dispatch<any>) =>\n  rLogin.connect().then((provider: any) => {\n    context.setProvider(provider)\n\n    getAccountAndNetwork(provider).then(([address, chainId]) => {\n      dispatch(changeAccount({ address }))\n      dispatch(changeChainId({ chainId: parseInt(chainId) }))\n\n      dispatch(resolveDidDocument(provider))\n      dispatch(getTokenList(provider, chainId, address))\n\n      const dataVaultClient = createClient(provider, address, chainId)\n      context.setDvClient(dataVaultClient)\n\n      dataVaultClient && dispatch(getDataVaultContent(dataVaultClient, createDidFormat(address, chainId)))\n      dataVaultClient && dispatch(getStorageInformation(dataVaultClient))\n    })\n  })\n    .catch((err: string) => console.log('rLogin Error', err))\n","import { connect } from 'react-redux'\nimport LoginScreenComponent from './LoginScreenComponent'\nimport { login } from '../state/operations/identity'\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  handleLogin: (context: any) => dispatch(login(context))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  handleLogin: () => dispatchProps.handleLogin(ownProps.context)\n})\n\nexport default connect(null, mapDispatchToProps, mergeProps)(LoginScreenComponent)\n","export default __webpack_public_path__ + \"static/media/rif-id-manager-gray.d70174d8.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nconst NetworkStatusWrapper = styled.span`\n  display: inline-block;\n  border: 1px solid #fff;\n  border-radius: 25px;\n  padding:6px 18px !important;\n  color: #6C6B6C;\n  opacity: 1 !important;\n  border: 1px solid #CCCACD;\n  width: auto;\n`\n\n// eslint-disable-next-line no-undef\nconst NetworkLight = styled.div<{connected: boolean}>`\n  position: relative;\n  margin-left: 8px;\n  padding-left: 3px;\n  &:before {\n    position: absolute;\n    right: 98%;\n    top: 45%;\n    transform: translate(-5px, -50%);\n    content: \"\";\n    display: block;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: ${({ connected }) => (connected ? '#40d512' : '#DC3545')};\n  }\n`\n\nexport interface NetworkStatusInterface {\n  connected: boolean;\n  name?: string;\n  chainId?: number;\n}\n\nexport const chainIdToName = (chainId: number) => {\n  switch (chainId) {\n    case 1: return 'Ethereum'\n    case 30: return 'RSK Mainnet'\n    case 31: return 'RSK Testnet'\n    default: return `Network Id ${chainId.toString()}`\n  }\n}\n\nconst NetworkStatus: React.FC<NetworkStatusInterface> = ({ connected, name, chainId }) => {\n  return (\n    <NetworkStatusWrapper className={connected ? 'connected' : 'disconnected'}>\n      <NetworkLight connected={connected}>\n        {chainId ? chainIdToName(chainId) : name}\n      </NetworkLight>\n    </NetworkStatusWrapper>\n  )\n}\n\nexport default NetworkStatus\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface TooltipInterface {\n  children: ReactNode\n  hoverContent: string | ReactNode\n  className?: string\n}\n\nconst HoverSpan = styled.span`\n  visibility: hidden;\n  position: absolute;\n  background-color: #555;\n  color: #fff;\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 6px;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity .6s;\n  max-width: 250px;\n  word-break: break-all;\n`\n\nconst HoverTrigger = styled.span`\n  position: relative;\n  display: inline-block;\n  cursor: help;\n  margin-right: 20px;\n  &:hover + ${HoverSpan} {\n    visibility: visible;\n    opacity: 1;\n  }\n`\n\nconst ToolTip: React.FC<TooltipInterface> = ({ hoverContent, children, className }) => (\n  <>\n    <HoverTrigger className={className}>{children}</HoverTrigger>\n    <HoverSpan className=\"hover-content\">{hoverContent}</HoverSpan>\n  </>\n)\n\nexport default ToolTip\n","import React from 'react'\nimport Identicon from 'identicon.js'\n\ninterface UserIconInterface {\n  value: string\n  size?: number\n}\n\nconst UserIcon: React.FC<UserIconInterface> = ({ value, size }) => {\n  const options = {\n    format: 'svg',\n    background: [71, 196, 225, 255],\n    margin: '.22',\n    saturation: '.8'\n  }\n\n  const circle = {\n    display: 'inline-block',\n    background: '#FFFFFF',\n    border: '2px solid #919191',\n    padding: '2px',\n    margin: '0',\n    height: `${size || 50}px`,\n    width: `${size || 50}px`,\n    borderRadius: '50%'\n  }\n\n  return (\n    <img\n      src={`data:image/svg+xml;base64,${new Identicon(value, options).toString()}`}\n      alt={value}\n      className=\"user-icon\"\n      style={circle}\n    />\n  )\n}\n\nexport default UserIcon\n","/* eslint-disable no-unused-vars */\nimport React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalLightboxProps {\n  show: boolean;\n}\n\n// eslint-disable-next-line no-undef\nexport const ModalLightbox = styled.div<ModalLightboxProps>`\nfont-family: Rubik;\ntransition: opacity 0.1s ease-in-out;\ntext-align: center;\nposition: fixed;\nwidth: 100vw;\nheight: 100vh;\nmargin-left: -50vw;\ntop: 0;\nleft: 50%;\nz-index: 2;\nwill-change: opacity;\nbackground-color: rgba(0, 0, 0, 0.4);\nopacity: 1;\nvisibility: ${({ show }) => (show ? 'visible' : 'hidden')};\npointer-events: ${({ show }) => (show ? 'auto' : 'none')};\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& * {\n  box-sizing: border-box !important;\n}\n`\n\nconst ModalBody = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  background: #ffffff;\n  border-radius: 20px;\n  overflow: hidden;\n`\n\nconst ModalTitle = styled.div`\n  background: #F2F2F2;\n  font-size: 16px;\n  padding: 15px 0\n`\n\nconst ModalCloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  color: #C4C4C4;\n  font-size: 2em;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: 300;\n  &:after {\n    content: '\\\\d7';\n  }\n`\n\nconst ModalContent = styled.div`\n  background: #ffffff;\n  padding: 0 20px 15px 20px;\n`\n\ninterface PanelInterface {\n  children: ReactNode\n  show: boolean\n  title?: string | ReactNode\n  className?: string\n  onClose: () => void\n}\n\nconst Modal: React.FC<PanelInterface> = ({ children, show, title, className, onClose }) => (\n  show\n    ? (\n      <ModalLightbox show={show} className={className}>\n        <ModalBody>\n          <ModalTitle className=\"modal-title\">\n            {title}\n            <ModalCloseButton className=\"close\" onClick={onClose} />\n          </ModalTitle>\n          <ModalContent className=\"modal-content\">\n            {children}\n          </ModalContent>\n        </ModalBody>\n      </ModalLightbox>\n    )\n    : <></>\n)\n\nexport default Modal\n","export default __webpack_public_path__ + \"static/media/persona.c976fd79.svg\";","export default __webpack_public_path__ + \"static/media/pencil.afa201a1.svg\";","import styled from 'styled-components'\n\n// reference: https://projects.lukehaas.me/css-loaders/\n\nconst LoadingComponent = styled.div`\n  color: #47C4E1;\n  font-size: 15px;\n  margin: 50px auto;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation: load4 1.3s infinite linear;\n  animation: load4 1.3s infinite linear;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n\n  @-webkit-keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n  @keyframes load4 {\n    0%,\n    100% {\n      box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;\n    }\n    12.5% {\n      box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    25% {\n      box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;\n    }\n    37.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    50% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;\n    }\n    62.5% {\n      box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;\n    }\n    75% {\n      box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;\n    }\n    87.5% {\n      box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;\n    }\n  }\n`\n\nexport default LoadingComponent\n","/* eslint-disable no-unused-vars */\nimport React from 'react'\n\nexport enum screens {\n  DASHBOARD = 'dashboard',\n  DATAVAULT = 'datavault'\n}\n\ninterface NavigationInterface {\n  selected: string\n  handleClick: (screen: screens) => void\n  showDataVault?: boolean\n}\n\nconst Navigation: React.FC<NavigationInterface> = ({ selected, showDataVault, handleClick }) => (\n  <div className=\"container\">\n    <div className=\"column\">\n      <ul className=\"navigation\">\n        <li className={selected === screens.DASHBOARD ? 'active' : ''}>\n          <button onClick={() => handleClick(screens.DASHBOARD)}>Dashboard</button>\n        </li>\n        {showDataVault && (\n          <li className={selected === screens.DATAVAULT ? 'active' : ''}>\n            <button onClick={() => handleClick(screens.DATAVAULT)}>Data Vault</button>\n          </li>\n        )}\n        <li className=\"disabled\">Request Credentials</li>\n        <li className=\"disabled\">My Dapps</li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default Navigation\n","import React, { useEffect, useState } from 'react'\nimport Modal from '../../../components/Modal/Modal'\nimport PersonaIcon from '../../../assets/images/icons/persona.svg'\nimport PencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { truncateAddressDid } from '../../../formatters'\nimport { BaseButton } from '../../../components/Buttons'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface EditPersonaModalInterface {\n  did?: string\n  initValue: DataVaultKey\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst EditPersonaModal: React.FC<EditPersonaModalInterface> = ({ did, initValue, updatePersona }) => {\n  if (!did) {\n    return <></>\n  }\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n  const [values, setValues] = useState<{ name: string, email: string, address: string, idnumber: string, phone: string, birthdate: string}>({\n    name: '',\n    email: '',\n    address: '',\n    idnumber: '',\n    phone: '',\n    birthdate: ''\n  })\n\n  const changeInputValue = (evt: { target: HTMLInputElement }) =>\n    setValues({ ...values, [evt.target.id]: evt.target.value })\n\n  useEffect(() => {\n    setIsError(null)\n    setIsLoading(false)\n\n    setValues({\n      name: initValue.DD_NAME[0].content,\n      email: initValue.DD_EMAIL[0].content,\n      address: initValue.DD_ADDRESS[0].content,\n      idnumber: initValue.DD_IDNUMBER[0].content,\n      phone: initValue.DD_PHONE[0].content,\n      birthdate: initValue.DD_BIRTHDATE[0].content\n    })\n  }, [initValue])\n\n  const save = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    const valueDifferentFromInit = (key: string, content: string) =>\n      (initValue[key][0].content !== content) ? [{ ...initValue[key][0], content }] : []\n\n    const prepareData = {\n      DD_NAME: valueDifferentFromInit('DD_NAME', values.name),\n      DD_EMAIL: valueDifferentFromInit('DD_EMAIL', values.email),\n      DD_ADDRESS: valueDifferentFromInit('DD_ADDRESS', values.address),\n      DD_IDNUMBER: valueDifferentFromInit('DD_IDNUMBER', values.idnumber),\n      DD_PHONE: valueDifferentFromInit('DD_PHONE', values.phone),\n      DD_BIRTHDATE: valueDifferentFromInit('DD_BIRTHDATE', values.birthdate)\n    }\n\n    updatePersona(prepareData)\n      .then(() => {\n        setIsLoading(false)\n        setShowModal(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const dynamicProps = (type:string) => ({ placeholder: `Persona ${type}`, id: type, type: 'text', className: 'line', onChange: changeInputValue, disabled: isLoading })\n\n  return (\n    <>\n      <button className=\"edit icon\" onClick={() => setShowModal(true)}>\n        <img src={PencilIcon} alt=\"Edit Persona\" />\n      </button>\n\n      <Modal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        title={<><img src={PersonaIcon} alt=\"pesona\" /> Edit persona</>}\n        className=\"edit-personal-modal\"\n      >\n        <div>\n          <h2>Edit Persona</h2>\n          {truncateAddressDid(did)}\n          <p>You can edit your personal that be saved in your data vault.</p>\n\n          <p><label>Name: <input value={values.name} {...dynamicProps('name')} /></label></p>\n          <p><label>Email: <input value={values.email} {...dynamicProps('email')} /></label></p>\n          <p><label>Address: <input value={values.address} {...dynamicProps('address')} /></label></p>\n          <p><label>Id Number: <input value={values.idnumber} {...dynamicProps('idnumber')} /></label></p>\n          <p><label>Phone Number: <input value={values.phone} {...dynamicProps('phone')} /></label></p>\n          <p><label>Birthdate: <input value={values.birthdate} {...dynamicProps('birthdate')} /></label></p>\n\n          <p>\n            <BaseButton\n              className=\"save blue\"\n              onClick={save}\n              disabled={isLoading}\n            >Save</BaseButton></p>\n\n          {isError && <div className=\"alert error\">{isError}</div>}\n          {isLoading && <LoadingComponent />}\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default EditPersonaModal\n","import React from 'react'\nimport rifIdManager from '../../../assets/images/rif-id-manager-gray.svg'\nimport NetworkStatus from '../../../components/NetworkStatus/NetworkStatus'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\nimport UserIcon from '../../../components/UserIcon/UserIcon'\nimport EditPersonaModal from '../../DataVault/components/EditPersonaModal'\nimport { DataVaultKey } from '../../state/reducers/datavault'\n\ninterface HeaderComponentInterface {\n  did?: string\n  chainId?: number\n  persona: DataVaultKey\n  hasDataVault: boolean\n  updatePersona: (items: DataVaultKey) => Promise<any>\n}\n\nconst Header: React.FC<HeaderComponentInterface> = ({ did, chainId, persona, hasDataVault, updatePersona }) => (\n  <header className=\"container\">\n    <div className=\"columnDouble branding\">\n      <div className=\"logo\">\n        <img src={rifIdManager} alt=\"RIF Id Manager\" />\n      </div>\n      <h1 className=\"persona\">\n        {did && (\n          <>\n            <UserIcon value={did} size={40} />\n            {persona.DD_NAME[0].content !== ''\n              ? <div>{persona.DD_NAME[0].content}</div>\n              : <ToolTip hoverContent={did}><div>{truncateAddressDid(did)}</div></ToolTip>\n            }\n          </>\n        )}\n      </h1>\n      {hasDataVault && (\n        <EditPersonaModal\n          did={did}\n          initValue={persona}\n          updatePersona={updatePersona}\n        />\n      )}\n    </div>\n    <div className=\"column network\">\n      {chainId && <NetworkStatus connected chainId={chainId} />}\n    </div>\n  </header>\n)\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst PanelWrapper = styled.div`\n  background: #FFFFFF;\n  box-shadow: 0px 4px 20px rgba(145, 145, 145, 0.1);\n  border-radius: 20px;\n  padding: 10px 0;\n`\nconst PanelHeader = styled.div`\n  padding: 10px 25px 10px 25px;\n  border-bottom: 1px solid #F2F2F2;\n  margin: 0 0 15px 0;\n`\n\nconst PanelTitle = styled.p`\n  display: inline-block;\n  font-weight: 600 !important;\n  font-size: 16px;\n  line-height: 19px;\n  color: #50555c;\n  margin: 0;\n  padding: 0;\n`\n\nconst PanelRight = styled.div`\n  float: right;\n`\n\nconst PanelContent = styled.div`\n  padding: 25px 50px;\n`\n\ninterface PanelInterface {\n  title?: string | ReactNode\n  className?: string\n  headerRight?: string | ReactNode\n  children: ReactNode\n}\n\nconst Panel: React.FC<PanelInterface> = ({ title, headerRight, children, className }) => (\n  <PanelWrapper className={`panel ${className}`}>\n    {title && (\n      <PanelHeader className=\"panel-header\">\n        <PanelTitle className=\"panel-title\">{title}</PanelTitle>\n        {headerRight && <PanelRight className=\"panel-right\">{headerRight}</PanelRight>}\n      </PanelHeader>\n    )}\n    <PanelContent className=\"panel-content\">\n      {children}\n    </PanelContent>\n  </PanelWrapper>\n)\n\nexport default Panel\n","import React, { useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\n\nexport interface Web3ProviderContextInterface {\n  provider: any | null,\n  setProvider?: (value: any) => void\n  dvClient: DataVaultWebClient | null,\n  setDvClient?: (client: DataVaultWebClient) => void\n}\n\nexport const Web3ProviderContext = React.createContext<Web3ProviderContextInterface>({\n  provider: null,\n  dvClient: null\n})\n\ninterface Web3ProviderElementInterface {\n  children: React.ReactNode,\n}\n\nexport const Web3ProviderElement: React.FC<Web3ProviderElementInterface> = ({ children }) => {\n  const [provider, setProvider] = useState<any | null>(null)\n  const [dvClient, setDvClient] = useState<DataVaultWebClient | null>(null)\n\n  const initialContext: Web3ProviderContextInterface = {\n    provider: provider,\n    setProvider: (provider: any) => setProvider(provider),\n    dvClient: dvClient,\n    setDvClient: (client: DataVaultWebClient) => setDvClient(client)\n  }\n\n  return (\n    <Web3ProviderContext.Provider value={initialContext}>\n      {children}\n    </Web3ProviderContext.Provider>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { Authentication } from 'did-resolver'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport { truncateAddressDid } from '../../formatters'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface DelegateComponentInterface {\n  delegates?: Authentication[] | null\n  chainId?: number | null\n  addDelegate: (provider: any, delegate: string) => any\n  isOwner: boolean\n}\n\nconst DelegateComponent: React.FC<DelegateComponentInterface> = ({ delegates, chainId, addDelegate, isOwner }) => {\n  const [add, setAdd] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [newDelegate, setNewDelegate] = useState<string>('')\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleAddDelegate = () => {\n    resetState()\n\n    if (!isValidAddress(newDelegate)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newDelegate !== newDelegate.toLowerCase() && !isValidChecksumAddress(newDelegate, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n\n    if (delegates?.filter(item => item.publicKey.indexOf(newDelegate) !== -1).length !== 0) {\n      resetState()\n      return setIsError('This address is already a delegate.')\n    }\n\n    setIsLoading(true)\n    addDelegate(context?.provider, newDelegate)\n      .then(() => {\n        setAdd(false)\n        setNewDelegate('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setAdd(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Controllers</h2>\n      <ul className=\"value\">\n        {delegates?.map((delegate: Authentication) =>\n          <li key={delegate.publicKey}>\n            <ToolTip hoverContent={delegate.publicKey}>\n              {truncateAddressDid(delegate.publicKey.slice(delegate.publicKey.lastIndexOf(':') + 1, delegate.publicKey.indexOf('#')))}\n            </ToolTip>\n          </li>)\n        }\n      </ul>\n\n      {isOwner && <BaseButton onClick={() => setAdd(true)}>Add Delegate</BaseButton>}\n      <Modal show={add} title=\"Delegate Identity\" onClose={handleClose}>\n        <div className=\"delegate-identity\">\n          <p>Controllers can manage the identity but they are not the owners. Only the owners can transfer identities.</p>\n          <p>\n            <strong>Delegate to: </strong>\n            <input\n              type=\"text\"\n              value={newDelegate}\n              onChange={evt => setNewDelegate(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleAddDelegate}>Add controller</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DelegateComponent\n","import React, { useContext, useState } from 'react'\nimport { truncateAddressDid } from '../../formatters'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { BaseButton } from '../Buttons'\nimport { isValidAddress, isValidChecksumAddress } from 'rskjs-util'\nimport Modal from '../Modal/Modal'\nimport ToolTip from '../Tooltip/Tooltip'\n\ninterface OwnerComponentInterface {\n  owner?: string | null\n  isOwner: boolean\n  chainId?: number | null\n  changeOwner: (provider: any, newOwner: string) => any\n}\n\nconst OwnerComponent: React.FC<OwnerComponentInterface> = ({ owner, isOwner, chainId, changeOwner }) => {\n  const [edit, setEdit] = useState<boolean>(false)\n  const [newOwner, setNewOwner] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const context = useContext(Web3ProviderContext)\n\n  const resetState = () => {\n    setIsError(null)\n    setIsLoading(false)\n  }\n\n  const handleSetOwner = () => {\n    resetState()\n\n    if (!isValidAddress(newOwner)) {\n      resetState()\n      return setIsError('Invalid Address')\n    }\n\n    if (newOwner !== newOwner.toLowerCase() && !isValidChecksumAddress(newOwner, chainId)) {\n      resetState()\n      return setIsError('Checksum is incorrect.')\n    }\n    setIsLoading(true)\n    changeOwner(context?.provider, newOwner)\n      .then(() => {\n        setEdit(false)\n        setNewOwner('')\n        resetState()\n      })\n      .catch((err: Error) => {\n        resetState()\n        setIsError(err.message)\n      })\n  }\n\n  const handleClose = () => {\n    if (!isLoading) {\n      setEdit(false)\n      resetState()\n    }\n  }\n\n  return (\n    <div className=\"column\">\n      <h2>Owner</h2>\n      <p className=\"value\">\n        {owner && <ToolTip hoverContent={owner}>{truncateAddressDid(owner)}</ToolTip>}\n      </p>\n\n      {isOwner && <BaseButton onClick={() => setEdit(!edit)}>Change Owner</BaseButton>}\n\n      <Modal show={edit} title=\"Transfer Identity\" onClose={handleClose}>\n        <div className=\"change-owner\">\n          <p>Be aware that once you transfer the identity, you will lose ownership and can no longer manage the identity.</p>\n          <p>\n            <strong>Transfer to: </strong>\n            <input\n              type=\"text\"\n              value={newOwner}\n              onChange={evt => setNewOwner(evt.target.value)}\n              placeholder=\"address\"\n              className=\"line\"\n              disabled={isLoading}\n            />\n          </p>\n          <BaseButton className=\"blue\" disabled={isLoading} onClick={handleSetOwner}>Transfer</BaseButton>\n          {isError && <p>{isError}</p>}\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport default OwnerComponent\n","import { Authentication } from 'did-resolver'\nimport React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { displayIdentity } from '../../../formatters'\nimport DelegateComponent from '../../../components/EthrDid/DelegateComponent'\nimport OwnerComponent from '../../../components/EthrDid/OwnerComponent'\n\ninterface IdentityInformationPanelI {\n  address?: string | null\n  chainId?: number | null\n  owner?: string | null\n  delegates?: Authentication[]\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n}\n\nconst IdentityInformationPanel: React.FC<IdentityInformationPanelI> = ({ address, chainId, owner, delegates, changeOwner, addDelegate }) => {\n  const [isAdvanced, setIsAdvanced] = useState<boolean>(false)\n  const advancedToggle = <button className=\"advancedToggle\" onClick={() => setIsAdvanced(!isAdvanced)}>{isAdvanced ? 'Basic' : 'Advanced'}</button>\n  const isOwner = address?.toLowerCase() === owner?.toLowerCase()\n  if (!address || !chainId) return <></>\n\n  return (\n    <div className=\"container\">\n      <div className=\"column\">\n        <Panel\n          title=\"Identity information\"\n          className=\"identity-information\"\n          headerRight={advancedToggle}\n        >\n          <div className=\"container\">\n            <div className=\"column\">\n              <h2>Identity Address</h2>\n              <p className=\"value\">\n                <ToolTip hoverContent={address}>{displayIdentity(address, chainId)}</ToolTip>\n              </p>\n            </div>\n            {isAdvanced && (\n              <>\n                {owner && <OwnerComponent isOwner={isOwner} owner={owner} changeOwner={changeOwner} />}\n                {delegates && <DelegateComponent isOwner={isOwner} delegates={delegates} addDelegate={addDelegate} />}\n              </>\n            )}\n          </div>\n        </Panel>\n      </div>\n    </div>\n  )\n}\n\nexport default IdentityInformationPanel\n","import React, { useContext, useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Modal from '../../../components/Modal/Modal'\nimport Panel from '../../../components/Panel/Panel'\nimport { Web3ProviderContext } from '../../../providerContext'\nimport { Token } from '../../state/reducers/tokens'\nimport { isValidAddress } from 'rskjs-util'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { truncateAddressDid } from '../../../formatters'\n\ninterface BalanceInterface {\n  tokens?: Token[]\n  addCustomToken: (provider: any, tokenAddress: string) => any\n}\n\nconst needHover = (original: number | null | undefined) => {\n  if (!original) { return original }\n  const rounded = parseFloat(original.toFixed(8))\n  return rounded === original ? original : <ToolTip hoverContent={original}>{rounded}</ToolTip>\n}\n\nconst SingleToken: React.FC<{ token: Token, key: any }> = ({ token }) => (\n  <div className=\"token\">\n    <div className=\"heading-symbol\">\n      {token.name || `Custom token: ${truncateAddressDid(token.address)}`}</div>\n    <div>\n      <span className=\"balance\">{needHover(token.balance)}</span>\n      <span className=\"symbol\">{token.symbol}</span>\n    </div>\n  </div>\n)\n\nconst Balance: React.FC<BalanceInterface> = ({ tokens, addCustomToken }) => {\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [newAddress, setNewAddress] = useState<string>('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const context = useContext(Web3ProviderContext)\n\n  const togglePopup = () => {\n    setIsAdding(!isAdding)\n    setNewAddress('')\n  }\n\n  const addToken = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (!isValidAddress(newAddress)) {\n      setIsLoading(false)\n      return setIsError('Not a valid address!')\n    }\n    addCustomToken(context?.provider, newAddress)\n      .then(() => {\n        setIsLoading(false)\n        setIsAdding(false)\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  return (\n    <Panel\n      title=\"Identity Balance\"\n      className=\"identity-balance\"\n      headerRight={<button onClick={togglePopup} className=\"circle-plus\">+</button>}\n    >\n      {tokens?.map((token: Token) => <SingleToken key={token.address} token={token} />)}\n\n      <Modal show={isAdding} title=\"Add token\" onClose={togglePopup}>\n        <p>Add an ERC20 or ERC721 token to the dashboard.</p>\n        <p>\n          <strong>Token to Add:</strong>\n          <input\n            type=\"text\"\n            value={newAddress}\n            onChange={evt => setNewAddress(evt.target.value)}\n            placeholder=\"contract address\"\n            className=\"line\"\n            disabled={isLoading}\n          />\n        </p>\n        <BaseButton\n          onClick={addToken}\n          className=\"blue\"\n          disabled={isLoading}\n        >Add Token</BaseButton>\n        {isError && <p>{isError}</p>}\n      </Modal>\n    </Panel>\n  )\n}\n\nexport default Balance\n","export default __webpack_public_path__ + \"static/media/data-vault.c8c9253d.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarInterface {\n  total: number,\n  value: number\n}\n\nconst BarWrapper = styled.div`\n  height: 20px;\n  position: relative;\n  background: #EAEAEA;\n  -moz-border-radius: 25px;\n  -webkit-border-radius: 25px;\n  border-radius: 12.5px;\n  padding: 10px;\n  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\n`\n\nconst BarProgress = styled.div`\n  display: block;\n  height: 100%;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: #47C4E1;\n  box-shadow:\n    inset 0 2px 9px  rgba(255,255,255,0.3),\n    inset 0 -2px 6px rgba(0,0,0,0.4);\n  position: relative;\n  overflow: hidden;\n  }\n`\n\nconst ProgressBar: React.FC<ProgressBarInterface> = ({ total, value }) => {\n  const width = value < total ? Math.ceil((value * 100) / total) : 100\n  return (\n    <BarWrapper className=\"progress-wrapper\">\n      <BarProgress className=\"progress\" style={{ width: `${width}%` }}></BarProgress>\n    </BarWrapper>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport datavaultIcon from '../../../assets/images/icons/data-vault.svg'\nimport { BaseButton } from '../../../components/Buttons'\nimport ProgressBar from '../../../components/ProgressBar/ProgressBar'\nimport ToolTip from '../../../components/Tooltip/Tooltip'\nimport { DataVaultStorageState } from '../../state/reducers/datavault'\n\ninterface DataVaultSummaryInterface {\n  storage?: DataVaultStorageState\n  handleButton: () => void\n}\n\nconst DataVaultSummary: React.FC<DataVaultSummaryInterface> = ({ storage, handleButton }) =>\n  storage ? (\n    <Panel title={<><img src={datavaultIcon} alt=\"DataVault\" /> DataVault Summary</>} className=\"dataVault\">\n      <h2>Storage Usage</h2>\n      <div className=\"container\">\n        <div className=\"columnDouble\">\n          <ToolTip className=\"tooltip-progress\" hoverContent={<p>{storage.used} of {(storage.available + storage.used).toLocaleString()} bytes</p>}>\n            <ProgressBar total={(storage.available + storage.used)} value={storage.used} />\n          </ToolTip>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={handleButton} className=\"turquoise panel-button\">DataVault</BaseButton>\n        </div>\n      </div>\n    </Panel>\n  )\n    : <></>\n\nexport default DataVaultSummary\n","import React from 'react'\nimport IdentityInformationComponent from './panels/IdentityInformation'\nimport { Authentication } from 'did-resolver'\nimport Balance from './panels/Balance'\nimport { Token } from '../state/reducers/tokens'\nimport DataVaultSummary from './panels/DataVaultSummary'\nimport { screens } from '../Authenticated/components/Navigation'\nimport { DataVaultStorageState } from '../state/reducers/datavault'\n\ninterface DashboardScreenInterface {\n  chainId?: number | null\n  address: string | null\n  owner?: string | null\n  delegates?: Authentication[]\n  tokens?: Token[]\n  storage?: DataVaultStorageState\n  changeOwner: (provider: any, newOwner: string) => any\n  addDelegate: (provider: any, delegateAddr: string) => any\n  addCustomToken: (provider: any, tokenAddr: string) => any\n  changeScreen: (screen: string) => void\n}\n\nconst DashboardScreen: React.FC<DashboardScreenInterface> = ({\n  chainId, address, owner, delegates, tokens, changeOwner, addDelegate, addCustomToken, changeScreen, storage\n}) => {\n  return (\n    <div className=\"content dashboard\">\n      <IdentityInformationComponent\n        address={address}\n        chainId={chainId}\n        owner={owner}\n        delegates={delegates}\n        changeOwner={changeOwner}\n        addDelegate={addDelegate}\n      />\n      <div className=\"container\">\n        <div className=\"column\">\n          <Balance tokens={tokens} addCustomToken={addCustomToken} />\n        </div>\n        <div className=\"column\">\n          <DataVaultSummary storage={storage} handleButton={() => changeScreen(screens.DATAVAULT)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DashboardScreen\n","import { connect } from 'react-redux'\nimport { Authentication, DIDDocument, PublicKey } from 'did-resolver'\nimport { stateInterface } from '../state/configureStore'\nimport DasboardScreen from './DashboardScreen'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport { setDidOwner, addDelegate } from '../state/operations/ethrdid'\nimport { addCustomToken } from '../state/operations/tokens'\n\nconst getOwnerFromDidDoc = (didDocument: DIDDocument) => {\n  const controller = didDocument.publicKey.filter((pk: PublicKey) => pk.id.endsWith('#controller'))[0]\n  return (typeof controller === 'undefined') ? null : controller.ethereumAddress\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  tokens: state.tokens.tokens,\n  owner: getOwnerFromDidDoc(state.ethrdid.didDocument),\n  delegates: state.ethrdid.didDocument.authentication?.filter((pk: Authentication) => !pk.publicKey.endsWith('controller')),\n  storage: state.datavault.storage\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  changeOwner: (provider: any, newOwner: string) => dispatch(setDidOwner(provider, newOwner)),\n  addDelegate: (provider: any, newDelegate: string) => dispatch(addDelegate(provider, newDelegate)),\n  addCustomToken: (provider: any, userAddr: string, tokenAddr: string, chainId: number) => dispatch(addCustomToken(provider, userAddr, tokenAddr, chainId))\n})\n\nconst mergeProps = (stateProps: any, dispatchProps: any, ownProps: any) => ({\n  ...stateProps,\n  ...dispatchProps,\n  ...ownProps,\n  addCustomToken: (provider: any, tokenAddr: string) => dispatchProps.addCustomToken(provider, stateProps.address, tokenAddr, stateProps.chainId)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(DasboardScreen)\n","export default __webpack_public_path__ + \"static/media/declarative-details.0f849d72.svg\";","export default __webpack_public_path__ + \"static/media/trash.4ceb20aa.svg\";","import React from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface BinaryModalInterface {\n  show: boolean\n  title?: string\n  disabled?: boolean\n  strings?: {\n    text?: string\n    confirm?: string\n    deny?: string\n  }\n  className?: string\n  onConfirm: () => void\n  onDeny?: () => void\n  onClose: () => void\n}\n\nconst BinaryModal: React.FC<BinaryModalInterface> = ({\n  show, title, disabled, className, onConfirm, onClose, onDeny, strings\n}) => {\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={title || 'Are you sure?'}>\n      <p>{strings?.text || 'Are you sure?'}</p>\n      <div className=\"container\">\n        <div className=\"column\">\n          <BaseButton onClick={onDeny || onClose} className=\"deny gray full\" disabled={disabled || false}>\n            {strings?.deny || 'Deny'}\n          </BaseButton>\n        </div>\n        <div className=\"column\">\n          <BaseButton onClick={onConfirm} className=\"confirm gray full\" disabled={disabled || false}>\n            {strings?.confirm || 'Confirm'}\n          </BaseButton>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default BinaryModal\n","import React, { useState, useEffect } from 'react'\nimport { BaseButton } from '../Buttons'\nimport Modal from './Modal'\n\ninterface EditValueModalInterface {\n  show: boolean\n  className?: string\n  onConfirm: (value: string) => void\n  onClose: () => void\n  disabled?: boolean\n  error?: string | null\n  initValue?: string\n  inputType?: 'input' | 'textarea'\n  strings?: {\n    title?: string,\n    intro?: string,\n    label?: string,\n    placeholder?: string,\n    submit?: string,\n  }\n}\n\nconst EditValueModal: React.FC<EditValueModalInterface> = ({\n  show, className, onConfirm, onClose, disabled, error, initValue, inputType, strings\n}) => {\n  const [editable, setEditable] = useState<string>('')\n  const sharedProps = {\n    onChange: (evt: { target: { value: React.SetStateAction<string> } }) => setEditable(evt.target.value as string),\n    disabled,\n    className: 'editable line',\n    placeholder: strings?.placeholder,\n    value: editable || ''\n  }\n\n  useEffect(() => {\n    setEditable(initValue || '')\n  }, [initValue])\n\n  return (\n    <Modal show={show} className={className} onClose={onClose} title={strings?.title || 'Edit Value'}>\n      <p className=\"intro-text\">{strings?.intro}</p>\n      <p>\n        <label>{strings?.label || 'Value:'}</label>\n        {inputType === 'textarea'\n          ? <textarea {...sharedProps} />\n          : <input type=\"text\" {...sharedProps} />}\n      </p>\n      <p>\n        <BaseButton\n          onClick={() => onConfirm(editable)}\n          disabled={disabled}\n          className=\"submit\"\n        >{strings?.submit || 'Submit'}</BaseButton>\n      </p>\n      {error && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{error}</div>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default EditValueModal\n","import React, { useState } from 'react'\nimport Panel from '../../../components/Panel/Panel'\nimport declarativeIcon from '../../../assets/images/icons/declarative-details.svg'\nimport trashIcon from '../../../assets/images/icons/trash.svg'\nimport pencilIcon from '../../../assets/images/icons/pencil.svg'\nimport { DataVaultContent, DataVaultKey } from '../../state/reducers/datavault'\nimport BinaryModal from '../../../components/Modal/BinaryModal'\nimport EditValueModal from '../../../components/Modal/EditValueModal'\n\ninterface DeclarativeDetailsDisplayInterface {\n  deleteValue: (key: string, id: string) => Promise<any>\n  swapValue: (key: string, content: string, id: string) => Promise<any>\n  details: DataVaultKey\n}\n\nconst DeclarativeDetailsDisplay: React.FC<DeclarativeDetailsDisplayInterface> = ({ details, deleteValue, swapValue }) => {\n  interface DeleteItemI { key: string; id: string }\n  interface EditItemI { key: string; item: DataVaultContent }\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<null | string>(null)\n  const [isDeleting, setIsDeleting] = useState<null | DeleteItemI>(null)\n  const [isEditing, setIsEditing] = useState<null | EditItemI>(null)\n\n  const handleDeleteItem = (item: DeleteItemI) => {\n    setIsLoading(true)\n    setIsError(null)\n\n    deleteValue(item.key, item.id)\n      .then(() => setIsDeleting(null))\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  const handleEditItem = (newValue: string, existingItem: EditItemI) => {\n    if (newValue === existingItem.item.content) {\n      return setIsError('New value is the same as the old.')\n    }\n\n    setIsLoading(true)\n    setIsError(null)\n\n    swapValue(existingItem.key, newValue, existingItem.item.id)\n      .then(() => {\n        setIsLoading(false)\n        setIsEditing(null)\n      })\n      .catch((err: Error) => setIsError(err.message))\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <Panel title={<><img src={declarativeIcon} /> Declarative Details</>} className=\"display\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"type\">Type</th>\n            <th className=\"content\">Content</th>\n          </tr>\n        </thead>\n        <tbody>\n          { Object.keys(details).map((key: string) => {\n            if (details[key].length !== 0) {\n              return (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>\n                    {details[key].map((item: DataVaultContent) => (\n                      <div className=\"content-row\" key={item.id}>\n                        <div className=\"content\">\n                          <p>{item.content}</p>\n                        </div>\n                        <div className=\"options\">\n                          <button\n                            disabled={isLoading}\n                            className=\"icon edit\"\n                            onClick={() => { setIsError(null); setIsEditing({ key, item }) }}\n                          >\n                            <img src={pencilIcon} alt=\"Edit item\" />\n                          </button>\n                          <button\n                            disabled={isLoading}\n                            className=\"icon delete\"\n                            onClick={() => setIsDeleting({ key, id: item.id })}>\n                            <img src={trashIcon} alt=\"Delete Item\" />\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </td>\n                </tr>\n              )\n            }\n          }\n          )}\n        </tbody>\n      </table>\n\n      <EditValueModal\n        show={isEditing !== null}\n        onClose={() => setIsEditing(null)}\n        onConfirm={(value: string) => isEditing && handleEditItem(value, isEditing)}\n        disabled={isLoading}\n        strings={{ title: 'Edit value in the DataVault', label: 'New value', submit: 'Update' }}\n        className=\"edit-modal\"\n        initValue={isEditing ? isEditing.item.content : ''}\n        inputType=\"textarea\"\n        error={isError}\n      />\n\n      <BinaryModal\n        show={isDeleting !== null}\n        onClose={() => setIsDeleting(null)}\n        onConfirm={() => isDeleting && handleDeleteItem(isDeleting)}\n        disabled={isLoading}\n        strings={{ text: 'Do you want to delete this item from the data vault?', confirm: 'Yes', deny: 'No' }}\n        className=\"delete-modal\"\n      />\n    </Panel>\n  )\n}\n\nexport default DeclarativeDetailsDisplay\n","export default __webpack_public_path__ + \"static/media/upload.f7f9ea67.svg\";","import React, { useState } from 'react'\nimport { BaseButton } from '../../../components/Buttons'\nimport Panel from '../../../components/Panel/Panel'\nimport uploadIcon from '../../../assets/images/icons/upload.svg'\nimport LoadingComponent from '../../../components/Loading/LoadingComponent'\n\ninterface AddDeclarativeDetailsInterface {\n  addDeclarativeDetail: (key: string, content: string) => Promise<any>\n}\n\nconst AddDeclarativeDetails: React.FC<AddDeclarativeDetailsInterface> = ({ addDeclarativeDetail }) => {\n  const [type, setType] = useState('')\n  const [content, setContent] = useState('')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<string | null>(null)\n\n  const handleClick = () => {\n    setIsLoading(true)\n    setIsError(null)\n\n    if (type === '' || content === '') {\n      setIsLoading(false)\n      return setIsError('Type and Content cannot be empty.')\n    }\n\n    addDeclarativeDetail(type, content)\n      .then(() => {\n        setIsLoading(false)\n        setContent('')\n        setType('')\n      })\n      .catch((err: Error) => {\n        setIsLoading(false)\n        setIsError(err.message)\n      })\n  }\n\n  const title = <><img src={uploadIcon} /> Add New Declarative Details</>\n\n  return (\n    <Panel title={title} className=\"add-declarative\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <p className=\"title\">Type</p>\n          <input type=\"text\"\n            className=\"line type\"\n            value={type}\n            onChange={(evt) => setType(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content type\" />\n        </div>\n        <div className=\"columnDouble\">\n          <p className=\"title\">Content</p>\n          <textarea\n            className=\"line content\"\n            value={content}\n            onChange={(evt) => setContent(evt.target.value)}\n            disabled={isLoading}\n            placeholder=\"Content\"\n          />\n        </div>\n        <div className=\"column submitColumn\">\n          <BaseButton className=\"submit turquoise\" onClick={handleClick} disabled={isLoading}>Add Data</BaseButton>\n        </div>\n      </div>\n      {isError && (\n        <div className=\"error container\">\n          <div className=\"alert error\">{isError}</div>\n        </div>\n      )}\n\n      {isLoading && <LoadingComponent />}\n    </Panel>\n  )\n}\n\nexport default AddDeclarativeDetails\n","import React, { useContext } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport DeclarativeDetailsDisplay from './panels/DeclarativeDetailsDisplay'\nimport AddDeclarativeDetails from './panels/AddDeclarativeDetails'\nimport { DataVaultKey } from '../state/reducers/datavault'\nimport { Web3ProviderContext } from '../../providerContext'\n\ninterface DataVaultComponentProps {\n  declarativeDetails: DataVaultKey\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) => any\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) => any\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) => any\n}\n\nconst DataVaultComponent: React.FC<DataVaultComponentProps> = ({\n  addDeclarativeDetail, declarativeDetails, deleteValue, swapValue\n}) => {\n  const context = useContext(Web3ProviderContext)\n\n  const handleAdd = (key: string, content: string) =>\n    context.dvClient && addDeclarativeDetail(context.dvClient, key, content)\n  const handleDelete = (key: string, id: string) =>\n    context.dvClient && deleteValue(context.dvClient, key, id)\n  const handleSwap = (key: string, content: string, id: string) =>\n    context.dvClient && swapValue(context.dvClient, key, content, id)\n\n  return (\n    <div className=\"content data-vault\">\n      <div className=\"container\">\n        <div className=\"column\">\n          <AddDeclarativeDetails addDeclarativeDetail={handleAdd} />\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"column\">\n          <DeclarativeDetailsDisplay\n            details={declarativeDetails}\n            deleteValue={handleDelete}\n            swapValue={handleSwap}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DataVaultComponent\n","import { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport DataVaultComponent from './DataVaultComponent'\nimport { AnyAction } from 'redux'\nimport { createDataVaultContent, deleteDataVaultContent, swapDataVaultContent } from '../state/operations/datavault'\n\nconst mapStateToProps = (state: stateInterface) => ({\n  declarativeDetails: state.datavault.data\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  addDeclarativeDetail: (client: DataVaultWebClient, key: string, content: string) =>\n    dispatch(createDataVaultContent(client, key, content)),\n  deleteValue: (client: DataVaultWebClient, key: string, id: string) =>\n    dispatch(deleteDataVaultContent(client, key, id)),\n  swapValue: (client: DataVaultWebClient, key: string, content: string, id: string) =>\n    dispatch(swapDataVaultContent(client, key, content, id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataVaultComponent)\n","import React, { useContext, useState } from 'react'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport HeaderComponent from './components/HeaderComponent'\nimport Navigation, { screens } from './components/Navigation'\nimport DashboardContainer from '../Dashboard/DashboardContainer'\nimport DataVaultContainer from '../DataVault/DataVaultContainer'\nimport { Web3ProviderContext } from '../../providerContext'\nimport { createDidFormat } from '../../formatters'\nimport { DataVaultKey } from '../state/reducers/datavault'\n\ninterface AuthenticatedComponentInterface {\n  chainId: number | null\n  address: string | null\n  persona: DataVaultKey\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) => any\n}\n\nconst AuthenticatedComponent: React.FC<AuthenticatedComponentInterface> = ({ chainId, address, persona, modifyMultipleItems }) => {\n  const [screen, setScreen] = useState<screens>(screens.DASHBOARD)\n  const context = useContext(Web3ProviderContext)\n\n  const changeScreen = (screen: screens) => setScreen(screen)\n  const updatePersona = (items: DataVaultKey) => context.dvClient && modifyMultipleItems(context.dvClient, items)\n\n  return (\n    <>\n      <HeaderComponent\n        chainId={chainId || undefined}\n        did={(address && chainId) ? createDidFormat(address, chainId) : undefined}\n        persona={persona}\n        hasDataVault={!!context.dvClient}\n        updatePersona={updatePersona}\n      />\n      <Navigation\n        selected={screen}\n        handleClick={changeScreen}\n        showDataVault={!!context.dvClient}\n      />\n      {screen === screens.DASHBOARD && <DashboardContainer changeScreen={changeScreen} />}\n      {screen === screens.DATAVAULT && <DataVaultContainer />}\n    </>\n  )\n}\n\nexport default AuthenticatedComponent\n","import { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AnyAction } from 'redux'\nimport DataVaultWebClient from '@rsksmart/ipfs-cpinner-client'\nimport { stateInterface } from '../state/configureStore'\nimport AuthenticatedComponent from './AuthenticatedComponent'\nimport { modifyMultipleItems } from '../state/operations/datavault'\nimport { DataVaultKey } from '../state/reducers/datavault'\n\n/**\n * Get items that are specifically to the Persona from the DataVault collection\n * @param data Data from the datavault\n */\nexport const getPersonaDeclarativeDetails = (data: DataVaultKey) => {\n  const personaItems = ['DD_NAME', 'DD_EMAIL', 'DD_ADDRESS', 'DD_IDNUMBER', 'DD_PHONE', 'DD_BIRTHDATE']\n  const returnValueOrEmpty = (key: string) => data[key] && data[key][0] ? data[key] : [{ id: '', content: '' }]\n\n  const values: DataVaultKey = {}\n  personaItems.forEach((key: string) => {\n    values[key] = returnValueOrEmpty(key)\n  })\n\n  return values\n}\n\nconst mapStateToProps = (state: stateInterface) => ({\n  address: state.identity.address,\n  chainId: state.identity.chainId,\n  persona: getPersonaDeclarativeDetails(state.datavault.data)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<stateInterface, {}, AnyAction>) => ({\n  modifyMultipleItems: (client: DataVaultWebClient, items: DataVaultKey) =>\n    dispatch(modifyMultipleItems(client, items))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthenticatedComponent)\n","export default __webpack_public_path__ + \"static/media/powered-by-iov.a0397e40.svg\";","export default __webpack_public_path__ + \"static/media/powered-by-iov-gray.e25db553.svg\";","import React from 'react'\nimport powered from '../../assets/images/powered-by-iov.svg'\nimport poweredGray from '../../assets/images/powered-by-iov-gray.svg'\n\ninterface RifFooterInterface {\n  isLoggedIn: boolean\n  version: string\n}\n\nconst RifFooter: React.FC<RifFooterInterface> = ({ isLoggedIn, version }) => (\n  <footer className=\"app-footer\">\n    <img src={isLoggedIn ? poweredGray : powered} alt=\"Powered By IOV\" />\n    <p>Copyright &copy; 2020 IOV Labs. All rights reserved.</p>\n    <p>Version {version}</p>\n  </footer>\n)\n\nexport default RifFooter\n","import React, { useContext } from 'react'\nimport '../assets/scss/_index.scss'\nimport { version } from '../../package.json'\nimport LoginScreenContainer from './Login/LoginScreenContainer'\nimport AuthenticatedContainer from './Authenticated/AuthenticatedContainer'\nimport RifFooter from '../components/RifFooter/RifFooter'\nimport { Web3ProviderContext } from '../providerContext'\n\nconst App = () => {\n  const context = useContext(Web3ProviderContext)\n  const isLoggedIn = context?.provider\n\n  return (\n    <div className={isLoggedIn ? 'app loggedin' : 'app login'}>\n      {isLoggedIn\n        ? <AuthenticatedContainer />\n        : <LoginScreenContainer context={context} />\n      }\n      <RifFooter isLoggedIn={isLoggedIn} version={version} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport identityReducer, { IdentityState } from './reducers/identity'\nimport ethrdidReducer, { EtherdidState } from './reducers/ethrdid'\nimport tokenReducer, { TokenState } from './reducers/tokens'\nimport dataVaultReducer, { DataVaultState } from './reducers/datavault'\n\nconst middleware = [thunk, createLogger()]\n\nexport interface stateInterface {\n  identity: IdentityState,\n  ethrdid: EtherdidState,\n  tokens: TokenState\n  datavault: DataVaultState\n}\n\nconst rootReducer = combineReducers({\n  identity: identityReducer,\n  ethrdid: ethrdidReducer,\n  tokens: tokenReducer,\n  datavault: dataVaultReducer\n})\n\nconst configureStore = (prelodedState?: any) =>\n  createStore(rootReducer, prelodedState, applyMiddleware(...middleware))\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport { Web3ProviderElement } from './providerContext'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport configureStore from './app/state/configureStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Web3ProviderElement>\n        <App />\n      </Web3ProviderElement>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}